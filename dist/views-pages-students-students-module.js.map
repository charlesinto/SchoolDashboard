{"version":3,"sources":["webpack:///./src/app/views/pages/students/dropout-risk-analysis/dropout-risk-analysis.component.html","webpack:///./src/app/views/pages/students/student-detail/student-detail.component.html","webpack:///./src/app/views/pages/students/students.component.html","webpack:///./src/app/views/pages/students/uploadstudents/upload-teacher-component.html","webpack:///./src/app/views/pages/students/dropout-risk-analysis/dropout-risk-analysis.component.scss","webpack:///./src/app/views/pages/students/dropout-risk-analysis/dropout-risk-analysis.component.ts","webpack:///./src/app/views/pages/students/student-detail/student-detail.component.scss","webpack:///./src/app/views/pages/students/student-detail/student-detail.component.ts","webpack:///./src/app/views/pages/students/students-routing.module.ts","webpack:///./src/app/views/pages/students/students.component.scss","webpack:///./src/app/views/pages/students/students.component.ts","webpack:///./src/app/views/pages/students/students.module.ts","webpack:///./src/app/views/pages/students/students.service.ts","webpack:///./src/app/views/pages/students/uploadstudents/upload-teacher-component.scss","webpack:///./src/app/views/pages/students/uploadstudents/upload-teacher-component.ts"],"names":[],"mappings":"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","file":"views-pages-students-students-module.js","sourcesContent":["module.exports = \"<div class=\\\"row mb-2\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <mat-progress-bar\\n      *ngIf=\\\"loadingFilterBox\\\"\\n      mode=\\\"indeterminate\\\"\\n    ></mat-progress-bar>\\n    <kt-portlet [class]=\\\"'kt-portlet--height-fluid'\\\">\\n      <kt-portlet-header\\n        [title]=\\\"'Filter Report'\\\"\\n        [class]=\\\"\\n          'kt-portlet__head--lg kt-portlet__head--noborder kt-portlet__head--break-sm'\\n        \\\"\\n      >\\n        <ng-container ktPortletTools>\\n          <!-- <kt-context-menu></kt-context-menu> -->\\n        </ng-container>\\n      </kt-portlet-header>\\n      <kt-portlet-body [class]=\\\"'kt-portlet__body--fit'\\\">\\n        <ng-container ktPortletTools>\\n          <div class=\\\"container\\\">\\n            <form (ngSubmit)=\\\"filterData()\\\" class=\\\"pb-4\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                  <mat-form-field>\\n                    <mat-select\\n                      placeholder=\\\"State\\\"\\n                      [formControl]=\\\"statesSelected\\\"\\n                      (selectionChange)=\\\"onStateSelectionChange($event)\\\"\\n                    >\\n                      <mat-select-trigger>\\n                        {{ statesSelected.value }}\\n                        <!-- <span\\n                          *ngIf=\\\"statesSelected.value?.length > 1\\\"\\n                          class=\\\"example-additional-selection\\\"\\n                        >\\n                          (+{{ statesSelected.value.length - 1 }} others)\\n                        </span> -->\\n                      </mat-select-trigger>\\n                      <mat-option [value]=\\\"'All'\\\">All</mat-option>\\n                      <mat-option\\n                        *ngFor=\\\"let topping of states\\\"\\n                        [value]=\\\"topping.name\\\"\\n                        >{{ topping.name }}</mat-option\\n                      >\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <mat-form-field>\\n                    <mat-select\\n                      placeholder=\\\"Local Government Area\\\"\\n                      [formControl]=\\\"lgaSelected\\\"\\n                      (selectionChange)=\\\"onlgaSelectionChange($event)\\\"\\n                    >\\n                      <mat-select-trigger>\\n                        {{ lgaSelected.value }}\\n                        <!-- <span\\n                          *ngIf=\\\"lgaSelected.value?.length > 1\\\"\\n                          class=\\\"example-additional-selection\\\"\\n                        >\\n                          (+{{ lgaSelected.value.length - 1 }} others)\\n                        </span> -->\\n                      </mat-select-trigger>\\n                      <mat-option\\n                        *ngFor=\\\"let topping of localgovernments\\\"\\n                        [value]=\\\"topping.name\\\"\\n                        >{{ topping.name }}</mat-option\\n                      >\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <mat-form-field>\\n                    <mat-select\\n                      placeholder=\\\"School\\\"\\n                      [formControl]=\\\"schoolSelected\\\"\\n                    >\\n                      <mat-select-trigger>\\n                        {{ schoolSelected.value }}\\n                        <!-- <span\\n                          *ngIf=\\\"schoolSelected.value?.length > 1\\\"\\n                          class=\\\"example-additional-selection\\\"\\n                        >\\n                          (+{{ schoolSelected.value.length - 1 }} others)\\n                        </span> -->\\n                      </mat-select-trigger>\\n                      <mat-option\\n                        *ngFor=\\\"let topping of schools\\\"\\n                        [value]=\\\"topping.schoolName\\\"\\n                        >{{ topping.schoolName }}</mat-option\\n                      >\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                  <mat-form-field>\\n                    <mat-select\\n                      placeholder=\\\"Class\\\"\\n                      [formControl]=\\\"classSelected\\\"\\n                      multiple\\n                    >\\n                      <mat-select-trigger>\\n                        {{ classSelected.value ? classSelected.value[0] : \\\"\\\" }}\\n                        <span\\n                          *ngIf=\\\"classSelected.value?.length > 1\\\"\\n                          class=\\\"example-additional-selection\\\"\\n                        >\\n                          (+{{ classSelected.value.length - 1 }} others)\\n                        </span>\\n                      </mat-select-trigger>\\n                      <mat-option\\n                        *ngFor=\\\"let class of classes\\\"\\n                        [value]=\\\"class\\\"\\n                        >{{ class }}</mat-option\\n                      >\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <mat-form-field appearance=\\\"fill\\\">\\n                    <mat-label>Choose a date</mat-label>\\n                    <input\\n                      [formControl]=\\\"dateRange\\\"\\n                      matInput\\n                      type=\\\"text\\\"\\n                      name=\\\"daterange\\\"\\n                      value=\\\"\\\"\\n                    />\\n                    <!-- <mat-label>Choose a date</mat-label>\\n                    <input matInput [matDatepicker]=\\\"picker\\\" />\\n                    <mat-datepicker-toggle\\n                      matSuffix\\n                      [for]=\\\"picker\\\"\\n                    ></mat-datepicker-toggle>\\n                    <mat-datepicker #picker></mat-datepicker> -->\\n                    <!-- <mat-label>Enter a date range</mat-label>\\n                    <mat-date-range-input [rangePicker]=\\\"picker\\\">\\n                      <input matStartDate placeholder=\\\"Start date\\\" />\\n                      <input matEndDate placeholder=\\\"End date\\\" />\\n                    </mat-date-range-input>\\n                    <mat-datepicker-toggle\\n                      matSuffix\\n                      [for]=\\\"picker\\\"\\n                    ></mat-datepicker-toggle>\\n                    <mat-date-range-picker #picker></mat-date-range-picker> -->\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                  <button\\n                    mat-raised-button\\n                    color=\\\"primary\\\"\\n                    aria-label=\\\"Example icon button with a home icon\\\"\\n                  >\\n                    <mat-icon>filter_list</mat-icon>\\n                    Filter\\n                  </button>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n        </ng-container>\\n      </kt-portlet-body>\\n    </kt-portlet>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"modal-content\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">\\n      {{ data.student.surname }} {{ data.student.otherNames }}\\n    </h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n      <span aria-hidden=\\\"true\\\" (click)=\\\"c('Close click')\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <kt-portlet-body [class]=\\\"'kt-portlet__body--fit'\\\">\\n            <ng-container ktPortletTools>\\n              <div class=\\\"container\\\">\\n                <div *ngIf=\\\"data.student.profile_url !== null\\\" class=\\\"row\\\">\\n                  <div class=\\\"col-xl-12\\\">\\n                    <div class=\\\"image-avatar-wrapper\\\">\\n                      <img\\n                        class=\\\"image-avatar\\\"\\n                        alt=\\\"profile\\\"\\n                        src=\\\"{{ data.student.profile_url }}\\\"\\n                      />\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-xl-6\\\">\\n                    <span>Surname</span>\\n                    <h6>{{ data.student.surname }}</h6>\\n                  </div>\\n                  <div class=\\\"col-xl-6\\\">\\n                    <span>Other Names</span>\\n                    <h6>{{ data.student.otherNames }}</h6>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-xl-6\\\">\\n                    <span>School</span>\\n                    <h6>{{ data.student.school }}</h6>\\n                  </div>\\n                  <div class=\\\"col-xl-6\\\">\\n                    <span>Gender</span>\\n                    <h6>{{ data.student.gender }}</h6>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-xl-6\\\">\\n                    <span>Regsitration Number</span>\\n                    <h6>{{ data.student.registrationNumber }}</h6>\\n                  </div>\\n                  <div class=\\\"col-xl-6\\\">\\n                    <span>State of Origin</span>\\n                    <h6>{{ data.student.state }}</h6>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-xl-6\\\">\\n                    <span>Date of Birth</span>\\n                    <h6>\\n                      {{ data.student.dateOfBirth | date: \\\"mediumDate\\\" }}\\n                    </h6>\\n                  </div>\\n                  <div class=\\\"col-xl-6\\\">\\n                    <span>Student Class</span>\\n                    <h6>{{ data.student.studentClass }}</h6>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-xl-6\\\">\\n                    <span>Guardian Name</span>\\n                    <h6>{{ data.student.guardianName }}</h6>\\n                  </div>\\n                  <div class=\\\"col-xl-6\\\">\\n                    <span>Guardian Contact</span>\\n                    <h6>{{ data.student.guardianTelephone }}</h6>\\n                  </div>\\n                </div>\\n                <h3 class=\\\"mt-3\\\">Attendance History</h3>\\n                <hr />\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6\\\"></div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-8\\\">\\n                        <mat-form-field appearance=\\\"fill\\\">\\n                          <mat-label>Choose a date</mat-label>\\n                          <input\\n                            [formControl]=\\\"dateRange\\\"\\n                            matInput\\n                            type=\\\"text\\\"\\n                            name=\\\"daterange\\\"\\n                            value=\\\"\\\"\\n                          />\\n                        </mat-form-field>\\n                      </div>\\n                      <div class=\\\"col-md-4\\\">\\n                        <button\\n                          mat-raised-button\\n                          color=\\\"primary\\\"\\n                          style=\\\"width: 100%\\\"\\n                          aria-label=\\\"Example icon button with a home icon\\\"\\n                        >\\n                          <mat-icon>filter_list</mat-icon>\\n                          Filter\\n                        </button>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6\\\">\\n                    <mat-table #table [dataSource]=\\\"dataSource\\\">\\n                      <ng-container matColumnDef=\\\"select\\\">\\n                        <mat-header-cell *matHeaderCellDef>\\n                          <mat-checkbox\\n                            (change)=\\\"$event ? masterToggle() : null\\\"\\n                            [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                            [indeterminate]=\\\"\\n                              selection.hasValue() && !isAllSelected()\\n                            \\\"\\n                          >\\n                          </mat-checkbox>\\n                        </mat-header-cell>\\n                        <mat-cell *matCellDef=\\\"let row\\\">\\n                          <mat-checkbox\\n                            (click)=\\\"$event.stopPropagation()\\\"\\n                            (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                            [checked]=\\\"selection.isSelected(row)\\\"\\n                          >\\n                          </mat-checkbox>\\n                        </mat-cell>\\n                      </ng-container>\\n\\n                      <ng-container matColumnDef=\\\"date\\\">\\n                        <mat-header-cell *matHeaderCellDef>\\n                          Attendance Date\\n                        </mat-header-cell>\\n                        <mat-cell *matCellDef=\\\"let element\\\">\\n                          {{ element.date }}\\n                        </mat-cell>\\n                      </ng-container>\\n                      <ng-container matColumnDef=\\\"present\\\">\\n                        <mat-header-cell *matHeaderCellDef>\\n                          Present\\n                        </mat-header-cell>\\n                        <mat-cell *matCellDef=\\\"let element\\\">\\n                          <button\\n                            *ngIf=\\\"element.present === true\\\"\\n                            mat-icon-button\\n                            color=\\\"primary\\\"\\n                            aria-label=\\\"Example icon button with a home icon\\\"\\n                          >\\n                            <mat-icon>check</mat-icon>\\n                          </button>\\n                          <span\\n                            *ngIf=\\\"element.present === false\\\"\\n                            color=\\\"primary\\\"\\n                            aria-label=\\\"Example icon button with a home icon\\\"\\n                          >\\n                            -\\n                          </span>\\n                        </mat-cell>\\n                      </ng-container>\\n                      <ng-container matColumnDef=\\\"absent\\\">\\n                        <mat-header-cell *matHeaderCellDef>\\n                          Absent\\n                        </mat-header-cell>\\n                        <mat-cell *matCellDef=\\\"let element\\\">\\n                          <button\\n                            *ngIf=\\\"element.absent === true\\\"\\n                            mat-icon-button\\n                            color=\\\"primary\\\"\\n                            aria-label=\\\"Example icon button with a home icon\\\"\\n                          >\\n                            <mat-icon>check</mat-icon>\\n                          </button>\\n                          <span\\n                            *ngIf=\\\"element.absent === false\\\"\\n                            color=\\\"primary\\\"\\n                            aria-label=\\\"Example icon button with a home icon\\\"\\n                          >\\n                            -\\n                          </span>\\n                        </mat-cell>\\n                      </ng-container>\\n\\n                      <mat-header-row\\n                        *matHeaderRowDef=\\\"displayedColumns\\\"\\n                      ></mat-header-row>\\n                      <mat-row\\n                        *matRowDef=\\\"let row; columns: displayedColumns\\\"\\n                        (click)=\\\"selection.toggle(row)\\\"\\n                      >\\n                      </mat-row>\\n                    </mat-table>\\n                    <mat-paginator\\n                      [pageSizeOptions]=\\\"[5, 10, 20]\\\"\\n                      showFirstLastButtons\\n                    ></mat-paginator>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"kt-widget12__chart\\\" style=\\\"height: 250px\\\">\\n                      <canvas\\n                        #chart\\n                        id=\\\"kt_chart_order_statistics\\\"\\n                        height=\\\"312\\\"\\n                        style=\\\"width: 100% !important\\\"\\n                      ></canvas>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </ng-container>\\n          </kt-portlet-body>\\n        </div>\\n      </div>\\n      <div class=\\\"row my-5\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"html\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">\\n      Close\\n    </button>\\n  </div>\\n</div>\\n\\n<!-- <div\\n  class=\\\"modal fade\\\"\\n  id=\\\"modal\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"exampleModalLongTitle\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Modal title</h5>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          data-dismiss=\\\"modal\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">...</div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">\\n          Close\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save changes</button>\\n      </div>\\n    </div>\\n  </div>\\n</div> -->\\n\"","module.exports = \"<div class=\\\"row mb-2\\\">\\n  <div class=\\\"col-xl-8\\\">\\n    <mat-progress-bar\\n      *ngIf=\\\"loadingFilterBox\\\"\\n      mode=\\\"indeterminate\\\"\\n    ></mat-progress-bar>\\n    <kt-portlet [class]=\\\"'kt-portlet--height-fluid'\\\">\\n      <kt-portlet-header\\n        [title]=\\\"'Filter Report'\\\"\\n        [class]=\\\"\\n          'kt-portlet__head--lg kt-portlet__head--noborder kt-portlet__head--break-sm'\\n        \\\"\\n      >\\n        <ng-container ktPortletTools>\\n          <!-- <kt-context-menu></kt-context-menu> -->\\n        </ng-container>\\n      </kt-portlet-header>\\n      <kt-portlet-body [class]=\\\"'kt-portlet__body--fit'\\\">\\n        <ng-container ktPortletTools>\\n          <div class=\\\"container\\\">\\n            <form (ngSubmit)=\\\"filterData()\\\" class=\\\"pb-4\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                  <mat-form-field>\\n                    <mat-select\\n                      placeholder=\\\"State\\\"\\n                      [formControl]=\\\"statesSelected\\\"\\n                      (selectionChange)=\\\"onStateSelectionChange($event)\\\"\\n                      multiple\\n                    >\\n                      <mat-select-trigger>\\n                        {{\\n                          statesSelected.value ? statesSelected.value[0] : \\\"\\\"\\n                        }}\\n                        <span\\n                          *ngIf=\\\"statesSelected.value?.length > 1\\\"\\n                          class=\\\"example-additional-selection\\\"\\n                        >\\n                          (+{{ statesSelected.value.length - 1 }} others)\\n                        </span>\\n                      </mat-select-trigger>\\n\\n                      <!-- <mat-option [value]=\\\"'All'\\\">All</mat-option> -->\\n                      <mat-option\\n                        *ngFor=\\\"let topping of states\\\"\\n                        [value]=\\\"topping.name\\\"\\n                        >{{ topping.name }}</mat-option\\n                      >\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <mat-form-field>\\n                    <mat-select\\n                      placeholder=\\\"Local Government Area\\\"\\n                      [formControl]=\\\"lgaSelected\\\"\\n                      (selectionChange)=\\\"onlgaSelectionChange($event)\\\"\\n                      multiple\\n                    >\\n                      <mat-select-trigger>\\n                        {{ lgaSelected.value ? lgaSelected.value[0] : \\\"\\\" }}\\n                        <span\\n                          *ngIf=\\\"lgaSelected.value?.length > 1\\\"\\n                          class=\\\"example-additional-selection\\\"\\n                        >\\n                          (+{{ lgaSelected.value.length - 1 }} others)\\n                        </span>\\n                      </mat-select-trigger>\\n                      <!-- <mat-option [value]=\\\"'All'\\\">All</mat-option> -->\\n                      <mat-option\\n                        *ngFor=\\\"let topping of localgovernments\\\"\\n                        [value]=\\\"topping.name\\\"\\n                        >{{ topping.name }}</mat-option\\n                      >\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <mat-form-field>\\n                    <mat-select\\n                      placeholder=\\\"School\\\"\\n                      [formControl]=\\\"schoolSelected\\\"\\n                      multiple\\n                    >\\n                      <mat-select-trigger>\\n                        {{\\n                          schoolSelected.value ? schoolSelected.value[0] : \\\"\\\"\\n                        }}\\n                        <span\\n                          *ngIf=\\\"schoolSelected.value?.length > 1\\\"\\n                          class=\\\"example-additional-selection\\\"\\n                        >\\n                          (+{{ schoolSelected.value.length - 1 }} others)\\n                        </span>\\n                      </mat-select-trigger>\\n                      <mat-option [value]=\\\"'All'\\\">All</mat-option>\\n                      <mat-option\\n                        *ngFor=\\\"let topping of schools\\\"\\n                        [value]=\\\"topping.schoolName\\\"\\n                        >{{ topping.schoolName }}</mat-option\\n                      >\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                  <mat-form-field>\\n                    <mat-select\\n                      placeholder=\\\"Dropout Risk Level\\\"\\n                      [formControl]=\\\"riskLevel\\\"\\n                    >\\n                      <mat-select-trigger>\\n                        {{ riskLevel.value }}\\n                      </mat-select-trigger>\\n                      <mat-option [value]=\\\"''\\\">All</mat-option>\\n                      <mat-option [value]=\\\"'HIGH'\\\">HIGH</mat-option>\\n                      <mat-option [value]=\\\"'MODERATE'\\\">MODERATE</mat-option>\\n                      <mat-option [value]=\\\"'NIL'\\\">NO RISK</mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-4 pl-3\\\">\\n                  <div class=\\\"px-3\\\">\\n                    <button\\n                      mat-raised-button\\n                      color=\\\"primary\\\"\\n                      style=\\\"width: 100%\\\"\\n                      aria-label=\\\"Example icon button with a home icon\\\"\\n                    >\\n                      <mat-icon>filter_list</mat-icon>\\n                      Filter\\n                    </button>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <button\\n                    mat-raised-button\\n                    aria-label=\\\"Example icon button with a home icon\\\"\\n                    style=\\\"width: 100%\\\"\\n                    (click)=\\\"reset($event)\\\"\\n                  >\\n                    <mat-icon>filter_list</mat-icon>\\n                    Reset\\n                  </button>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\"></div>\\n            </form>\\n          </div>\\n        </ng-container>\\n      </kt-portlet-body>\\n    </kt-portlet>\\n  </div>\\n  <div class=\\\"col-xl-4\\\">\\n    <mat-progress-bar *ngIf=\\\"loading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n    <kt-portlet>\\n      <kt-portlet-header\\n        [title]=\\\"'Total Number of Students'\\\"\\n        [class]=\\\"\\n          'kt-portlet__head--lg kt-portlet__head--noborder kt-portlet__head--break-sm'\\n        \\\"\\n      >\\n        <ng-container ktPortletTools>\\n          <kt-context-menu></kt-context-menu>\\n        </ng-container>\\n      </kt-portlet-header>\\n      <kt-portlet-body [class]=\\\"'kt-portlet__body--fit'\\\">\\n        <!-- Checkbox Column -->\\n        <ng-container>\\n          <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-xl-12\\\">\\n                <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n                  <h1>{{ totalCount }}</h1>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"kt-widget14__chart\\\" style=\\\"height: 150px\\\">\\n                <canvas #chart></canvas>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-xl-6\\\">\\n                <div>\\n                  <h5 class=\\\"\\\">Total Female</h5>\\n                  <h1 style=\\\"color: #f29cb3\\\" class=\\\"text-center\\\">\\n                    {{ totalFemale }}\\n                  </h1>\\n                </div>\\n              </div>\\n              <div class=\\\"col-xl-6\\\">\\n                <div class=\\\"\\\">\\n                  <div>\\n                    <h5 class=\\\"\\\">Total Male</h5>\\n                    <h1 style=\\\"color: #79c6f1\\\" class=\\\"text-center\\\">\\n                      {{ totalMale }}\\n                    </h1>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </ng-container>\\n      </kt-portlet-body>\\n    </kt-portlet>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div [ngClass]=\\\"{ 'col-xl-12': !editMode, 'col-xl-8': editMode }\\\">\\n    <mat-progress-bar *ngIf=\\\"loading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n    <kt-portlet>\\n      <kt-portlet-header\\n        [title]=\\\"'All Students'\\\"\\n        [class]=\\\"\\n          'kt-portlet__head--lg kt-portlet__head--noborder kt-portlet__head--break-sm'\\n        \\\"\\n      >\\n        <ng-container ktPortletTools>\\n          <kt-context-menu></kt-context-menu>\\n        </ng-container>\\n      </kt-portlet-header>\\n      <kt-portlet-body [class]=\\\"'kt-portlet__body--fit'\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"d-flex justify-content-between\\\">\\n              <div class=\\\"px-3\\\">\\n                <mat-form-field>\\n                  <mat-label>Search</mat-label>\\n                  <input\\n                    matInput\\n                    (keyup)=\\\"applyFilter($event)\\\"\\n                    placeholder=\\\"Searching for...\\\"\\n                    #input\\n                  />\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"px-3\\\">\\n                <button\\n                  mat-raised-button\\n                  color=\\\"primary\\\"\\n                  (click)=\\\"exportPDF()\\\"\\n                  aria-label=\\\"Example icon button with a home icon\\\"\\n                >\\n                  <mat-icon>filter_list</mat-icon>\\n                  Export PDF\\n                </button>\\n                <button\\n                  mat-raised-button\\n                  color=\\\"secondary\\\"\\n                  class=\\\"ml-2\\\"\\n                  (click)=\\\"ExportTOExcel()\\\"\\n                  aria-label=\\\"Example icon button with a home icon\\\"\\n                >\\n                  <mat-icon>filter_list</mat-icon>\\n                  Export Excel\\n                </button>\\n              </div>\\n            </div>\\n            <!-- <div class=\\\"px-3\\\">\\n              <mat-form-field>\\n                <mat-label>Filter</mat-label>\\n                <input\\n                  matInput\\n                  (keyup)=\\\"applyFilter($event)\\\"\\n                  placeholder=\\\"Searching for...\\\"\\n                  #input\\n                />\\n              </mat-form-field>\\n            </div> -->\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-4 pl-4\\\">\\n            <div class=\\\"custom-file\\\">\\n              <input\\n                accept=\\\"application/vnd.ms-excel;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;\\\"\\n                type=\\\"file\\\"\\n                class=\\\"custom-file-input\\\"\\n                id=\\\"customFile\\\"\\n              />\\n              <label class=\\\"custom-file-label\\\" for=\\\"customFile\\\"\\n                >Bulk Upload(Excel)</label\\n              >\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <mat-table #table [dataSource]=\\\"dataSource\\\">\\n              <!-- Checkbox Column -->\\n              <ng-container matColumnDef=\\\"select\\\">\\n                <mat-header-cell *matHeaderCellDef>\\n                  <mat-checkbox\\n                    (change)=\\\"$event ? masterToggle() : null\\\"\\n                    [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                    [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"\\n                    [disabled]=\\\"true\\\"\\n                  >\\n                  </mat-checkbox>\\n                </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let row\\\">\\n                  <mat-checkbox\\n                    (click)=\\\"$event.stopPropagation()\\\"\\n                    (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                    [checked]=\\\"selection.isSelected(row)\\\"\\n                    [disabled]=\\\"true\\\"\\n                  >\\n                  </mat-checkbox>\\n                </mat-cell>\\n              </ng-container>\\n\\n              <!-- Position Column -->\\n              <ng-container matColumnDef=\\\"registrationNumber\\\">\\n                <mat-header-cell *matHeaderCellDef>\\n                  Regsitration Number\\n                </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.registrationNumber }}\\n                </mat-cell>\\n              </ng-container>\\n              <!-- Name Column -->\\n              <ng-container matColumnDef=\\\"surname\\\">\\n                <mat-header-cell *matHeaderCellDef> Surname </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.surname }}\\n                </mat-cell>\\n              </ng-container>\\n              <!-- Weight Column -->\\n              <ng-container matColumnDef=\\\"otherNames\\\">\\n                <mat-header-cell *matHeaderCellDef>\\n                  Other Names\\n                </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.otherNames }}\\n                </mat-cell>\\n              </ng-container>\\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"schoolName\\\">\\n                <mat-header-cell *matHeaderCellDef> School </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.school }}\\n                </mat-cell>\\n              </ng-container>\\n              <ng-container matColumnDef=\\\"gender\\\">\\n                <mat-header-cell *matHeaderCellDef> Gender </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.gender }}\\n                </mat-cell>\\n              </ng-container>\\n              <ng-container matColumnDef=\\\"actions\\\">\\n                <mat-header-cell *matHeaderCellDef>\\n                  <!-- <mat-checkbox\\n                    (change)=\\\"$event ? masterToggle() : null\\\"\\n                    [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                    [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"\\n                  > -->\\n                  <!-- </mat-checkbox> -->\\n                  Actions\\n                </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\">\\n                  <!-- <mat-checkbox\\n                    (click)=\\\"$event.stopPropagation()\\\"\\n                    (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                    [checked]=\\\"selection.isSelected(row)\\\"\\n                  >\\n                  </mat-checkbox> -->\\n                  <button\\n                    mat-icon-button\\n                    color=\\\"primary\\\"\\n                    aria-label=\\\"Example icon button with a home icon\\\"\\n                    (click)=\\\"onRowElementClick($event, element)\\\"\\n                  >\\n                    <mat-icon>visibility</mat-icon>\\n                  </button>\\n                </mat-cell>\\n              </ng-container>\\n              <ng-container matColumnDef=\\\"riskLevel\\\">\\n                <mat-header-cell *matHeaderCellDef>\\n                  <!-- <mat-checkbox\\n                    (change)=\\\"$event ? masterToggle() : null\\\"\\n                    [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                    [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"\\n                  > -->\\n                  <!-- </mat-checkbox> -->\\n                  Dropout Risk Level\\n                </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\">\\n                  <!-- <mat-checkbox\\n                    (click)=\\\"$event.stopPropagation()\\\"\\n                    (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                    [checked]=\\\"selection.isSelected(row)\\\"\\n                  >\\n                  </mat-checkbox> -->\\n                  <button\\n                    mat-icon-button\\n                    color=\\\"warn\\\"\\n                    aria-label=\\\"Example icon button with a home icon\\\"\\n                    *ngIf=\\\"element.riskLevel === 'HIGH'\\\"\\n                  >\\n                    <mat-icon>error</mat-icon>\\n                  </button>\\n                  <button\\n                    mat-icon-button\\n                    aria-label=\\\"Example icon button with a home icon\\\"\\n                    *ngIf=\\\"element.riskLevel === 'MODERATE'\\\"\\n                  >\\n                    <mat-icon class=\\\"yellow-icon\\\">error</mat-icon>\\n                  </button>\\n                  <button\\n                    mat-icon-button\\n                    aria-label=\\\"Example icon button with a home icon\\\"\\n                    *ngIf=\\\"element.riskLevel === 'NIL'\\\"\\n                  >\\n                    <mat-icon class=\\\"green-icon\\\">error</mat-icon>\\n                  </button>\\n                </mat-cell>\\n              </ng-container>\\n              <mat-header-row\\n                *matHeaderRowDef=\\\"displayedColumns\\\"\\n              ></mat-header-row>\\n              <mat-row\\n                *matRowDef=\\\"let row; columns: displayedColumns\\\"\\n                (click)=\\\"selection.toggle(row)\\\"\\n              >\\n              </mat-row>\\n            </mat-table>\\n            <mat-paginator\\n              [pageSizeOptions]=\\\"[5, 10, 20]\\\"\\n              showFirstLastButtons\\n            ></mat-paginator>\\n          </div>\\n        </div>\\n      </kt-portlet-body>\\n    </kt-portlet>\\n  </div>\\n  <div *ngIf=\\\"editMode\\\" class=\\\"col-xl-4\\\">\\n    <kt-portlet [class]=\\\"'kt-portlet--height-fluid'\\\">\\n      <ng-container ktPortletTools>\\n        <div class=\\\"container school-detail\\\">\\n          <div class=\\\"row py-4\\\">\\n            <div class=\\\"col-xl-12\\\">\\n              <div class=\\\"d-flex justify-content-end\\\">\\n                <button\\n                  mat-icon-button\\n                  (click)=\\\"closeDetailPage($event)\\\"\\n                  color=\\\"accent\\\"\\n                  aria-label=\\\"Example icon button with a delete icon\\\"\\n                >\\n                  <mat-icon>cancel</mat-icon>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"school.profile_url !== null\\\" class=\\\"row\\\">\\n            <div class=\\\"col-xl-12\\\">\\n              <div class=\\\"image-avatar-wrapper\\\">\\n                <img\\n                  class=\\\"image-avatar\\\"\\n                  alt=\\\"profile\\\"\\n                  src=\\\"{{ school.profile_url }}\\\"\\n                />\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xl-6\\\">\\n              <span>Surname</span>\\n              <h6>{{ school.surname }}</h6>\\n            </div>\\n            <div class=\\\"col-xl-6\\\">\\n              <span>Other Names</span>\\n              <h6>{{ school.otherNames }}</h6>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xl-6\\\">\\n              <span>School</span>\\n              <h6>{{ school.school }}</h6>\\n            </div>\\n            <div class=\\\"col-xl-6\\\">\\n              <span>Gender</span>\\n              <h6>{{ school.gender }}</h6>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xl-6\\\">\\n              <span>Regsitration Number</span>\\n              <h6>{{ school.registrationNumber }}</h6>\\n            </div>\\n            <div class=\\\"col-xl-6\\\">\\n              <span>State of Origin</span>\\n              <h6>{{ school.state }}</h6>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xl-6\\\">\\n              <span>Date of Birth</span>\\n              <h6>{{ school.dateOfBirth | date: \\\"mediumDate\\\" }}</h6>\\n            </div>\\n            <div class=\\\"col-xl-6\\\">\\n              <span>Student Class</span>\\n              <h6>{{ school.studentClass }}</h6>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xl-6\\\">\\n              <span>Guardina Name</span>\\n              <h6>{{ school.guardianName }}</h6>\\n            </div>\\n            <div class=\\\"col-xl-6\\\">\\n              <span>Guardian Contact</span>\\n              <h6>{{ school.guardianTelephone }}</h6>\\n            </div>\\n          </div>\\n          <!-- <div class=\\\"row\\\">\\n            <div class=\\\"col-xl-12\\\">\\n              <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\">\\n                <agm-marker [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\"></agm-marker>\\n              </agm-map>\\n            </div>\\n          </div> -->\\n        </div>\\n      </ng-container>\\n    </kt-portlet>\\n  </div>\\n  <!-- <div class=\\\"col-xl-4\\\">\\n    <kt-portlet [class]=\\\"'kt-portlet--height-fluid'\\\">\\n      <kt-portlet-header [title]=\\\"'Authors Profit'\\\">\\n        <ng-container ktPortletTools>\\n          <kt-context-menu2></kt-context-menu2>\\n        </ng-container>\\n      </kt-portlet-header>\\n      <kt-portlet-body>\\n        <kt-widget4 [data]=\\\"widget4_4\\\">\\n          <ng-template #actionTemplate let-item=\\\"item\\\">\\n            <span class=\\\"kt-widget4__number\\\" [ngClass]=\\\"item.valueColor\\\">{{\\n              item.value\\n            }}</span>\\n          </ng-template>\\n        </kt-widget4>\\n      </kt-portlet-body>\\n    </kt-portlet>\\n  </div> -->\\n</div>\\n\"","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h5 class=\\\"modal-title\\\">Bulk Upload Students</h5>\\n  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n    <span aria-hidden=\\\"true\\\" (click)=\\\"c('Close click')\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <kt-portlet-body [class]=\\\"'kt-portlet__body--fit'\\\">\\n          <ng-container ktPortletTools>\\n            <div class=\\\"container\\\">\\n              <form (ngSubmit)=\\\"filterData()\\\" class=\\\"pb-4\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                    <mat-form-field>\\n                      <mat-select\\n                        placeholder=\\\"State\\\"\\n                        [formControl]=\\\"statesSelected\\\"\\n                        (selectionChange)=\\\"onStateSelectionChange($event)\\\"\\n                        multiple\\n                      >\\n                        <mat-select-trigger>\\n                          {{ statesSelected.value ? statesSelected.value[0] : \\\"\\\"\\n                          }}\\n                          <span\\n                            *ngIf=\\\"statesSelected.value?.length > 1\\\"\\n                            class=\\\"example-additional-selection\\\"\\n                          >\\n                            (+{{ statesSelected.value.length - 1 }} others)\\n                          </span>\\n                        </mat-select-trigger>\\n\\n                        <mat-option [value]=\\\"'All'\\\">All</mat-option>\\n                        <mat-option\\n                          *ngFor=\\\"let topping of states\\\"\\n                          [value]=\\\"topping.name\\\"\\n                          >{{ topping.name }}</mat-option\\n                        >\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <mat-form-field>\\n                      <mat-select\\n                        placeholder=\\\"Local Government Area\\\"\\n                        [formControl]=\\\"lgaSelected\\\"\\n                        (selectionChange)=\\\"onlgaSelectionChange($event)\\\"\\n                        multiple\\n                      >\\n                        <mat-select-trigger>\\n                          {{ lgaSelected.value ? lgaSelected.value[0] : \\\"\\\" }}\\n                          <span\\n                            *ngIf=\\\"lgaSelected.value?.length > 1\\\"\\n                            class=\\\"example-additional-selection\\\"\\n                          >\\n                            (+{{ lgaSelected.value.length - 1 }} others)\\n                          </span>\\n                        </mat-select-trigger>\\n                        <mat-option [value]=\\\"'All'\\\">All</mat-option>\\n                        <mat-option\\n                          *ngFor=\\\"let topping of localgovernments\\\"\\n                          [value]=\\\"topping.name\\\"\\n                          >{{ topping.name }}</mat-option\\n                        >\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <mat-form-field>\\n                      <mat-select\\n                        placeholder=\\\"School\\\"\\n                        [formControl]=\\\"schoolSelected\\\"\\n                      >\\n                        <mat-select-trigger>\\n                          {{schoolSelected.value}}\\n                        </mat-select-trigger>\\n                        <!-- <mat-option [value]=\\\"'All'\\\">All</mat-option> -->\\n                        <mat-option\\n                          *ngFor=\\\"let topping of schools\\\"\\n                          [value]=\\\"topping.schoolName\\\"\\n                          >{{ topping.schoolName }}</mat-option\\n                        >\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row\\\"></div>\\n              </form>\\n            </div>\\n          </ng-container>\\n        </kt-portlet-body>\\n      </div>\\n    </div>\\n    <div class=\\\"row my-5\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"html\\\"></div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div *ngIf=\\\"schoolNotSelected\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n          Please select a school\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div *ngIf=\\\"actionSuccessful\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n          Bulk Upload Successful.\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">\\n    Close\\n  </button>\\n  <button\\n    [ngClass]=\\\"{\\n      'kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light': loading\\n    }\\\"\\n    id=\\\"kt_login_signin_submit\\\"\\n    class=\\\"btn btn-primary btn-elevate kt-login__btn-primary\\\"\\n    (click)=\\\"uploadStudents()\\\"\\n    type=\\\"button\\\"\\n  >\\n    Upload\\n  </button>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL3N0dWRlbnRzL2Ryb3BvdXQtcmlzay1hbmFseXNpcy9kcm9wb3V0LXJpc2stYW5hbHlzaXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { LayoutConfigService } from 'app/core/_base/layout';\nimport moment from 'moment';\nimport {\n  AppServiceService,\n  ILocalGovernments,\n  IState,\n} from '../../../services/app-service/app-service.service';\nimport { School } from '../../schools/schools.component';\nimport { SchoolsService } from '../../schools/schools.service';\n\nconst $ = window['$'];\n\n@Component({\n  selector: 'kt-dropout-risk-analysis',\n  templateUrl: './dropout-risk-analysis.component.html',\n  styleUrls: ['./dropout-risk-analysis.component.scss'],\n})\nexport class DropoutRiskAnalysisComponent implements OnInit {\n  loadingFilterBox = false;\n  statesSelected = new FormControl('', Validators.compose([]));\n  lgaSelected = new FormControl('', Validators.compose([]));\n  schoolSelected = new FormControl('');\n  classSelected = new FormControl('');\n  dateRange = new FormControl('');\n  localgovernments: ILocalGovernments[] = [];\n  states: IState[] = [];\n  classes = [\n    'SS One',\n    'SS Two',\n    'SS Three',\n    'JS One',\n    'JS Two',\n    'JS Three',\n    'Primary One',\n    'Primary Two',\n    'Primary Three',\n    'Primary Four',\n    'Primary Five',\n    'Primary Six',\n  ];\n  schools: School[] = [];\n  schoolsDataBase: School[] = [];\n  @Input() data: { labels: string[]; datasets: any[] };\n  @Input() type: string = 'bar';\n  @ViewChild('chart', { static: true }) chart: ElementRef;\n  color = Chart.helpers.color;\n  constructor(\n    private appService: AppServiceService,\n    private schoolService: SchoolsService,\n    private layoutConfigService: LayoutConfigService\n  ) {}\n\n  ngOnInit() {\n    this.initialDatePicker();\n    this.getUserAccessibleState();\n    this.getUserAccessibleLocals();\n    this.getSchools();\n  }\n  getUserAccessibleState() {\n    this.states = this.appService.getStates(\n      this.appService.getUserStateAccess()\n    );\n  }\n\n  getUserAccessibleLocals(states = []) {\n    this.localgovernments = this.appService.getLocalGovernments(states);\n  }\n\n  onStateSelectionChange(event: any) {\n    // if (this.statesSelected.value.includes('All')) {\n    //   const index = this.statesSelected.value.findIndex(\n    //     (item) => item === 'All'\n    //   );\n    //   const values = this.statesSelected.value;\n    //   values.splice(index, 1);\n    //   // this.statesSelected.setValue([...])\n    // }\n    if (this.statesSelected.value.length > 0) {\n      this.getUserAccessibleLocals([this.statesSelected.value]);\n      this.schools = this.schoolsDataBase.filter(\n        (item) => this.statesSelected.value === item.state.trim()\n      );\n    } else {\n      this.getUserAccessibleLocals();\n      this.schools = this.schoolsDataBase;\n    }\n  }\n\n  onlgaSelectionChange(event) {\n    if (this.lgaSelected.value.length > 0) {\n      this.schools = this.schoolsDataBase.filter(\n        (item) => this.lgaSelected.value === item.lga.trim()\n      );\n    } else {\n      this.schools = this.schoolsDataBase;\n    }\n  }\n\n  private initChart() {\n    // For more information about the chartjs, visit this link\n    // https://www.chartjs.org/docs/latest/getting-started/usage.html\n\n    const chart = new Chart(this.chart.nativeElement, {\n      type: this.type,\n      data: this.data,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        // legend: false,\n        scales: {\n          xAxes: [\n            {\n              categoryPercentage: 0.35,\n              barPercentage: 0.7,\n              display: true,\n              scaleLabel: {\n                display: false,\n                labelString: 'Month',\n              },\n              gridLines: false,\n              ticks: {\n                display: true,\n                beginAtZero: true,\n                fontColor: this.layoutConfigService.getConfig(\n                  'colors.base.shape.3'\n                ),\n                fontSize: 13,\n                padding: 10,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              categoryPercentage: 0.35,\n              barPercentage: 0.7,\n              display: true,\n              scaleLabel: {\n                display: false,\n                labelString: 'Value',\n              },\n              gridLines: {\n                color: this.layoutConfigService.getConfig(\n                  'colors.base.shape.2'\n                ),\n                drawBorder: false,\n                offsetGridLines: false,\n                drawTicks: false,\n                borderDash: [3, 4],\n                zeroLineWidth: 1,\n                zeroLineColor: this.layoutConfigService.getConfig(\n                  'colors.base.shape.2'\n                ),\n                zeroLineBorderDash: [3, 4],\n              },\n              ticks: {\n                max: 70,\n                stepSize: 10,\n                display: true,\n                beginAtZero: true,\n                fontColor: this.layoutConfigService.getConfig(\n                  'colors.base.shape.3'\n                ),\n                fontSize: 13,\n                padding: 10,\n              },\n            },\n          ],\n        },\n        title: {\n          display: false,\n        },\n        hover: {\n          mode: 'index',\n        },\n        tooltips: {\n          enabled: true,\n          intersect: false,\n          mode: 'nearest',\n          bodySpacing: 5,\n          yPadding: 10,\n          xPadding: 10,\n          caretPadding: 0,\n          displayColors: false,\n          backgroundColor:\n            this.layoutConfigService.getConfig('colors.state.brand'),\n          titleFontColor: '#ffffff',\n          cornerRadius: 4,\n          footerSpacing: 0,\n          titleSpacing: 0,\n        },\n        layout: {\n          padding: {\n            left: 0,\n            right: 0,\n            top: 5,\n            bottom: 5,\n          },\n        },\n      },\n    });\n  }\n\n  initialDatePicker() {\n    const $this = this;\n    $('input[name=\"daterange\"]').daterangepicker(\n      {\n        autoUpdateInput: false,\n        opens: 'left',\n        ranges: {\n          Today: [moment(), moment()],\n          Yesterday: [\n            moment().subtract(1, 'days'),\n            moment().subtract(1, 'days'),\n          ],\n          'Last 7 Days': [moment().subtract(6, 'days'), moment()],\n          'Last 30 Days': [moment().subtract(29, 'days'), moment()],\n          'This Month': [moment().startOf('month'), moment().endOf('month')],\n          'Last Month': [\n            moment().subtract(1, 'month').startOf('month'),\n            moment().subtract(1, 'month').endOf('month'),\n          ],\n        },\n      },\n      function (start, end, label) {\n        console.log(\n          'A new date selection was made: ' +\n            start.format('YYYY-MM-DD') +\n            ' to ' +\n            end.format('YYYY-MM-DD')\n        );\n        $this.dateRange.setValue(\n          `${start.format('YYYY-MM-DD')} to ${end.format('YYYY-MM-DD')}`\n        );\n      }\n    );\n  }\n  getSchools() {\n    this.loadingFilterBox = true;\n    this.schoolService.getSchools().subscribe(\n      (data) => {\n        this.loadingFilterBox = false;\n        this.schools = data;\n        this.schoolsDataBase = data;\n      },\n      (error) => {\n        this.loadingFilterBox = false;\n      }\n    );\n  }\n}\n","module.exports = \".mat-form-field {\\n  width: 100%; }\\n\\n.cdk-overlay-pane {\\n  overflow: scroll !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGFybGVzLm9udW9yYWgvRG9jdW1lbnRzL2NiYy9TY2hvb2xEYXNoYm9hcmQvc3JjL2FwcC92aWV3cy9wYWdlcy9zdHVkZW50cy9zdHVkZW50LWRldGFpbC9zdHVkZW50LWRldGFpbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQTs7QUFHYjtFQUNFLDJCQUEyQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvcGFnZXMvc3R1ZGVudHMvc3R1ZGVudC1kZXRhaWwvc3R1ZGVudC1kZXRhaWwuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWZvcm0tZmllbGQge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmNkay1vdmVybGF5LXBhbmUge1xuICBvdmVyZmxvdzogc2Nyb2xsICFpbXBvcnRhbnQ7XG59XG4iXX0= */\"","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport {\n  MatDialogRef,\n  MatPaginator,\n  MatTableDataSource,\n  MAT_DIALOG_DATA,\n} from '@angular/material';\nimport moment from 'moment';\nimport { LayoutConfigService } from '../../../../../app/core/_base/layout';\nimport { Student } from '../students.component';\n\nconst $ = window['$'];\n\n@Component({\n  selector: 'kt-student-detail',\n  templateUrl: './student-detail.component.html',\n  styleUrls: ['./student-detail.component.scss'],\n})\nexport class StudentDetailComponent implements OnInit, AfterViewInit {\n  @ViewChild('chart', { static: true }) chart: ElementRef;\n  color = Chart.helpers.color;\n  @Input() chartData: { labels: string[]; datasets: any[] } = {\n    labels: ['Absent', 'Present'],\n    datasets: [\n      {\n        fill: true,\n        // borderWidth: 0,\n        backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)'],\n        borderColor: this.color(\n          this.layoutConfigService.getConfig('colors.state.brand')\n        )\n          .alpha(0)\n          .rgbString(),\n\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 12,\n        pointBackgroundColor: Chart.helpers\n          .color('#000000')\n          .alpha(0)\n          .rgbString(),\n        pointBorderColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\n        pointHoverBackgroundColor:\n          this.layoutConfigService.getConfig('colors.state.brand'),\n        pointHoverBorderColor: Chart.helpers\n          .color('#000000')\n          .alpha(0.1)\n          .rgbString(),\n\n        data: [5, 2],\n      },\n    ],\n  };\n  @Input() type: string = 'line';\n  dateRange = new FormControl('');\n  ELEMENT_DATA: IAttend[] = [\n    {\n      date: '20/06/2021',\n      present: true,\n      absent: false,\n    },\n    {\n      date: '21/06/2021',\n      present: true,\n      absent: false,\n    },\n    {\n      date: '22/06/2021',\n      present: false,\n      absent: true,\n    },\n    {\n      date: '23/06/2021',\n      present: false,\n      absent: true,\n    },\n    {\n      date: '24/06/2021',\n      present: false,\n      absent: true,\n    },\n    {\n      date: '25/06/2021',\n      present: false,\n      absent: true,\n    },\n    {\n      date: '26/06/2021',\n      present: false,\n      absent: true,\n    },\n    {\n      date: '27/06/2021',\n      present: false,\n      absent: true,\n    },\n  ];\n  displayedColumns = ['date', 'present', 'absent'];\n  dataSource = new MatTableDataSource<IAttend>(this.ELEMENT_DATA);\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n\n  chartUI;\n  constructor(\n    private layoutConfigService: LayoutConfigService,\n    public dialogRef: MatDialogRef<StudentDetailComponent>,\n    @Inject(MAT_DIALOG_DATA)\n    public data: {\n      student: Student;\n    }\n  ) {}\n\n  ngOnInit() {\n    this.initChart();\n    this.initialDatePicker();\n  }\n  closeModal() {\n    this.dialogRef.close();\n  }\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  c() {\n    this.dialogRef.close();\n  }\n  private initChart() {\n    // For more information about the chartjs, visit this link\n    // https://www.chartjs.org/docs/latest/getting-started/usage.html\n\n    this.chartUI = new Chart(this.chart.nativeElement, {\n      type: 'pie',\n      data: this.chartData,\n\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n\n        // legend: false,\n        scales: {\n          xAxes: [\n            {\n              categoryPercentage: 0.35,\n              barPercentage: 0.7,\n              display: true,\n              scaleLabel: {\n                display: false,\n                labelString: 'Month',\n              },\n              gridLines: false,\n              ticks: {\n                display: true,\n                beginAtZero: true,\n                fontColor: this.layoutConfigService.getConfig(\n                  'colors.base.shape.3'\n                ),\n                fontSize: 13,\n                padding: 10,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              categoryPercentage: 0.35,\n              barPercentage: 0.7,\n              display: true,\n              scaleLabel: {\n                display: false,\n                labelString: 'Value',\n              },\n              gridLines: {\n                color: this.layoutConfigService.getConfig(\n                  'colors.base.shape.2'\n                ),\n                drawBorder: false,\n                offsetGridLines: false,\n                drawTicks: false,\n                borderDash: [3, 4],\n                zeroLineWidth: 1,\n                zeroLineColor: this.layoutConfigService.getConfig(\n                  'colors.base.shape.2'\n                ),\n                zeroLineBorderDash: [3, 4],\n              },\n              ticks: {\n                max: 70,\n                stepSize: 10,\n                display: true,\n                beginAtZero: true,\n                fontColor: this.layoutConfigService.getConfig(\n                  'colors.base.shape.3'\n                ),\n                fontSize: 13,\n                padding: 10,\n              },\n            },\n          ],\n        },\n        title: {\n          display: false,\n        },\n        hover: {\n          mode: 'index',\n        },\n        tooltips: {\n          enabled: true,\n          intersect: false,\n          mode: 'nearest',\n          bodySpacing: 5,\n          yPadding: 10,\n          xPadding: 10,\n          caretPadding: 0,\n          displayColors: false,\n          backgroundColor:\n            this.layoutConfigService.getConfig('colors.state.brand'),\n          titleFontColor: '#ffffff',\n          cornerRadius: 4,\n          footerSpacing: 0,\n          titleSpacing: 0,\n        },\n        layout: {\n          padding: {\n            left: 0,\n            right: 0,\n            top: 5,\n            bottom: 5,\n          },\n        },\n      },\n    });\n  }\n  initialDatePicker() {\n    const $this = this;\n    $('input[name=\"daterange\"]').daterangepicker(\n      {\n        autoUpdateInput: false,\n        opens: 'left',\n        ranges: {\n          Today: [moment(), moment()],\n          Yesterday: [\n            moment().subtract(1, 'days'),\n            moment().subtract(1, 'days'),\n          ],\n          'Last 7 Days': [moment().subtract(6, 'days'), moment()],\n          'Last 30 Days': [moment().subtract(29, 'days'), moment()],\n          'This Month': [moment().startOf('month'), moment().endOf('month')],\n          'Last Month': [\n            moment().subtract(1, 'month').startOf('month'),\n            moment().subtract(1, 'month').endOf('month'),\n          ],\n        },\n      },\n      function (start, end, label) {\n        console.log(\n          'A new date selection was made: ' +\n            start.format('YYYY-MM-DD') +\n            ' to ' +\n            end.format('YYYY-MM-DD')\n        );\n        $this.dateRange.setValue(\n          `${start.format('YYYY-MM-DD')} to ${end.format('YYYY-MM-DD')}`\n        );\n      }\n    );\n  }\n}\n\nexport interface IAttend {\n  date: string;\n  present: boolean;\n  absent: boolean;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DropoutRiskAnalysisComponent } from './dropout-risk-analysis/dropout-risk-analysis.component';\n\nimport { StudentsComponent } from './students.component';\n\nconst routes: Routes = [\n  {\n    path: 'students-by-gender',\n    loadChildren: () =>\n      import('./students-by-gender/students-by-gender.module').then(\n        (m) => m.StudentsByGenderModule\n      ),\n    pathMatch: 'full',\n  },\n  {\n    path: 'attendance-report',\n    loadChildren: () =>\n      import('./student-attendance/student-attendance.module').then(\n        (m) => m.StudentAttendanceModule\n      ),\n    pathMatch: 'full',\n  },\n  {\n    path: 'view-attendance-report',\n    loadChildren: () =>\n      import('./attendance-report-detail/attendance-report-detail.module').then(\n        (m) => m.AttendanceReportDetailModule\n      ),\n    pathMatch: 'full',\n  },\n  {\n    path: 'dropout-risk-analysis',\n    component: DropoutRiskAnalysisComponent,\n    pathMatch: 'full',\n  },\n  { path: '', component: StudentsComponent, pathMatch: 'full' },\n  { path: ':id', component: StudentsComponent, pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StudentsRoutingModule {}\n","module.exports = \".mat-header-cell {\\n  color: #000 !important;\\n  font-weight: bold; }\\n\\n.yellow-icon {\\n  color: #ffcf60; }\\n\\n.green-icon {\\n  color: #18e39f; }\\n\\n/* Note: If you're using an SVG icon, you should make the class target the `<svg>` element */\\n\\n.yellow-icon svg,\\n.green-icon svg {\\n  fill: white; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGFybGVzLm9udW9yYWgvRG9jdW1lbnRzL2NiYy9TY2hvb2xEYXNoYm9hcmQvc3JjL2FwcC92aWV3cy9wYWdlcy9zdHVkZW50cy9zdHVkZW50cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHNCQUFzQjtFQUN0QixpQkFBaUIsRUFBQTs7QUFHbkI7RUFDRSxjQUFjLEVBQUE7O0FBR2hCO0VBQ0UsY0FBYyxFQUFBOztBQUVoQiw0RkFBQTs7QUFDQTs7RUFFRSxXQUFXLEVBQUEiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9wYWdlcy9zdHVkZW50cy9zdHVkZW50cy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtaGVhZGVyLWNlbGwge1xuICBjb2xvcjogIzAwMCAhaW1wb3J0YW50O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnllbGxvdy1pY29uIHtcbiAgY29sb3I6ICNmZmNmNjA7XG59XG5cbi5ncmVlbi1pY29uIHtcbiAgY29sb3I6ICMxOGUzOWY7XG59XG4vKiBOb3RlOiBJZiB5b3UncmUgdXNpbmcgYW4gU1ZHIGljb24sIHlvdSBzaG91bGQgbWFrZSB0aGUgY2xhc3MgdGFyZ2V0IHRoZSBgPHN2Zz5gIGVsZW1lbnQgKi9cbi55ZWxsb3ctaWNvbiBzdmcsXG4uZ3JlZW4taWNvbiBzdmcge1xuICBmaWxsOiB3aGl0ZTtcbn1cbiJdfQ== */\"","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ChangeDetectorRef,\n  AfterViewInit,\n  ElementRef,\n  Input,\n} from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatDialog } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { StudentsService } from './students.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport { School } from '../schools/schools.component';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport * as XLSX from 'xlsx';\n\nimport {\n  IState,\n  ILocalGovernments,\n} from '../../services/app-service/app-service.service';\nimport { AppServiceService } from '../../services/app-service/app-service.service';\nimport { SchoolsService } from '../schools/schools.service';\nimport { UploadStudentComponent } from './uploadstudents/upload-teacher-component';\nimport { LayoutConfigService } from 'app/core/_base/layout';\nimport { StudentDetailComponent } from './student-detail/student-detail.component';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\nconst $ = window['$'];\n\n@Component({\n  selector: 'kt-students',\n  templateUrl: './students.component.html',\n  styleUrls: ['./students.component.scss'],\n})\nexport class StudentsComponent implements OnInit, AfterViewInit {\n  ELEMENT_DATA: Student[] = [];\n  displayedColumns = [\n    'select',\n    'registrationNumber',\n    'surname',\n    'otherNames',\n    'schoolName',\n    'gender',\n    'riskLevel',\n    'actions',\n  ];\n  studentJSONfile: any;\n  dataSource = new MatTableDataSource<Student>(this.ELEMENT_DATA);\n  selection = new SelectionModel<Student>(true, []);\n  loading: Boolean = false;\n  editMode: Boolean = false;\n  school: Student;\n  title = 'My first AGM project';\n  lat = 51.678418;\n  lng = 7.809007;\n\n  loadingFilterBox = false;\n  statesSelected = new FormControl('', Validators.compose([]));\n  lgaSelected = new FormControl('', Validators.compose([]));\n  schoolSelected = new FormControl('', Validators.compose([]));\n  riskLevel = new FormControl('', Validators.compose([]));\n  totalFemale = 0;\n  totalMale = 0;\n\n  schools: School[] = [];\n\n  states: IState[] = [];\n  localgovernments: ILocalGovernments[] = [];\n  state_access: string;\n  totalCount = 0;\n  schoolDataBase: School[] = [];\n\n  studentDataBase: Student[] = [];\n  @Input() data: { labels: string[]; datasets: any[] };\n  @ViewChild('chart', { static: true }) chart: ElementRef;\n  color = Chart.helpers.color;\n  // @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  constructor(\n    private changeDetectRef: ChangeDetectorRef,\n    private studentService: StudentsService,\n    private appService: AppServiceService,\n    private schoolService: SchoolsService,\n    private dialog: MatDialog,\n    private layoutConfigService: LayoutConfigService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private location: Location\n  ) {}\n\n  async ngOnInit() {\n    try {\n      this.getStudents();\n      this.getSchools();\n      this.getUserAccessibleLocals();\n      this.getUserAccessibleState();\n      this.state_access = this.appService.getUserStateAccess();\n      if (this.state_access.toLowerCase() !== 'all') {\n        this.statesSelected.setValue([this.state_access]);\n        this.statesSelected.disable();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  listenForRouteChange() {\n    this.route.params.subscribe((param) => {\n      const index = this.dataSource.data.findIndex(\n        (item) => item.id == parseInt(param.id)\n      );\n\n      if (index !== -1) {\n        const student = this.dataSource.data[index];\n\n        const dialogRef = this.dialog.open(StudentDetailComponent, {\n          maxWidth: '90vw',\n          minWidth: '60vw',\n          data: {\n            student,\n          },\n        });\n\n        dialogRef.afterClosed().subscribe((data) => {\n          this.location.back();\n        });\n      } else {\n      }\n    });\n  }\n\n  ExportTOExcel() {\n    // let targetTableElm = document.getElementById('ExampleMaterialTable');\n    const data = [];\n    this.dataSource.filteredData.forEach((item) => {\n      const {\n        rightThumbTemplate,\n        leftThumbTemplate,\n        rightThumb,\n        leftThumb,\n        rightFingerPrintId,\n        leftFingerPrintId,\n        rightRET,\n        leftRET,\n        schoolId,\n        localid,\n        ...others\n      } = item;\n      // console.log(others);\n      data.push({ ...others });\n    });\n    const ws: XLSX.WorkSheet = XLSX.utils.json_to_sheet(data);\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n\n    /* save to file */\n    XLSX.writeFile(wb, 'students.xlsx');\n  }\n\n  getSchools() {\n    this.loadingFilterBox = true;\n    this.schoolService.getSchools().subscribe(\n      (data) => {\n        this.loadingFilterBox = false;\n        this.schools = data;\n        this.schoolDataBase = data;\n      },\n      (error) => {\n        this.loadingFilterBox = false;\n      }\n    );\n  }\n  initChartJS() {\n    // For more information about the chartjs, visit this link\n    // https://www.chartjs.org/docs/latest/getting-started/usage.html\n\n    const chart = new Chart(this.chart.nativeElement, {\n      type: 'bar',\n      data: this.data,\n      options: {\n        title: {\n          display: false,\n        },\n        tooltips: {\n          intersect: false,\n          mode: 'nearest',\n          xPadding: 10,\n          yPadding: 10,\n          caretPadding: 10,\n        },\n        legend: {\n          display: false,\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        barRadius: 4,\n        scales: {\n          xAxes: [\n            {\n              display: true,\n              gridLines: true,\n              stacked: true,\n            },\n          ],\n          yAxes: [\n            {\n              display: true,\n              stacked: true,\n              gridLines: true,\n            },\n          ],\n        },\n        layout: {\n          padding: {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0,\n          },\n        },\n      },\n    });\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  getStudents() {\n    this.loading = true;\n\n    this.studentService.getStudents().subscribe(\n      (data) => {\n        if(data.students.length > 2){\n          data.students[0].riskLevel = 'HIGH';\n          data.students[1].riskLevel = 'MODERATE';\n        }\n        \n        \n        this.loading = false;\n        this.dataSource.data = data.students;\n        this.ELEMENT_DATA = data.students;\n        this.studentDataBase = data.students;\n        this.totalCount = 0;\n        this.totalFemale = 0;\n        this.totalMale = 0;\n\n        data.data_gender.forEach((item) => {\n          if (item.gender.toLowerCase().trim() === 'male') {\n            this.totalMale = parseInt(item.count);\n          } else {\n            this.totalFemale = parseInt(item.count);\n          }\n        });\n        this.totalCount = this.totalMale + this.totalFemale;\n\n        this.data = {\n          labels: ['Female', 'Male'],\n          datasets: [\n            {\n              fill: true,\n              // borderWidth: 0,\n              backgroundColor: [\n                'rgba(255, 99, 132, 0.6)',\n                'rgba(54, 162, 235, 0.6)',\n              ],\n              borderColor: this.color(\n                this.layoutConfigService.getConfig('colors.state.brand')\n              )\n                .alpha(0)\n                .rgbString(),\n\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 12,\n              pointBackgroundColor: Chart.helpers\n                .color('#000000')\n                .alpha(0)\n                .rgbString(),\n              pointBorderColor: Chart.helpers\n                .color('#000000')\n                .alpha(0)\n                .rgbString(),\n              pointHoverBackgroundColor:\n                this.layoutConfigService.getConfig('colors.state.brand'),\n              pointHoverBorderColor: Chart.helpers\n                .color('#000000')\n                .alpha(0.1)\n                .rgbString(),\n\n              data: [this.totalFemale, this.totalMale],\n            },\n          ],\n        };\n        this.initChartJS();\n        this.changeDetectRef.detectChanges();\n\n        this.listenForRouteChange();\n      },\n      (error) => {\n        this.loading = false;\n        console.error(error);\n      }\n    );\n  }\n  reset(event) {\n    event.preventDefault;\n\n    this.schoolSelected.setValue([]);\n    this.lgaSelected.setValue([]);\n    this.statesSelected.setValue([]);\n    this.riskLevel.setValue('');\n\n    this.dataSource.data = this.studentDataBase;\n    this.totalCount = this.studentDataBase.length;\n    this.changeDetectRef.detectChanges();\n  }\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    const $this = this;\n    $('.custom-file-input').on('change', function (e) {\n      const files = $(this).prop('files');\n      console.log(files);\n      const reader: any = new FileReader();\n      reader.onload = (e: any) => {\n        /* read workbook */\n        const bstr: string = e.target.result;\n        const wb: XLSX.WorkBook = XLSX.read(bstr, { type: 'binary' });\n\n        /* grab first sheet */\n        const wsname: string = wb.SheetNames[0];\n        const ws: XLSX.WorkSheet = wb.Sheets[wsname];\n\n        /* save data */\n        $this.studentJSONfile = XLSX.utils.sheet_to_html(ws, {\n          editable: false,\n          id: 'table-teachers',\n        });\n\n        $this.openDialog($this.studentJSONfile, files[0]);\n      };\n      reader.readAsBinaryString(files[0]);\n      // reader.readAsArrayBuffer(files[0]);\n      // const data = new Uint8Array(reader.result);\n      // var wb = XLSX.read(data, { type: 'array' });\n      // var htmlstr = XLSX.write(wb, {\n      //   sheet: 'Sheet1',\n      //   type: 'binary',\n      //   bookType: 'html',\n      // });\n      // console.log(htmlstr);\n      // $this.openDialog(htmlstr);\n    });\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.dataSource.data.forEach((row) => this.selection.select(row));\n  }\n  onRowElementClick(event: any, element: Student) {\n    console.log(element);\n    this.selection.clear();\n    this.school = element;\n    // this.editMode = true;\n    this.router.navigateByUrl(`/students/${element.id}`);\n  }\n  closeDetailPage() {\n    this.selection.clear();\n    this.editMode = false;\n  }\n  onStateSelectionChange(event: any) {\n    // if (this.statesSelected.value.includes('All')) {\n    //   const index = this.statesSelected.value.findIndex(\n    //     (item) => item === 'All'\n    //   );\n    //   const values = this.statesSelected.value;\n    //   values.splice(index, 1);\n    //   // this.statesSelected.setValue([...])\n    // }\n    if (!this.statesSelected.value.includes('All')) {\n      this.getUserAccessibleLocals(this.statesSelected.value);\n      this.schools = this.schoolDataBase.filter((item) =>\n        this.statesSelected.value.includes(item.state.trim())\n      );\n    } else {\n      this.getUserAccessibleLocals();\n      this.schools = this.schoolDataBase;\n    }\n  }\n\n  getUserAccessibleState() {\n    this.states = this.appService.getStates(\n      this.appService.getUserStateAccess()\n    );\n  }\n\n  getUserAccessibleLocals(states = []) {\n    this.localgovernments = this.appService.getLocalGovernments(states);\n  }\n\n  onlgaSelectionChange(event) {\n    if (!this.lgaSelected.value.includes('All')) {\n      this.schools = this.schoolDataBase.filter((item) =>\n        this.lgaSelected.value.includes(item.lga.trim())\n      );\n    } else {\n      if (this.statesSelected.value.includes('All')) {\n        this.schools = this.schoolDataBase;\n      } else {\n        this.schools = this.schoolDataBase.filter((item) =>\n          this.statesSelected.value.includes(item.state)\n        );\n      }\n    }\n  }\n  exportPDF() {\n    const doc = new jsPDF({\n      orientation: 'landscape',\n    });\n\n    const columns = [];\n    Object.keys(this.dataSource.data[0])\n      .splice(0, 8)\n      .forEach((key) => {\n        columns.push({\n          header: key.toUpperCase(),\n          dataKey: key,\n        });\n      });\n    const data = [];\n    this.dataSource.data.forEach((item) => {\n      data.push({ ...item });\n    });\n    const user = this.appService.getUser();\n\n    autoTable(doc, {\n      columns: columns,\n      body: data,\n      didDrawPage: (dataArg) => {\n        doc.setFontSize(20);\n        doc.setTextColor(40);\n        if (user.state_access.toLocaleLowerCase() === 'all') {\n          doc.text('Students', dataArg.settings.margin.left, 10);\n        } else {\n          doc.text(`Students`, dataArg.settings.margin.left, 10);\n        }\n      },\n    });\n    doc.save('students.pdf');\n    // console.log('called in exit');\n  }\n  openDialog(htmlStr: any, file: any) {\n    const dialogRef = this.dialog.open(UploadStudentComponent, {\n      maxWidth: '90vw',\n      minWidth: '60vw',\n      data: {\n        htmlStr,\n        schools: this.schoolDataBase,\n        states: this.states,\n        lga: this.localgovernments,\n        file,\n      },\n    });\n\n    dialogRef.afterClosed().subscribe(async (result) => {\n      console.log('result is: ', result);\n      if (result) {\n        await this.getStudents();\n      }\n    });\n  }\n  filterData() {\n    if (\n      this.lgaSelected.value.includes('All') &&\n      this.statesSelected.value.includes('All') &&\n      this.schoolSelected.value.includes('All')\n    ) {\n      this.dataSource.data = this.studentDataBase;\n      this.totalCount = this.studentDataBase.length;\n    } else if (this.schoolSelected.value.length > 0) {\n      if (!this.schoolSelected.value.includes('All')) {\n        if (this.riskLevel.value.trim() != '') {\n          this.dataSource.data = this.studentDataBase.filter(\n            (item) =>\n              this.schoolSelected.value.includes(item.school) &&\n              item.riskLevel === this.riskLevel.value\n          );\n          this.totalCount = this.dataSource.data.length;\n        } else {\n          this.dataSource.data = this.studentDataBase.filter((item) =>\n            this.schoolSelected.value.includes(item.school)\n          );\n          this.totalCount = this.dataSource.data.length;\n        }\n      }\n    }\n\n    this.changeDetectRef.detectChanges();\n  }\n}\n\nexport interface Element {\n  schoolName: string;\n  schoolNumber: string;\n  lga: string;\n  state: string;\n  schoolCoordinate: string;\n}\n\nexport interface Student {\n  medicalCondition: string;\n  guardianAddress: string;\n  motherFullName: string;\n  motherOccupation: string;\n  fatherFullName: string;\n  fatherOccupation: string;\n  fatherTelephone: string;\n  address: string;\n  school: string;\n  admissionNumber: string;\n  hobby: string;\n  dateOfAdmission: Date;\n  dateOfBirth: Date;\n  religion: string;\n  town: string;\n  gender: string;\n  otherNames: string;\n  surname: string;\n  registrationNumber: string;\n  studentClass: string;\n  newEntrant: number;\n  schoolId: number;\n  placeOfBirth: string;\n  studentflow: string;\n  primarySchoolAttendedDate: string;\n  previousClass: string;\n  fatherAddress: string;\n  motherAddress: string;\n  motherTelephone: string;\n  guardianTelephone: string;\n  guardianName: string;\n  profile_url: string;\n  leftThumb: string;\n  leftThumbTemplate: string;\n  rightThumb: string;\n  rightThumbTemplate: string;\n  leftRET: Number;\n  leftFingerPrintId: string;\n  rightRET: number;\n  id?: number;\n  rightFingerPrintId: string;\n  localid?: number;\n  riskLevel?: 'HIGH' | 'MODERATE' | 'NIL';\n}\n\nexport interface StudentInfo {\n  data_gender: any[];\n  students: Student[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StudentsRoutingModule } from './students-routing.module';\nimport { StudentsComponent } from './students.component';\n\nimport { CoreModule } from '../../../core/core.module';\nimport { PartialsModule } from '../../partials/partials.module';\n\nimport { AutocompleteComponent } from './formcontrols/autocomplete/autocomplete.component';\nimport { CheckboxComponent } from './formcontrols/checkbox/checkbox.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialPreviewModule } from '../../partials/content/general/material-preview/material-preview.module';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport {\n  MatAutocompleteModule,\n  MatNativeDateModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatRadioModule,\n  MatButtonModule,\n  MatCardModule,\n  MatChipsModule,\n  MatSelectModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatIconModule,\n  MatSliderModule,\n  MatPaginatorModule,\n  MatSortModule,\n  MatSidenavModule,\n  MatSnackBarModule,\n  MatStepperModule,\n  MatToolbarModule,\n  MatDividerModule,\n  MatTabsModule,\n  MatTableModule,\n  MatTooltipModule,\n  MatListModule,\n  MatGridListModule,\n  MatButtonToggleModule,\n  MatBottomSheetModule,\n  MatExpansionModule,\n  MatMenuModule,\n  MatTreeModule,\n  MAT_BOTTOM_SHEET_DATA,\n  MatBottomSheetRef,\n  MAT_DATE_LOCALE,\n  MAT_DATE_FORMATS,\n} from '@angular/material';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\n// Form controls\nimport { DatepickerComponent } from './formcontrols/datepicker/datepicker.component';\nimport {\n  MatDatepickerModule,\n  MatDatepickerIntl,\n} from '@angular/material/datepicker';\nimport { FormfieldComponent } from './formcontrols/formfield/formfield.component';\nimport { InputComponent } from './formcontrols/input/input.component';\nimport { RadiobuttonComponent } from './formcontrols/radiobutton/radiobutton.component';\nimport { SelectComponent } from './formcontrols/select/select.component';\nimport { SliderComponent } from './formcontrols/slider/slider.component';\nimport { SlidertoggleComponent } from './formcontrols/slidertoggle/slidertoggle.component';\n// Navigation\nimport { MenuComponent } from './navigation/menu/menu.component';\nimport { SidenavComponent } from './navigation/sidenav/sidenav.component';\nimport { ToolbarComponent } from './navigation/toolbar/toolbar.component';\n// Layout\nimport { CardComponent } from './layout/card/card.component';\nimport { DividerComponent } from './layout/divider/divider.component';\nimport { ExpansionPanelComponent } from './layout/expansion-panel/expansion-panel.component';\nimport { GridListComponent } from './layout/grid-list/grid-list.component';\nimport { ListComponent } from './layout/list/list.component';\nimport { MaterialTabsComponent } from './layout/material-tabs/material-tabs.component';\nimport { StepperComponent } from './layout/stepper/stepper.component';\nimport { TreeComponent } from './layout/tree/tree.component';\nimport { DefaultFormsComponent } from './layout/default-forms/default-forms.component';\n// Buttons & indicators\nimport { ButtonComponent } from './buttons-and-indicators/button/button.component';\nimport { ButtonToggleComponent } from './buttons-and-indicators/button-toggle/button-toggle.component';\nimport { ChipsComponent } from './buttons-and-indicators/chips/chips.component';\nimport { IconComponent } from './buttons-and-indicators/icon/icon.component';\nimport { ProgressBarComponent } from './buttons-and-indicators/progress-bar/progress-bar.component';\nimport { ProgressSpinnerComponent } from './buttons-and-indicators/progress-spinner/progress-spinner.component';\nimport { RipplesComponent } from './buttons-and-indicators/ripples/ripples.component';\n// Popups & modals\nimport {\n  DialogComponent,\n  ModalComponent,\n  Modal2Component,\n  Modal3Component,\n} from './popups-and-modals/dialog/dialog.component';\nimport { SnackbarComponent } from './popups-and-modals/snackbar/snackbar.component';\nimport { MaterialTooltipComponent } from './popups-and-modals/material-tooltip/material-tooltip.component';\nimport { BottomSheetComponent } from './popups-and-modals/bottom-sheet/bottom-sheet.component';\nimport { BottomSheetExampleComponent } from './popups-and-modals/bottom-sheet/bottom-sheet-example/bottom-sheet-example.component';\nimport { PizzaPartyComponent } from './popups-and-modals/snackbar/pizza-party.component';\n// Data table\nimport { PaginatorComponent } from './data-table/paginator/paginator.component';\nimport { SortHeaderComponent } from './data-table/sort-header/sort-header.component';\nimport { MaterialTableComponent } from './data-table/material-table/material-table.component';\nimport { MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\n// import { SchoolsService } from './schools.service';\n// import { AgmCoreModule } from '@agm/core';\nimport { StudentsService } from './students.service';\nimport { AppServiceService } from '../../services/app-service/app-service.service';\nimport { SchoolsService } from '../schools/schools.service';\nimport { UploadStudentComponent } from './uploadstudents/upload-teacher-component';\nimport { StudentDetailComponent } from './student-detail/student-detail.component';\nimport { DropoutRiskAnalysisComponent } from './dropout-risk-analysis/dropout-risk-analysis.component';\n\n@NgModule({\n  declarations: [\n    StudentsComponent,\n    UploadStudentComponent,\n    StudentDetailComponent,\n    DropoutRiskAnalysisComponent,\n  ],\n  providers: [StudentsService, AppServiceService, SchoolsService],\n  imports: [\n    CommonModule,\n    StudentsRoutingModule,\n    CoreModule,\n    PartialsModule,\n    // AgmCoreModule.forRoot({\n    //   apiKey: 'AIzaSyC8aIKLtCcXqEHG_Gfm35Iahplw3HoKzLM',\n    // }),\n    CommonModule,\n    PartialsModule,\n    CoreModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatAutocompleteModule,\n    MatListModule,\n    MatSliderModule,\n    MatCardModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatIconModule,\n    MatNativeDateModule,\n    MatSlideToggleModule,\n    MatCheckboxModule,\n    MatMenuModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatSidenavModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatGridListModule,\n    MatToolbarModule,\n    MatBottomSheetModule,\n    MatExpansionModule,\n    MatDividerModule,\n    MatSortModule,\n    MatStepperModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    MatDialogModule,\n    MatRippleModule,\n    CoreModule,\n    CommonModule,\n    MatRadioModule,\n    MatTreeModule,\n    MatButtonToggleModule,\n    PartialsModule,\n    MaterialPreviewModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  entryComponents: [UploadStudentComponent, StudentDetailComponent],\n})\nexport class StudentsModule {}\n","import { Injectable } from '@angular/core';\nimport { throwError, Observable } from 'rxjs';\nimport {\n  HttpErrorResponse,\n  HttpClient,\n  HttpHeaders,\n} from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport { User } from '../../../core/auth/_models/user.model';\nimport { environment } from 'environments/environment';\nimport { Student, StudentInfo } from './students.component';\nimport { IStudentGenderReport } from './students-by-gender/students-by-gender.component';\nimport {\n  IStudentAttendanceReport,\n  IQueryAttendanceParams,\n  IAttendanceSummary,\n} from './student-attendance/student-attendance.component';\nimport {\n  IQueryAttendanceDetail,\n  IStudentAttendaceQuickView,\n  IStudentAttendanceDetail,\n} from './attendance-report-detail/attendance-report-detail.component';\nimport { AppServiceService } from '../../services/app-service/app-service.service';\n\n// const BASE_URL = 'https://school-census.herokuapp.com';\nconst BASE_URL = 'http://159.89.90.214:8000';\n// const BASE_URL = 'http://localhost:8000';\nconst GET_ALL_STUDENTS = '/api/v1/student/get-students';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StudentsService {\n  constructor(\n    private http: HttpClient,\n    private appService: AppServiceService\n  ) {}\n\n  getStudents(): Observable<StudentInfo> {\n    const user: User = JSON.parse(\n      localStorage.getItem(environment.authTokenKey)\n    );\n    const endDate = this.appService.formatDate(new Date());\n    const startDate = this.appService.formatDate(\n      this.appService.subtractFromCurrentDate(14)\n    );\n    return this.http\n      .get(\n        `${BASE_URL}${GET_ALL_STUDENTS}/${user.state_access}?startDate=${startDate}&endDate=${endDate}`,\n        {\n          headers: new HttpHeaders({\n            Authorization: user.accessToken,\n          }),\n        }\n      )\n      .pipe(\n        map((response) => {\n          console.log(response);\n          const students: Student[] = [];\n          response['data'].forEach((item) => {\n            students.push({\n              school: item['school'],\n              otherNames: item['othernames'],\n              surname: item['surname'],\n              id: item['id'],\n              town: item['town'],\n              gender: item['gender'],\n              riskLevel: item['riskLevel'],\n              registrationNumber: item['registrationnumber'],\n              studentClass: item['studentclass'],\n              newEntrant: item['newEntrant'],\n              hobby: item['hobby'],\n              religion: item['religion'],\n              dateOfAdmission: item['dateofadmission'],\n              dateOfBirth: item['dateofbirth'],\n              schoolId: item['schoolid'],\n              placeOfBirth: item['placeofbirth'],\n              studentflow: item['studentflow'],\n              primarySchoolAttendedDate: item['primaryschoolattendedDate'],\n              previousClass: item['previousclass'],\n              fatherAddress: item['fatherAddress'],\n              motherAddress: item['motheraddress'],\n              motherTelephone: item['mothertelephone'],\n              guardianTelephone: item['guardiantelephone'],\n              guardianName: item['guardianname'],\n              profile_url: item['profile_url'],\n              admissionNumber: item['admissionNumber'],\n              medicalCondition: item['medicalcondition'],\n              guardianAddress: item['guardianaddress'],\n              motherFullName: item['motherfullname'],\n              motherOccupation: item['motheroccupation'],\n              fatherFullName: item['fatherfullname'],\n              fatherOccupation: item['fatheroccupation'],\n              fatherTelephone: item['fathertelephone'],\n              address: item['address'],\n              leftThumb: item['leftthumb'],\n              leftThumbTemplate: item['leftthumbtemplate'],\n              rightThumb: item['rightthumb'],\n              rightThumbTemplate: item['rightthumbtemplate'],\n              leftRET: item['leftret'],\n              leftFingerPrintId: item['leftfingerprintid'],\n              rightRET: item['rightret'],\n              rightFingerPrintId: item['rightfingerprintid'],\n              localid: item['localid'],\n            });\n          });\n          return { students, data_gender: response['data_gender'] };\n        }),\n        catchError(this.handleHttpError)\n      );\n  }\n  handleHttpError(error: HttpErrorResponse) {\n    if (error.error instanceof Error) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, body was: ${error.error}`\n      );\n      console.error(error.error);\n    }\n\n    // If you want to return a new response:\n    //return of(new HttpResponse({body: [{name: \"Default value...\"}]}));\n\n    // If you want to return the error on the upper level:\n    //return throwError(error);\n\n    // or just return nothing:\n    return throwError(error);\n  }\n\n  handleBulkUpload({ schoolId, students }: { schoolId: number; students }) {\n    return this.http\n      .post(`${BASE_URL}/api/v1/student/bulk-upload`, {\n        schoolId,\n        students,\n      })\n      .pipe(catchError(this.handleHttpError));\n  }\n  getStudentGenderReport(): Observable<IStudentGenderReport[]> {\n    const user: User = JSON.parse(\n      localStorage.getItem(environment.authTokenKey)\n    );\n    return this.http\n      .get(\n        `${BASE_URL}/api/v1/student/get-student-gender-report?state=${user.state_access}`\n      )\n      .pipe(\n        map((response: any[]) => {\n          const data: IStudentGenderReport[] = [];\n          response.forEach((item) => {\n            data.push({\n              schoolName: item.schoolname,\n              gender: item.gender,\n              studentClass: item.studentclass,\n              count: item.count,\n            });\n          });\n          return data;\n        }),\n        catchError(this.handleHttpError)\n      );\n  }\n\n  getAttendanceReportByFilteredParams(\n    params: IQueryAttendanceParams\n  ): Observable<IAttendanceSummary[]> {\n    return this.http\n      .post(`${BASE_URL}/api/v1/attendance/filter-report`, params)\n      .pipe(\n        map((response) => {\n          const data: IAttendanceSummary[] = [];\n          response['data'].forEach((item) =>\n            data.push({ date: item['date'], count: item['count'] })\n          );\n          return data;\n        }),\n        catchError(this.handleHttpError)\n      );\n  }\n\n  getAttendanceDetail(\n    params: IQueryAttendanceDetail\n  ): Observable<IStudentAttendanceDetail[]> {\n    return this.http\n      .post<IStudentAttendanceDetail[]>(\n        `${BASE_URL}/api/v1/attendance/get-attendance-report-detail`,\n        params\n      )\n      .pipe(\n        map((response) => {\n          const dt: IStudentAttendaceQuickView[] = response['data'];\n          const data: IStudentAttendanceDetail[] = [];\n          dt.forEach((item) => {\n            data.push({\n              fullName: `${item.surname} ${item.othernames} `,\n              female: item.gender.toLowerCase() === 'female',\n              male: item.gender.toLowerCase() === 'male',\n              school: item.school,\n              status: item.status,\n              class: item.studentclass,\n              attendanceDate: params.attendanceDate,\n            });\n          });\n          return data;\n        }),\n        catchError(this.handleHttpError)\n      );\n  }\n\n  getAttendanceReport(): Observable<IStudentAttendanceReport[]> {\n    const user: User = JSON.parse(\n      localStorage.getItem(environment.authTokenKey)\n    );\n    if (user.state_access.toLowerCase() === 'all')\n      return this.http\n        .get(`${BASE_URL}/api/v1/attendance/get-attendance-report`)\n        .pipe(\n          map((response: any[]) => {\n            const data: IStudentAttendanceReport[] = [];\n            response.forEach((item) => {\n              data.push({\n                school: item.school,\n                gender: item.gender,\n                date: item.date,\n                count: item.count,\n                studentClass: item.studentclass,\n              });\n            });\n            return data;\n          }),\n          catchError(this.handleHttpError)\n        );\n\n    return this.http\n      .get(\n        `${BASE_URL}/api/v1/attendance/filter-attendance-report-by-state?state=${user.state_access}`\n      )\n      .pipe(\n        map((response) => {\n          const data: IStudentAttendanceReport[] = [];\n          response['response'].forEach((item) => {\n            data.push({\n              school: item.school,\n              gender: item.gender,\n              date: item.date,\n              count: item.count,\n              studentClass: item.studentclass,\n            });\n          });\n          return data;\n        }),\n        catchError(this.handleHttpError)\n      );\n  }\n}\n","module.exports = \".html {\\n  min-height: 200px;\\n  max-height: 300px;\\n  overflow-y: scroll; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGFybGVzLm9udW9yYWgvRG9jdW1lbnRzL2NiYy9TY2hvb2xEYXNoYm9hcmQvc3JjL2FwcC92aWV3cy9wYWdlcy9zdHVkZW50cy91cGxvYWRzdHVkZW50cy91cGxvYWQtdGVhY2hlci1jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtFQUNqQixpQkFBaUI7RUFDakIsa0JBQWtCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9wYWdlcy9zdHVkZW50cy91cGxvYWRzdHVkZW50cy91cGxvYWQtdGVhY2hlci1jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5odG1sIHtcbiAgbWluLWhlaWdodDogMjAwcHg7XG4gIG1heC1oZWlnaHQ6IDMwMHB4O1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG4iXX0= */\"","import {\n  Component,\n  OnInit,\n  Inject,\n  ViewChild,\n  ElementRef,\n  AfterViewInit,\n  AfterContentInit,\n} from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport * as excel2table from 'excel2table';\nimport { School } from '../../schools/schools.component';\nimport {\n  AppServiceService,\n  ILocalGovernments,\n  IState,\n} from '../../../services/app-service/app-service.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport * as XLSX from 'xlsx';\nimport { StudentsService } from '../students.service';\n\nconst $ = window['$'];\n\n@Component({\n  selector: 'kt-view-product',\n  templateUrl: './upload-teacher-component.html',\n  styleUrls: ['./upload-teacher-component.scss'],\n})\nexport class UploadStudentComponent implements OnInit, AfterContentInit {\n  schools: School[] = [];\n\n  states: IState[] = [];\n  localgovernments: ILocalGovernments[] = [];\n  schoolNotSelected: boolean = false;\n  actionSuccessful: boolean = false;\n  totalCount = 0;\n  schoolDataBase: School[] = [];\n  loading: boolean = false;\n  statesSelected = new FormControl('', Validators.compose([]));\n  lgaSelected = new FormControl('', Validators.compose([]));\n  schoolSelected = new FormControl('', Validators.compose([]));\n  studentJSONfile: any;\n  constructor(\n    private el: ElementRef,\n    public dialogRef: MatDialogRef<UploadStudentComponent>,\n    @Inject(MAT_DIALOG_DATA)\n    public data: {\n      htmlStr: any;\n      schools: School[];\n      states: IState[];\n      lga: ILocalGovernments[];\n      file: any;\n    },\n    // private location: Location,\n    private router: Router,\n    private appService: AppServiceService,\n    private studentService: StudentsService\n  ) {\n    // this.product = this.data.product;\n  }\n\n  onStateSelectionChange(event: any) {\n    // if (this.statesSelected.value.includes('All')) {\n    //   const index = this.statesSelected.value.findIndex(\n    //     (item) => item === 'All'\n    //   );\n    //   const values = this.statesSelected.value;\n    //   values.splice(index, 1);\n    //   // this.statesSelected.setValue([...])\n    // }\n    if (!this.statesSelected.value.includes('All')) {\n      this.getUserAccessibleLocals(this.statesSelected.value);\n      this.schools = this.schoolDataBase.filter((item) =>\n        this.statesSelected.value.includes(item.state.trim())\n      );\n    } else {\n      this.getUserAccessibleLocals();\n      this.schools = this.schoolDataBase;\n    }\n  }\n\n  getUserAccessibleLocals(states = []) {\n    this.localgovernments = this.appService.getLocalGovernments(states);\n  }\n\n  async uploadStudents() {\n    try {\n      this.schoolNotSelected = false;\n      if (this.data.file === null) {\n        return;\n      }\n      if (this.schoolSelected.value.trim() === '') {\n        this.schoolNotSelected = true;\n      }\n      console.log(this.data);\n\n      const jsonData = await this.convertFileToJSON(this.data.file);\n\n      const index = this.schoolDataBase.findIndex(\n        (item) =>\n          item.schoolName.toLowerCase().trim() ===\n          this.schoolSelected.value.trim().toLowerCase()\n      );\n      if (index !== -1) {\n        const school = this.schoolDataBase[index];\n        this.loading = true;\n        this.studentService\n          .handleBulkUpload({ schoolId: school.id, students: jsonData })\n          .subscribe(\n            (data) => {\n              this.loading = false;\n              console.log(data);\n              $('.html').empty();\n              this.actionSuccessful = true;\n              this.data.file = null;\n            },\n            (error) => {\n              this.loading = false;\n              console.log(error);\n            }\n          );\n      }\n    } catch (error) {\n      this.loading = false;\n    }\n  }\n\n  convertFileToJSON(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n        /* read workbook */\n        const bstr: string = e.target.result;\n        const wb: XLSX.WorkBook = XLSX.read(bstr, { type: 'binary' });\n\n        /* grab first sheet */\n        const wsname: string = wb.SheetNames[0];\n        const ws: XLSX.WorkSheet = wb.Sheets[wsname];\n\n        /* save data */\n        const studentJSONfile = XLSX.utils.sheet_to_json(ws);\n\n        resolve(studentJSONfile);\n      };\n      reader.readAsBinaryString(file);\n    });\n  }\n\n  onlgaSelectionChange(event) {\n    if (!this.lgaSelected.value.includes('All')) {\n      this.schools = this.schoolDataBase.filter((item) =>\n        this.lgaSelected.value.includes(item.lga.trim())\n      );\n    } else {\n      if (this.statesSelected.value.includes('All')) {\n        this.schools = this.schoolDataBase;\n      } else {\n        this.schools = this.schoolDataBase.filter((item) =>\n          this.statesSelected.value.includes(item.state)\n        );\n      }\n    }\n  }\n\n  ngAfterContentInit() {\n    // excel2table.render($('.html'), this.data.file);\n    $('.html').append(this.data.htmlStr);\n    $('table').addClass('table table-striped');\n    $('table th').attr('scope', 'col');\n    this.schools = this.data.schools;\n    this.states = this.data.states;\n    this.schoolDataBase = this.data.schools;\n    this.localgovernments = this.data.lga;\n  }\n\n  ngOnInit(): void {}\n\n  c(closed) {\n    // console.log(closed);\n\n    this.dialogRef.close(this.actionSuccessful);\n    this.actionSuccessful = false;\n  }\n  updateCategory() {}\n  closeModal() {\n    this.dialogRef.close(this.actionSuccessful);\n    this.actionSuccessful = false;\n  }\n  filterData() {}\n}\n"],"sourceRoot":""}