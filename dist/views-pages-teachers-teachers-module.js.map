{"version":3,"sources":["webpack:///./node_modules/ng-circle-progress/fesm2015/ng-circle-progress.js","webpack:///./src/app/views/pages/teachers/effective-state-report-detail-modal/effective-state-report-detail-modal.component.html","webpack:///./src/app/views/pages/teachers/effective-state-report/effective-state-report.component.html","webpack:///./src/app/views/pages/teachers/teacher-assessment-detail/teacher-assessment-detail.component.html","webpack:///./src/app/views/pages/teachers/teacher-modal-view/teacher-modal-view.component.html","webpack:///./src/app/views/pages/teachers/teachers.component.html","webpack:///./src/app/views/pages/teachers/uploadteachers/upload-teacher-component.html","webpack:///./src/app/views/pages/teachers/effective-state-report-detail-modal/effective-state-report-detail-modal.component.scss","webpack:///./src/app/views/pages/teachers/effective-state-report-detail-modal/effective-state-report-detail-modal.component.ts","webpack:///./src/app/views/pages/teachers/effective-state-report/effective-state-report.component.scss","webpack:///./src/app/views/pages/teachers/effective-state-report/effective-state-report.component.ts","webpack:///./src/app/views/pages/teachers/teacher-assessment-detail/teacher-assessment-detail.component.scss","webpack:///./src/app/views/pages/teachers/teacher-assessment-detail/teacher-assessment-detail.component.ts","webpack:///./src/app/views/pages/teachers/teacher-modal-view/teacher-modal-view.component.scss","webpack:///./src/app/views/pages/teachers/teacher-modal-view/teacher-modal-view.component.ts","webpack:///./src/app/views/pages/teachers/teachers-routing.module.ts","webpack:///./src/app/views/pages/teachers/teachers.component.scss","webpack:///./src/app/views/pages/teachers/teachers.component.ts","webpack:///./src/app/views/pages/teachers/teachers.module.ts","webpack:///./src/app/views/pages/teachers/teachers.service.ts","webpack:///./src/app/views/pages/teachers/uploadteachers/upload-teacher-component.scss","webpack:///./src/app/views/pages/teachers/uploadteachers/upload-teacher-component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqG;AAC5C;AAC5B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA;AACA,qCAAqC,0DAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sDAAsD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,sDAAsD;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,sDAAsD;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ,GAAG,QAAQ;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,4BAA4B,aAAa,GAAG;AAC5C,YAAY,oBAAoB,GAAG,oBAAoB,KAAK,aAAa,GAAG,UAAU,GAAG,WAAW,GAAG,WAAW;AAClH;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iCAAiC;AAClD;AACA;AACA,0CAA0C,kDAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,0CAA0C,kDAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,uDAAuD;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF,qBAAqB;AAC9G;AACA,qBAAqB;AACrB;AACA;AACA;AACA,6BAA6B,kDAAK;AAClC;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,uBAAuB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,4BAA4B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,YAAY;AACvE;AACA;AACA;AACA;AACA,uDAAuD,gBAAgB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,YAAY;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"views-pages-teachers-teachers-module.js","sourcesContent":["import { EventEmitter, Component, ElementRef, Inject, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { timer } from 'rxjs';\n\nclass CircleProgressOptions {\r\n    constructor() {\r\n        this.class = '';\r\n        this.backgroundGradient = false;\r\n        this.backgroundColor = 'transparent';\r\n        this.backgroundGradientStopColor = 'transparent';\r\n        this.backgroundOpacity = 1;\r\n        this.backgroundStroke = 'transparent';\r\n        this.backgroundStrokeWidth = 0;\r\n        this.backgroundPadding = 5;\r\n        this.percent = 0;\r\n        this.radius = 90;\r\n        this.space = 4;\r\n        this.toFixed = 0;\r\n        this.maxPercent = 1000;\r\n        this.renderOnClick = true;\r\n        this.units = '%';\r\n        this.unitsFontSize = '10';\r\n        this.unitsFontWeight = 'normal';\r\n        this.unitsColor = '#444444';\r\n        this.outerStrokeGradient = false;\r\n        this.outerStrokeWidth = 8;\r\n        this.outerStrokeColor = '#78C000';\r\n        this.outerStrokeGradientStopColor = 'transparent';\r\n        this.outerStrokeLinecap = 'round';\r\n        this.innerStrokeColor = '#C7E596';\r\n        this.innerStrokeWidth = 4;\r\n        this.titleFormat = undefined;\r\n        this.title = 'auto';\r\n        this.titleColor = '#444444';\r\n        this.titleFontSize = '20';\r\n        this.titleFontWeight = 'normal';\r\n        this.subtitleFormat = undefined;\r\n        this.subtitle = 'progress';\r\n        this.subtitleColor = '#A9A9A9';\r\n        this.subtitleFontSize = '10';\r\n        this.subtitleFontWeight = 'normal';\r\n        this.imageSrc = undefined;\r\n        this.imageHeight = undefined;\r\n        this.imageWidth = undefined;\r\n        this.animation = true;\r\n        this.animateTitle = true;\r\n        this.animateSubtitle = false;\r\n        this.animationDuration = 500;\r\n        this.showTitle = true;\r\n        this.showSubtitle = true;\r\n        this.showUnits = true;\r\n        this.showImage = false;\r\n        this.showBackground = true;\r\n        this.showInnerStroke = true;\r\n        this.clockwise = true;\r\n        this.responsive = false;\r\n        this.startFromZero = true;\r\n        this.showZeroOuterStroke = true;\r\n        this.lazy = false;\r\n    }\r\n}\r\n/** @dynamic Prevent compiling error when using type `Document` https://github.com/angular/angular/issues/20351 */\r\nclass CircleProgressComponent {\r\n    constructor(defaultOptions, elRef, document) {\r\n        this.elRef = elRef;\r\n        this.document = document;\r\n        this.onClick = new EventEmitter();\r\n        // <svg> of component\r\n        this.svgElement = null;\r\n        // whether <svg> is in viewport\r\n        this.isInViewport = false;\r\n        // event for notifying viewport change caused by scrolling or resizing\r\n        this.onViewportChanged = new EventEmitter;\r\n        this._viewportChangedSubscriber = null;\r\n        this.options = new CircleProgressOptions();\r\n        this.defaultOptions = new CircleProgressOptions();\r\n        this._lastPercent = 0;\r\n        this._gradientUUID = null;\r\n        this.render = () => {\r\n            this.applyOptions();\r\n            if (this.options.lazy) {\r\n                // Draw svg if it doesn't exist\r\n                this.svgElement === null && this.draw(this._lastPercent);\r\n                // Draw it only when it's in the viewport\r\n                if (this.isInViewport) {\r\n                    // Draw it at the latest position when I am in.\r\n                    if (this.options.animation && this.options.animationDuration > 0) {\r\n                        this.animate(this._lastPercent, this.options.percent);\r\n                    }\r\n                    else {\r\n                        this.draw(this.options.percent);\r\n                    }\r\n                    this._lastPercent = this.options.percent;\r\n                }\r\n            }\r\n            else {\r\n                if (this.options.animation && this.options.animationDuration > 0) {\r\n                    this.animate(this._lastPercent, this.options.percent);\r\n                }\r\n                else {\r\n                    this.draw(this.options.percent);\r\n                }\r\n                this._lastPercent = this.options.percent;\r\n            }\r\n        };\r\n        this.polarToCartesian = (centerX, centerY, radius, angleInDegrees) => {\r\n            let angleInRadius = angleInDegrees * Math.PI / 180;\r\n            let x = centerX + Math.sin(angleInRadius) * radius;\r\n            let y = centerY - Math.cos(angleInRadius) * radius;\r\n            return { x: x, y: y };\r\n        };\r\n        this.draw = (percent) => {\r\n            // make percent reasonable\r\n            percent = (percent === undefined) ? this.options.percent : Math.abs(percent);\r\n            // circle percent shouldn't be greater than 100%.\r\n            let circlePercent = (percent > 100) ? 100 : percent;\r\n            // determine box size\r\n            let boxSize = this.options.radius * 2 + this.options.outerStrokeWidth * 2;\r\n            if (this.options.showBackground) {\r\n                boxSize += (this.options.backgroundStrokeWidth * 2 + this.max(0, this.options.backgroundPadding * 2));\r\n            }\r\n            // the centre of the circle\r\n            let centre = { x: boxSize / 2, y: boxSize / 2 };\r\n            // the start point of the arc\r\n            let startPoint = { x: centre.x, y: centre.y - this.options.radius };\r\n            // get the end point of the arc\r\n            let endPoint = this.polarToCartesian(centre.x, centre.y, this.options.radius, 360 * (this.options.clockwise ?\r\n                circlePercent :\r\n                (100 - circlePercent)) / 100); // ####################\r\n            // We'll get an end point with the same [x, y] as the start point when percent is 100%, so move x a little bit.\r\n            if (circlePercent === 100) {\r\n                endPoint.x = endPoint.x + (this.options.clockwise ? -0.01 : +0.01);\r\n            }\r\n            // largeArcFlag and sweepFlag\r\n            let largeArcFlag, sweepFlag;\r\n            if (circlePercent > 50) {\r\n                [largeArcFlag, sweepFlag] = this.options.clockwise ? [1, 1] : [1, 0];\r\n            }\r\n            else {\r\n                [largeArcFlag, sweepFlag] = this.options.clockwise ? [0, 1] : [0, 0];\r\n            }\r\n            // percent may not equal the actual percent\r\n            let titlePercent = this.options.animateTitle ? percent : this.options.percent;\r\n            let titleTextPercent = titlePercent > this.options.maxPercent ?\r\n                `${this.options.maxPercent.toFixed(this.options.toFixed)}+` : titlePercent.toFixed(this.options.toFixed);\r\n            let subtitlePercent = this.options.animateSubtitle ? percent : this.options.percent;\r\n            // get title object\r\n            let title = {\r\n                x: centre.x,\r\n                y: centre.y,\r\n                textAnchor: 'middle',\r\n                color: this.options.titleColor,\r\n                fontSize: this.options.titleFontSize,\r\n                fontWeight: this.options.titleFontWeight,\r\n                texts: [],\r\n                tspans: []\r\n            };\r\n            // from v0.9.9, both title and titleFormat(...) may be an array of string.\r\n            if (this.options.titleFormat !== undefined && this.options.titleFormat.constructor.name === 'Function') {\r\n                let formatted = this.options.titleFormat(titlePercent);\r\n                if (formatted instanceof Array) {\r\n                    title.texts = [...formatted];\r\n                }\r\n                else {\r\n                    title.texts.push(formatted.toString());\r\n                }\r\n            }\r\n            else {\r\n                if (this.options.title === 'auto') {\r\n                    title.texts.push(titleTextPercent);\r\n                }\r\n                else {\r\n                    if (this.options.title instanceof Array) {\r\n                        title.texts = [...this.options.title];\r\n                    }\r\n                    else {\r\n                        title.texts.push(this.options.title.toString());\r\n                    }\r\n                }\r\n            }\r\n            // get subtitle object\r\n            let subtitle = {\r\n                x: centre.x,\r\n                y: centre.y,\r\n                textAnchor: 'middle',\r\n                color: this.options.subtitleColor,\r\n                fontSize: this.options.subtitleFontSize,\r\n                fontWeight: this.options.subtitleFontWeight,\r\n                texts: [],\r\n                tspans: []\r\n            };\r\n            // from v0.9.9, both subtitle and subtitleFormat(...) may be an array of string.\r\n            if (this.options.subtitleFormat !== undefined && this.options.subtitleFormat.constructor.name === 'Function') {\r\n                let formatted = this.options.subtitleFormat(subtitlePercent);\r\n                if (formatted instanceof Array) {\r\n                    subtitle.texts = [...formatted];\r\n                }\r\n                else {\r\n                    subtitle.texts.push(formatted.toString());\r\n                }\r\n            }\r\n            else {\r\n                if (this.options.subtitle instanceof Array) {\r\n                    subtitle.texts = [...this.options.subtitle];\r\n                }\r\n                else {\r\n                    subtitle.texts.push(this.options.subtitle.toString());\r\n                }\r\n            }\r\n            // get units object\r\n            let units = {\r\n                text: `${this.options.units}`,\r\n                fontSize: this.options.unitsFontSize,\r\n                fontWeight: this.options.unitsFontWeight,\r\n                color: this.options.unitsColor\r\n            };\r\n            // get total count of text lines to be shown\r\n            let rowCount = 0, rowNum = 1;\r\n            this.options.showTitle && (rowCount += title.texts.length);\r\n            this.options.showSubtitle && (rowCount += subtitle.texts.length);\r\n            // calc dy for each tspan for title\r\n            if (this.options.showTitle) {\r\n                for (let span of title.texts) {\r\n                    title.tspans.push({ span: span, dy: this.getRelativeY(rowNum, rowCount) });\r\n                    rowNum++;\r\n                }\r\n            }\r\n            // calc dy for each tspan for subtitle\r\n            if (this.options.showSubtitle) {\r\n                for (let span of subtitle.texts) {\r\n                    subtitle.tspans.push({ span: span, dy: this.getRelativeY(rowNum, rowCount) });\r\n                    rowNum++;\r\n                }\r\n            }\r\n            // create ID for gradient element\r\n            if (null === this._gradientUUID) {\r\n                this._gradientUUID = this.uuid();\r\n            }\r\n            // Bring it all together\r\n            this.svg = {\r\n                viewBox: `0 0 ${boxSize} ${boxSize}`,\r\n                // Set both width and height to '100%' if it's responsive\r\n                width: this.options.responsive ? '100%' : boxSize,\r\n                height: this.options.responsive ? '100%' : boxSize,\r\n                backgroundCircle: {\r\n                    cx: centre.x,\r\n                    cy: centre.y,\r\n                    r: this.options.radius + this.options.outerStrokeWidth / 2 + this.options.backgroundPadding,\r\n                    fill: this.options.backgroundColor,\r\n                    fillOpacity: this.options.backgroundOpacity,\r\n                    stroke: this.options.backgroundStroke,\r\n                    strokeWidth: this.options.backgroundStrokeWidth,\r\n                },\r\n                path: {\r\n                    // A rx ry x-axis-rotation large-arc-flag sweep-flag x y (https://developer.mozilla.org/en/docs/Web/SVG/Tutorial/Paths#Arcs)\r\n                    d: `M ${startPoint.x} ${startPoint.y}\n        A ${this.options.radius} ${this.options.radius} 0 ${largeArcFlag} ${sweepFlag} ${endPoint.x} ${endPoint.y}`,\r\n                    stroke: this.options.outerStrokeColor,\r\n                    strokeWidth: this.options.outerStrokeWidth,\r\n                    strokeLinecap: this.options.outerStrokeLinecap,\r\n                    fill: 'none'\r\n                },\r\n                circle: {\r\n                    cx: centre.x,\r\n                    cy: centre.y,\r\n                    r: this.options.radius - this.options.space - this.options.outerStrokeWidth / 2 - this.options.innerStrokeWidth / 2,\r\n                    fill: 'none',\r\n                    stroke: this.options.innerStrokeColor,\r\n                    strokeWidth: this.options.innerStrokeWidth,\r\n                },\r\n                title: title,\r\n                units: units,\r\n                subtitle: subtitle,\r\n                image: {\r\n                    x: centre.x - this.options.imageWidth / 2,\r\n                    y: centre.y - this.options.imageHeight / 2,\r\n                    src: this.options.imageSrc,\r\n                    width: this.options.imageWidth,\r\n                    height: this.options.imageHeight,\r\n                },\r\n                outerLinearGradient: {\r\n                    id: 'outer-linear-' + this._gradientUUID,\r\n                    colorStop1: this.options.outerStrokeColor,\r\n                    colorStop2: this.options.outerStrokeGradientStopColor === 'transparent' ? '#FFF' : this.options.outerStrokeGradientStopColor,\r\n                },\r\n                radialGradient: {\r\n                    id: 'radial-' + this._gradientUUID,\r\n                    colorStop1: this.options.backgroundColor,\r\n                    colorStop2: this.options.backgroundGradientStopColor === 'transparent' ? '#FFF' : this.options.backgroundGradientStopColor,\r\n                }\r\n            };\r\n        };\r\n        this.getAnimationParameters = (previousPercent, currentPercent) => {\r\n            const MIN_INTERVAL = 10;\r\n            let times, step, interval;\r\n            let fromPercent = this.options.startFromZero ? 0 : (previousPercent < 0 ? 0 : previousPercent);\r\n            let toPercent = currentPercent < 0 ? 0 : this.min(currentPercent, this.options.maxPercent);\r\n            let delta = Math.abs(Math.round(toPercent - fromPercent));\r\n            if (delta >= 100) {\r\n                // we will finish animation in 100 times\r\n                times = 100;\r\n                if (!this.options.animateTitle && !this.options.animateSubtitle) {\r\n                    step = 1;\r\n                }\r\n                else {\r\n                    // show title or subtitle animation even if the arc is full, we also need to finish it in 100 times.\r\n                    step = Math.round(delta / times);\r\n                }\r\n            }\r\n            else {\r\n                // we will finish in as many times as the number of percent.\r\n                times = delta;\r\n                step = 1;\r\n            }\r\n            // Get the interval of timer\r\n            interval = Math.round(this.options.animationDuration / times);\r\n            // Readjust all values if the interval of timer is extremely small.\r\n            if (interval < MIN_INTERVAL) {\r\n                interval = MIN_INTERVAL;\r\n                times = this.options.animationDuration / interval;\r\n                if (!this.options.animateTitle && !this.options.animateSubtitle && delta > 100) {\r\n                    step = Math.round(100 / times);\r\n                }\r\n                else {\r\n                    step = Math.round(delta / times);\r\n                }\r\n            }\r\n            // step must be greater than 0.\r\n            if (step < 1) {\r\n                step = 1;\r\n            }\r\n            return { times: times, step: step, interval: interval };\r\n        };\r\n        this.animate = (previousPercent, currentPercent) => {\r\n            if (this._timerSubscription && !this._timerSubscription.closed) {\r\n                this._timerSubscription.unsubscribe();\r\n            }\r\n            let fromPercent = this.options.startFromZero ? 0 : previousPercent;\r\n            let toPercent = currentPercent;\r\n            let { step: step, interval: interval } = this.getAnimationParameters(fromPercent, toPercent);\r\n            let count = fromPercent;\r\n            if (fromPercent < toPercent) {\r\n                this._timerSubscription = timer(0, interval).subscribe(() => {\r\n                    count += step;\r\n                    if (count <= toPercent) {\r\n                        if (!this.options.animateTitle && !this.options.animateSubtitle && count >= 100) {\r\n                            this.draw(toPercent);\r\n                            this._timerSubscription.unsubscribe();\r\n                        }\r\n                        else {\r\n                            this.draw(count);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.draw(toPercent);\r\n                        this._timerSubscription.unsubscribe();\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                this._timerSubscription = timer(0, interval).subscribe(() => {\r\n                    count -= step;\r\n                    if (count >= toPercent) {\r\n                        if (!this.options.animateTitle && !this.options.animateSubtitle && toPercent >= 100) {\r\n                            this.draw(toPercent);\r\n                            this._timerSubscription.unsubscribe();\r\n                        }\r\n                        else {\r\n                            this.draw(count);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.draw(toPercent);\r\n                        this._timerSubscription.unsubscribe();\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        this.emitClickEvent = (event) => {\r\n            if (this.options.renderOnClick) {\r\n                this.animate(0, this.options.percent);\r\n            }\r\n            this.onClick.emit(event);\r\n        };\r\n        this.applyOptions = () => {\r\n            // the options of <circle-progress> may change already\r\n            for (let name of Object.keys(this.options)) {\r\n                if (this.hasOwnProperty(name) && this[name] !== undefined) {\r\n                    this.options[name] = this[name];\r\n                }\r\n                else if (this.templateOptions && this.templateOptions[name] !== undefined) {\r\n                    this.options[name] = this.templateOptions[name];\r\n                }\r\n            }\r\n            // make sure key options valid\r\n            this.options.radius = Math.abs(+this.options.radius);\r\n            this.options.space = +this.options.space;\r\n            this.options.percent = +this.options.percent > 0 ? +this.options.percent : 0;\r\n            this.options.maxPercent = Math.abs(+this.options.maxPercent);\r\n            this.options.animationDuration = Math.abs(this.options.animationDuration);\r\n            this.options.outerStrokeWidth = Math.abs(+this.options.outerStrokeWidth);\r\n            this.options.innerStrokeWidth = Math.abs(+this.options.innerStrokeWidth);\r\n            this.options.backgroundPadding = +this.options.backgroundPadding;\r\n        };\r\n        this.getRelativeY = (rowNum, rowCount) => {\r\n            // why '-0.18em'? It's a magic number when property 'alignment-baseline' equals 'baseline'. :)\r\n            let initialOffset = -0.18, offset = 1;\r\n            return (initialOffset + offset * (rowNum - rowCount / 2)).toFixed(2) + 'em';\r\n        };\r\n        this.min = (a, b) => {\r\n            return a < b ? a : b;\r\n        };\r\n        this.max = (a, b) => {\r\n            return a > b ? a : b;\r\n        };\r\n        this.uuid = () => {\r\n            // https://www.w3resource.com/javascript-exercises/javascript-math-exercise-23.php\r\n            var dt = new Date().getTime();\r\n            var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                var r = (dt + Math.random() * 16) % 16 | 0;\r\n                dt = Math.floor(dt / 16);\r\n                return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n            });\r\n            return uuid;\r\n        };\r\n        this.findSvgElement = function () {\r\n            if (this.svgElement === null) {\r\n                let tags = this.elRef.nativeElement.getElementsByTagName('svg');\r\n                if (tags.length > 0) {\r\n                    this.svgElement = tags[0];\r\n                }\r\n            }\r\n        };\r\n        this.checkViewport = () => {\r\n            this.findSvgElement();\r\n            let previousValue = this.isInViewport;\r\n            this.isInViewport = this.isElementInViewport(this.svgElement);\r\n            if (previousValue !== this.isInViewport) {\r\n                this.onViewportChanged.emit({ oldValue: previousValue, newValue: this.isInViewport });\r\n            }\r\n        };\r\n        this.onScroll = (event) => {\r\n            this.checkViewport();\r\n        };\r\n        this.loadEventsForLazyMode = () => {\r\n            if (this.options.lazy) {\r\n                this.document.addEventListener('scroll', this.onScroll, true);\r\n                this.window.addEventListener('resize', this.onScroll, true);\r\n                if (this._viewportChangedSubscriber === null) {\r\n                    this._viewportChangedSubscriber = this.onViewportChanged.subscribe(({ oldValue, newValue }) => {\r\n                        newValue ? this.render() : null;\r\n                    });\r\n                }\r\n                // svgElement must be created in DOM before being checked.\r\n                // Is there a better way to check the existence of svgElemnt?\r\n                let _timer = timer(0, 50).subscribe(() => {\r\n                    this.svgElement === null ? this.checkViewport() : _timer.unsubscribe();\r\n                });\r\n            }\r\n        };\r\n        this.unloadEventsForLazyMode = () => {\r\n            // Remove event listeners\r\n            this.document.removeEventListener('scroll', this.onScroll, true);\r\n            this.window.removeEventListener('resize', this.onScroll, true);\r\n            // Unsubscribe onViewportChanged\r\n            if (this._viewportChangedSubscriber !== null) {\r\n                this._viewportChangedSubscriber.unsubscribe();\r\n                this._viewportChangedSubscriber = null;\r\n            }\r\n        };\r\n        this.document = document;\r\n        this.window = this.document.defaultView;\r\n        Object.assign(this.options, defaultOptions);\r\n        Object.assign(this.defaultOptions, defaultOptions);\r\n    }\r\n    isDrawing() {\r\n        return (this._timerSubscription && !this._timerSubscription.closed);\r\n    }\r\n    isElementInViewport(el) {\r\n        // Return false if el has not been created in page.\r\n        if (el === null || el === undefined)\r\n            return false;\r\n        // Check if the element is out of view due to a container scrolling\r\n        let rect = el.getBoundingClientRect(), parent = el.parentNode, parentRect;\r\n        do {\r\n            parentRect = parent.getBoundingClientRect();\r\n            if (rect.top >= parentRect.bottom)\r\n                return false;\r\n            if (rect.bottom <= parentRect.top)\r\n                return false;\r\n            if (rect.left >= parentRect.right)\r\n                return false;\r\n            if (rect.right <= parentRect.left)\r\n                return false;\r\n            parent = parent.parentNode;\r\n        } while (parent != this.document.body);\r\n        // Check its within the document viewport\r\n        if (rect.top >= (this.window.innerHeight || this.document.documentElement.clientHeight))\r\n            return false;\r\n        if (rect.bottom <= 0)\r\n            return false;\r\n        if (rect.left >= (this.window.innerWidth || this.document.documentElement.clientWidth))\r\n            return false;\r\n        if (rect.right <= 0)\r\n            return false;\r\n        return true;\r\n    }\r\n    ngOnInit() {\r\n        this.loadEventsForLazyMode();\r\n    }\r\n    ngOnDestroy() {\r\n        this.unloadEventsForLazyMode();\r\n    }\r\n    ngOnChanges(changes) {\r\n        this.render();\r\n        if ('lazy' in changes) {\r\n            changes.lazy.currentValue ? this.loadEventsForLazyMode() : this.unloadEventsForLazyMode();\r\n        }\r\n    }\r\n}\r\nCircleProgressComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'circle-progress',\r\n                template: `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" *ngIf=\"svg\"\n             [attr.viewBox]=\"svg.viewBox\" preserveAspectRatio=\"xMidYMid meet\"\n             [attr.height]=\"svg.height\" [attr.width]=\"svg.width\" (click)=\"emitClickEvent($event)\" [attr.class]=\"options.class\">\n            <defs>\n                <linearGradient *ngIf=\"options.outerStrokeGradient\" [attr.id]=\"svg.outerLinearGradient.id\">\n                    <stop offset=\"5%\" [attr.stop-color]=\"svg.outerLinearGradient.colorStop1\"  [attr.stop-opacity]=\"1\"/>\n                    <stop offset=\"95%\" [attr.stop-color]=\"svg.outerLinearGradient.colorStop2\" [attr.stop-opacity]=\"1\"/>\n                </linearGradient>\n                <radialGradient *ngIf=\"options.backgroundGradient\" [attr.id]=\"svg.radialGradient.id\">\n                    <stop offset=\"5%\" [attr.stop-color]=\"svg.radialGradient.colorStop1\" [attr.stop-opacity]=\"1\"/>\n                    <stop offset=\"95%\" [attr.stop-color]=\"svg.radialGradient.colorStop2\" [attr.stop-opacity]=\"1\"/>\n                </radialGradient>\n            </defs>\n            <ng-container *ngIf=\"options.showBackground\">\n                <circle *ngIf=\"!options.backgroundGradient\"\n                        [attr.cx]=\"svg.backgroundCircle.cx\"\n                        [attr.cy]=\"svg.backgroundCircle.cy\"\n                        [attr.r]=\"svg.backgroundCircle.r\"\n                        [attr.fill]=\"svg.backgroundCircle.fill\"\n                        [attr.fill-opacity]=\"svg.backgroundCircle.fillOpacity\"\n                        [attr.stroke]=\"svg.backgroundCircle.stroke\"\n                        [attr.stroke-width]=\"svg.backgroundCircle.strokeWidth\"/>\n                <circle *ngIf=\"options.backgroundGradient\"\n                        [attr.cx]=\"svg.backgroundCircle.cx\"\n                        [attr.cy]=\"svg.backgroundCircle.cy\"\n                        [attr.r]=\"svg.backgroundCircle.r\"\n                        attr.fill=\"url(#{{svg.radialGradient.id}})\"\n                        [attr.fill-opacity]=\"svg.backgroundCircle.fillOpacity\"\n                        [attr.stroke]=\"svg.backgroundCircle.stroke\"\n                        [attr.stroke-width]=\"svg.backgroundCircle.strokeWidth\"/>\n            </ng-container>            \n            <circle *ngIf=\"options.showInnerStroke\"\n                    [attr.cx]=\"svg.circle.cx\"\n                    [attr.cy]=\"svg.circle.cy\"\n                    [attr.r]=\"svg.circle.r\"\n                    [attr.fill]=\"svg.circle.fill\"\n                    [attr.stroke]=\"svg.circle.stroke\"\n                    [attr.stroke-width]=\"svg.circle.strokeWidth\"/>\n            <ng-container *ngIf=\"+options.percent!==0 || options.showZeroOuterStroke\">\n                <path *ngIf=\"!options.outerStrokeGradient\"\n                        [attr.d]=\"svg.path.d\"\n                        [attr.stroke]=\"svg.path.stroke\"\n                        [attr.stroke-width]=\"svg.path.strokeWidth\"\n                        [attr.stroke-linecap]=\"svg.path.strokeLinecap\"\n                        [attr.fill]=\"svg.path.fill\"/>\n                <path *ngIf=\"options.outerStrokeGradient\"\n                        [attr.d]=\"svg.path.d\"\n                        attr.stroke=\"url(#{{svg.outerLinearGradient.id}})\"\n                        [attr.stroke-width]=\"svg.path.strokeWidth\"\n                        [attr.stroke-linecap]=\"svg.path.strokeLinecap\"\n                        [attr.fill]=\"svg.path.fill\"/>\n            </ng-container>\n            <text *ngIf=\"!options.showImage && (options.showTitle || options.showUnits || options.showSubtitle)\"\n                  alignment-baseline=\"baseline\"\n                  [attr.x]=\"svg.circle.cx\"\n                  [attr.y]=\"svg.circle.cy\"\n                  [attr.text-anchor]=\"svg.title.textAnchor\">\n                <ng-container *ngIf=\"options.showTitle\">\n                    <tspan *ngFor=\"let tspan of svg.title.tspans\"\n                           [attr.x]=\"svg.title.x\"\n                           [attr.y]=\"svg.title.y\"\n                           [attr.dy]=\"tspan.dy\"\n                           [attr.font-size]=\"svg.title.fontSize\"\n                           [attr.font-weight]=\"svg.title.fontWeight\"\n                           [attr.fill]=\"svg.title.color\">{{tspan.span}}</tspan>\n                </ng-container>\n                <tspan *ngIf=\"options.showUnits\"\n                       [attr.font-size]=\"svg.units.fontSize\"\n                       [attr.font-weight]=\"svg.units.fontWeight\"\n                       [attr.fill]=\"svg.units.color\">{{svg.units.text}}</tspan>\n                <ng-container *ngIf=\"options.showSubtitle\">\n                    <tspan *ngFor=\"let tspan of svg.subtitle.tspans\"\n                           [attr.x]=\"svg.subtitle.x\"\n                           [attr.y]=\"svg.subtitle.y\"\n                           [attr.dy]=\"tspan.dy\"\n                           [attr.font-size]=\"svg.subtitle.fontSize\"\n                           [attr.font-weight]=\"svg.subtitle.fontWeight\"\n                           [attr.fill]=\"svg.subtitle.color\">{{tspan.span}}</tspan>\n                </ng-container>\n            </text>\n            <image *ngIf=\"options.showImage\" preserveAspectRatio=\"none\" \n                [attr.height]=\"svg.image.height\"\n                [attr.width]=\"svg.image.width\"\n                [attr.xlink:href]=\"svg.image.src\"\n                [attr.x]=\"svg.image.x\"\n                [attr.y]=\"svg.image.y\"\n            />\n        </svg>\n    `\r\n            },] }\r\n];\r\nCircleProgressComponent.ctorParameters = () => [\r\n    { type: CircleProgressOptions },\r\n    { type: ElementRef },\r\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\r\n];\r\nCircleProgressComponent.propDecorators = {\r\n    onClick: [{ type: Output }],\r\n    name: [{ type: Input }],\r\n    class: [{ type: Input }],\r\n    backgroundGradient: [{ type: Input }],\r\n    backgroundColor: [{ type: Input }],\r\n    backgroundGradientStopColor: [{ type: Input }],\r\n    backgroundOpacity: [{ type: Input }],\r\n    backgroundStroke: [{ type: Input }],\r\n    backgroundStrokeWidth: [{ type: Input }],\r\n    backgroundPadding: [{ type: Input }],\r\n    radius: [{ type: Input }],\r\n    space: [{ type: Input }],\r\n    percent: [{ type: Input }],\r\n    toFixed: [{ type: Input }],\r\n    maxPercent: [{ type: Input }],\r\n    renderOnClick: [{ type: Input }],\r\n    units: [{ type: Input }],\r\n    unitsFontSize: [{ type: Input }],\r\n    unitsFontWeight: [{ type: Input }],\r\n    unitsColor: [{ type: Input }],\r\n    outerStrokeGradient: [{ type: Input }],\r\n    outerStrokeWidth: [{ type: Input }],\r\n    outerStrokeColor: [{ type: Input }],\r\n    outerStrokeGradientStopColor: [{ type: Input }],\r\n    outerStrokeLinecap: [{ type: Input }],\r\n    innerStrokeColor: [{ type: Input }],\r\n    innerStrokeWidth: [{ type: Input }],\r\n    titleFormat: [{ type: Input }],\r\n    title: [{ type: Input }],\r\n    titleColor: [{ type: Input }],\r\n    titleFontSize: [{ type: Input }],\r\n    titleFontWeight: [{ type: Input }],\r\n    subtitleFormat: [{ type: Input }],\r\n    subtitle: [{ type: Input }],\r\n    subtitleColor: [{ type: Input }],\r\n    subtitleFontSize: [{ type: Input }],\r\n    subtitleFontWeight: [{ type: Input }],\r\n    imageSrc: [{ type: Input }],\r\n    imageHeight: [{ type: Input }],\r\n    imageWidth: [{ type: Input }],\r\n    animation: [{ type: Input }],\r\n    animateTitle: [{ type: Input }],\r\n    animateSubtitle: [{ type: Input }],\r\n    animationDuration: [{ type: Input }],\r\n    showTitle: [{ type: Input }],\r\n    showSubtitle: [{ type: Input }],\r\n    showUnits: [{ type: Input }],\r\n    showImage: [{ type: Input }],\r\n    showBackground: [{ type: Input }],\r\n    showInnerStroke: [{ type: Input }],\r\n    clockwise: [{ type: Input }],\r\n    responsive: [{ type: Input }],\r\n    startFromZero: [{ type: Input }],\r\n    showZeroOuterStroke: [{ type: Input }],\r\n    lazy: [{ type: Input }],\r\n    templateOptions: [{ type: Input, args: ['options',] }]\r\n};\n\nclass NgCircleProgressModule {\r\n    static forRoot(options = {}) {\r\n        return {\r\n            ngModule: NgCircleProgressModule,\r\n            providers: [\r\n                { provide: CircleProgressOptions, useValue: options }\r\n            ]\r\n        };\r\n    }\r\n}\r\nNgCircleProgressModule.decorators = [\r\n    { type: NgModule, args: [{\r\n                declarations: [CircleProgressComponent],\r\n                imports: [\r\n                    CommonModule\r\n                ],\r\n                exports: [CircleProgressComponent]\r\n            },] }\r\n];\n\n/*\r\n * Public API Surface of ng-circle-progress\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { CircleProgressComponent, CircleProgressOptions, NgCircleProgressModule };\n//# sourceMappingURL=ng-circle-progress.js.map\n","module.exports = \"<div class=\\\"modal-content\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Teachers Under {{ data.category }}</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n      <span aria-hidden=\\\"true\\\" (click)=\\\"c('Close click')\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table\\\">\\n              <thead>\\n                <tr>\\n                  <th>School Name</th>\\n                  <th>State</th>\\n                  <th>Local Government</th>\\n                  <th>Teacher's Fullname</th>\\n                  <th>Score</th>\\n                  <th>Effectively Met</th>\\n                  <th>Assessment Date</th>\\n                  <th>Action</th>\\n                </tr>\\n              </thead>\\n\\n              <tbody>\\n                <tr *ngFor=\\\"let item of assessmentSummary\\\">\\n                  <td>\\n                    <a>\\n                      {{ item.schoolname }}\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <a>\\n                      {{ item.state }}\\n                    </a>\\n                  </td>\\n\\n                  <td>\\n                    <a>\\n                      {{ item.lga }}\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <a\\n                      [routerLink]=\\\"['/teachers/teacher', item.teacherid]\\\"\\n                      routerLinkActive=\\\"router-link-active\\\"\\n                    >\\n                      {{ item.surname }} {{ item.othernames }}\\n                    </a>\\n                  </td>\\n\\n                  <td>{{ item.score }}%</td>\\n                  <td>\\n                    <mat-icon\\n                      *ngIf=\\\"item.score_category === 'Effectively Met(60-75)'\\\"\\n                      class=\\\"green-icon\\\"\\n                      >check_circle_outline</mat-icon\\n                    >\\n                  </td>\\n\\n                  <td>{{ item.date | date: \\\"medium\\\" }}</td>\\n                  <td>\\n                    <a\\n                      (click)=\\\"c()\\\"\\n                      [routerLink]=\\\"['teachers/coaching-mentoring']\\\"\\n                      [queryParams]=\\\"{ assesmentId: item.id }\\\"\\n                      mat-stroked-button\\n                      color=\\\"primary\\\"\\n                      >View More</a\\n                    >\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n          <div *ngIf=\\\"loading\\\" class=\\\"d-flex justify-content-center\\\">\\n            <mat-progress-spinner\\n              class=\\\"example-margin\\\"\\n              [color]=\\\"colorSpinner\\\"\\n              [mode]=\\\"mode\\\"\\n              [value]=\\\"value\\\"\\n            >\\n            </mat-progress-spinner>\\n          </div>\\n          <mat-paginator\\n            #paginator\\n            [length]=\\\"length\\\"\\n            [pageSize]=\\\"pageSize\\\"\\n            [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n            (page)=\\\"pageEvent = handlePageChange($event)\\\"\\n          >\\n          </mat-paginator>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">\\n      Close\\n    </button>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row mb-2\\\">\\n    <div class=\\\"col-xl-12\\\">\\n      <mat-progress-bar *ngIf=\\\"loading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n      <kt-portlet>\\n        <kt-portlet-header\\n          [title]=\\\"'Filter Report'\\\"\\n          [class]=\\\"\\n            'kt-portlet__head--lg kt-portlet__head--noborder kt-portlet__head--break-sm'\\n          \\\"\\n        >\\n          <ng-container ktPortletTools>\\n            <!-- <kt-context-menu></kt-context-menu> -->\\n          </ng-container>\\n        </kt-portlet-header>\\n        <kt-portlet-body [class]=\\\"'kt-portlet__body--fit'\\\">\\n          <ng-container ktPortletTools>\\n            <div class=\\\"container\\\">\\n              <form (ngSubmit)=\\\"filterReort()\\\" class=\\\"pb-4\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                    <mat-form-field>\\n                      <mat-select\\n                        placeholder=\\\"State\\\"\\n                        [formControl]=\\\"statesSelected\\\"\\n                        (selectionChange)=\\\"onStateSelectionChange($event)\\\"\\n                        multiple\\n                      >\\n                        <mat-select-trigger>\\n                          {{\\n                            statesSelected.value ? statesSelected.value[0] : \\\"\\\"\\n                          }}\\n                          <span\\n                            *ngIf=\\\"statesSelected.value?.length > 1\\\"\\n                            class=\\\"example-additional-selection\\\"\\n                          >\\n                            (+{{ statesSelected.value.length - 1 }} others)\\n                          </span>\\n                        </mat-select-trigger>\\n\\n                        <!-- <mat-option [value]=\\\"'All'\\\">All</mat-option> -->\\n                        <mat-option\\n                          *ngFor=\\\"let topping of states\\\"\\n                          [value]=\\\"topping.name\\\"\\n                          >{{ topping.name }}</mat-option\\n                        >\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <mat-form-field>\\n                      <mat-select\\n                        placeholder=\\\"Local Government Area\\\"\\n                        [formControl]=\\\"lgaSelected\\\"\\n                        (selectionChange)=\\\"onlgaSelectionChange($event)\\\"\\n                        multiple\\n                      >\\n                        <mat-select-trigger>\\n                          {{ lgaSelected.value ? lgaSelected.value[0] : \\\"\\\" }}\\n                          <span\\n                            *ngIf=\\\"lgaSelected.value?.length > 1\\\"\\n                            class=\\\"example-additional-selection\\\"\\n                          >\\n                            (+{{ lgaSelected.value.length - 1 }} others)\\n                          </span>\\n                        </mat-select-trigger>\\n                        <!-- <mat-option [value]=\\\"'All'\\\">All</mat-option> -->\\n                        <mat-option\\n                          *ngFor=\\\"let topping of localgovernments\\\"\\n                          [value]=\\\"topping.name\\\"\\n                          >{{ topping.name }}</mat-option\\n                        >\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n\\n                  <div class=\\\"col-md-4\\\">\\n                    <mat-form-field>\\n                      <mat-select\\n                        placeholder=\\\"School\\\"\\n                        [formControl]=\\\"schoolSelected\\\"\\n                        multiple\\n                      >\\n                        <mat-select-trigger>\\n                          {{\\n                            schoolSelected.value ? schoolSelected.value[0] : \\\"\\\"\\n                          }}\\n                          <span\\n                            *ngIf=\\\"schoolSelected.value?.length > 1\\\"\\n                            class=\\\"example-additional-selection\\\"\\n                          >\\n                            (+{{ schoolSelected.value.length - 1 }} others)\\n                          </span>\\n                        </mat-select-trigger>\\n                        <!-- <mat-option [value]=\\\"'All'\\\">All</mat-option> -->\\n                        <mat-option\\n                          *ngFor=\\\"let topping of schools\\\"\\n                          [value]=\\\"topping.schoolName\\\"\\n                          >{{ topping.schoolName }}</mat-option\\n                        >\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                    <mat-form-field appearance=\\\"fill\\\">\\n                      <mat-label>Choose a date</mat-label>\\n                      <input\\n                        [formControl]=\\\"dateRange\\\"\\n                        matInput\\n                        type=\\\"text\\\"\\n                        name=\\\"daterange\\\"\\n                        value=\\\"\\\"\\n                      />\\n                    </mat-form-field>\\n                  </div>\\n\\n                  <div class=\\\"px-3\\\">\\n                    <button\\n                      mat-raised-button\\n                      color=\\\"primary\\\"\\n                      aria-label=\\\"Example icon button with a home icon\\\"\\n                    >\\n                      <mat-icon>filter_list</mat-icon>\\n                      Filter\\n                    </button>\\n                  </div>\\n\\n                  <div class=\\\"px-3\\\">\\n                    <button\\n                      mat-raised-button\\n                      aria-label=\\\"Example icon button with a home icon\\\"\\n                      (click)=\\\"resetForm($event)\\\"\\n                    >\\n                      Reset\\n                    </button>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\"></div>\\n              </form>\\n            </div>\\n          </ng-container>\\n        </kt-portlet-body>\\n      </kt-portlet>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <mat-progress-bar *ngIf=\\\"loading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n      <kt-portlet>\\n        <kt-portlet-header\\n          [title]=\\\"''\\\"\\n          [class]=\\\"\\n            'kt-portlet__head--lg kt-portlet__head--noborder kt-portlet__head--break-sm'\\n          \\\"\\n        >\\n          <ng-container ktPortletTools>\\n            <kt-context-menu></kt-context-menu>\\n          </ng-container>\\n        </kt-portlet-header>\\n        <kt-portlet-body [class]=\\\"'kt-portlet__body--fit'\\\">\\n          <ng-container ktPortletTools>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <canvas height=\\\"300px\\\" #chart></canvas>\\n              </div>\\n            </div>\\n          </ng-container>\\n        </kt-portlet-body>\\n      </kt-portlet>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <kt-portlet class=\\\"py-4\\\">\\n    <kt-portlet-header\\n      [title]=\\\"'Coaching and Mentoring Assessment'\\\"\\n      [class]=\\\"\\n        'kt-portlet__head--lg kt-portlet__head--noborder kt-portlet__head--break-sm'\\n      \\\"\\n    >\\n      <ng-container ktPortletTools>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <button (click)=\\\"goBack()\\\" mat-button>\\n              <span>Back</span>\\n              <mat-icon>keyboard_arrow_right</mat-icon>\\n            </button>\\n          </div>\\n        </div>\\n      </ng-container>\\n    </kt-portlet-header>\\n    <kt-portlet-body [class]=\\\"'kt-portlet__body--fit'\\\">\\n      <ng-container ktPortletTools>\\n        <div *ngIf=\\\"isloading === true\\\" class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"d-flex justify-content-center py-4\\\">\\n              <mat-progress-spinner\\n                class=\\\"example-margin\\\"\\n                [color]=\\\"colorSpinner\\\"\\n                [mode]=\\\"mode\\\"\\n                [value]=\\\"value\\\"\\n                [diameter]=\\\"40\\\"\\n              >\\n              </mat-progress-spinner>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"container\\\">\\n          <div style=\\\"margin-top: 20px\\\">\\n            <h6>Summary</h6>\\n            <hr />\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"d-flex justify-content-center\\\">\\n                  <circle-progress\\n                    [percent]=\\\"totalScore\\\"\\n                    [radius]=\\\"100\\\"\\n                    [outerStrokeWidth]=\\\"16\\\"\\n                    [innerStrokeWidth]=\\\"8\\\"\\n                    [outerStrokeColor]=\\\"'#78C000'\\\"\\n                    [innerStrokeColor]=\\\"'#C7E596'\\\"\\n                    [subtitle]=\\\"'Average Score'\\\"\\n                  ></circle-progress>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row mt-3\\\">\\n              <div class=\\\"col-md-2\\\"></div>\\n              <div class=\\\"col-md-8\\\">\\n                <div class=\\\"table-responsive\\\">\\n                  <table class=\\\"table table-striped table-bordered\\\">\\n                    <thead>\\n                      <tr>\\n                        <th>Score</th>\\n                        <th>Remark</th>\\n                        <th></th>\\n                      </tr>\\n                    </thead>\\n                    <tbody>\\n                      <tr>\\n                        <td>60 - 100</td>\\n                        <td>Effectively Met</td>\\n                        <td>\\n                          <mat-icon\\n                            *ngIf=\\\"\\n                              data?.score_category === 'Effectively Met(60-75)'\\n                            \\\"\\n                            class=\\\"green-icon\\\"\\n                            >check_circle_outline</mat-icon\\n                          >\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>50 - 60</td>\\n                        <td>Partially Met</td>\\n                        <td>\\n                          <mat-icon\\n                            *ngIf=\\\"\\n                              data?.score_category === 'Partially Met(50-70)'\\n                            \\\"\\n                            class=\\\"yellow-icon\\\"\\n                            >check_circle_outline</mat-icon\\n                          >\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Below 50</td>\\n                        <td>Not Met</td>\\n                        <td>\\n                          <mat-icon\\n                            *ngIf=\\\"data?.score_category === 'Not Met(Below 50)'\\\"\\n                            class=\\\"red-icon\\\"\\n                            >check_circle_outline</mat-icon\\n                          >\\n                        </td>\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-2\\\"></div>\\n            </div>\\n          </div>\\n          <h6>Details</h6>\\n          <hr />\\n          <div class=\\\"row px-4 mb-4\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <mat-accordion class=\\\"example-headers-align py-2\\\">\\n                <mat-expansion-panel>\\n                  <mat-expansion-panel-header>\\n                    <mat-panel-title> Lesson Plan </mat-panel-title>\\n                  </mat-expansion-panel-header>\\n                  <div class=\\\"table-responsive\\\">\\n                    <table class=\\\"table table-striped table-bordered\\\">\\n                      <thead>\\n                        <tr>\\n                          <th rowspan=\\\"3\\\" scope=\\\"col\\\">Standard</th>\\n                          <th scope=\\\"col\\\">Criteria</th>\\n                          <th scope=\\\"col\\\">Effectively Met</th>\\n                          <th scope=\\\"col\\\">Partially Met</th>\\n                          <th scope=\\\"col\\\">Not Met</th>\\n                        </tr>\\n                      </thead>\\n                      <tbody>\\n                        <tr>\\n                          <td class=\\\"align-center\\\" rowspan=\\\"4\\\">\\n                            Availability and Use of Lesson Plan\\n                          </td>\\n                          <td>Teacher has lesson plan</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                lessonPlan &&\\n                                lessonPlan[\\n                                  'Availability and Use of Lesson Plan'\\n                                ][\\n                                  'Lesson objective clearly stated in measurable and achievable terms'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                lessonPlan &&\\n                                lessonPlan[\\n                                  'Availability and Use of Lesson Plan'\\n                                ][\\n                                  'Lesson objective clearly stated in measurable and achievable terms'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                lessonPlan &&\\n                                lessonPlan[\\n                                  'Availability and Use of Lesson Plan'\\n                                ][\\n                                  'Lesson objective clearly stated in measurable and achievable terms'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>\\n                            Lesson taught corresponds with plan and scheme\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                lessonPlan &&\\n                                lessonPlan[\\n                                  'Availability and Use of Lesson Plan'\\n                                ][\\n                                  'Lesson taught corresponds with plan and scheme of work'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                lessonPlan &&\\n                                lessonPlan[\\n                                  'Availability and Use of Lesson Plan'\\n                                ][\\n                                  'Lesson taught corresponds with plan and scheme of work'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                lessonPlan &&\\n                                lessonPlan[\\n                                  'Availability and Use of Lesson Plan'\\n                                ][\\n                                  'Lesson taught corresponds with plan and scheme of work'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>\\n                            Plan meets key requirements (eg. Objective,\\n                            Introduction, Presentation, etc.)\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                lessonPlan &&\\n                                lessonPlan[\\n                                  'Availability and Use of Lesson Plan'\\n                                ][\\n                                  'Plan meets key requirements(e.g Objective, introduction, Presentation etc.)'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                lessonPlan &&\\n                                lessonPlan[\\n                                  'Availability and Use of Lesson Plan'\\n                                ][\\n                                  'Plan meets key requirements(e.g Objective, introduction, Presentation etc.)'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                lessonPlan &&\\n                                lessonPlan[\\n                                  'Availability and Use of Lesson Plan'\\n                                ][\\n                                  'Plan meets key requirements(e.g Objective, introduction, Presentation etc.)'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n\\n                        <tr>\\n                          <!-- <td rowspan=\\\"0\\\">2</td> -->\\n                          <td>\\n                            Lesson Objective clearly stated in measurable and\\n                            achievable terms\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                lessonPlan &&\\n                                lessonPlan[\\n                                  'Availability and Use of Lesson Plan'\\n                                ][\\n                                  'Plan meets key requirements(e.g Objective, introduction, Presentation etc.)'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                lessonPlan &&\\n                                lessonPlan[\\n                                  'Availability and Use of Lesson Plan'\\n                                ][\\n                                  'Plan meets key requirements(e.g Objective, introduction, Presentation etc.)'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                lessonPlan &&\\n                                lessonPlan[\\n                                  'Availability and Use of Lesson Plan'\\n                                ][\\n                                  'Plan meets key requirements(e.g Objective, introduction, Presentation etc.)'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                      </tbody>\\n                    </table>\\n                  </div>\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                      <h4>Remarks</h4>\\n                      <div class=\\\"box\\\">\\n                        <p>\\n                          {{ data ? data[\\\"Lesson Plan\\\"]?.remark : \\\"\\\" }}\\n                        </p>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </mat-expansion-panel>\\n              </mat-accordion>\\n            </div>\\n          </div>\\n          <div class=\\\"row px-4 mb-4\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <mat-accordion class=\\\"example-headers-align py-2\\\">\\n                <mat-expansion-panel>\\n                  <mat-expansion-panel-header>\\n                    <mat-panel-title> Subject Matter Mastery </mat-panel-title>\\n                  </mat-expansion-panel-header>\\n\\n                  <div class=\\\"table-responsive\\\">\\n                    <table class=\\\"table table-striped table-bordered\\\">\\n                      <thead>\\n                        <tr>\\n                          <th scope=\\\"col\\\">Standard</th>\\n                          <th scope=\\\"col\\\">Criteria</th>\\n                          <th scope=\\\"col\\\">Effectively Met</th>\\n                          <th scope=\\\"col\\\">Partially Met</th>\\n                          <th scope=\\\"col\\\">Not Met</th>\\n                        </tr>\\n                      </thead>\\n                      <tbody>\\n                        <tr>\\n                          <td class=\\\"align-center\\\" rowspan=\\\"10\\\">\\n                            Teacher Demonstrates Understanding of Key concepts\\n                            and subject content\\n                          </td>\\n                          <td>Letter sounds</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ][\\n                                  'Alphabetic recognition, reading and writing'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ][\\n                                  'Alphabetic recognition, reading and writing'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ][\\n                                  'Alphabetic recognition, reading and writing'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <!-- <td rowspan=\\\"0\\\">2</td> -->\\n                          <td>Blending</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Blending'] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Blending'] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Blending'] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <!-- <td rowspan=\\\"0\\\">2</td> -->\\n                          <td>Alphabet recognition, reading and writing</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Fluency, grammatical accuracy, etc'] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Fluency, grammatical accuracy, etc'] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Fluency, grammatical accuracy, etc'] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <!-- < rowspan=\\\"0\\\">2</td> -->\\n                          <td>Phonemic Awareness</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Phonemic Awareness'] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Phonemic Awareness'] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Phonemic Awareness'] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <!-- <td rowspan=\\\"0\\\">2</td> -->\\n                          <td>Vocabulary development</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Vocabulary development'] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Vocabulary development'] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Vocabulary development'] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <!-- <td rowspan=\\\"0\\\">2</td> -->\\n                          <td>Word and sentence reading</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Word and sentence reading'] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Word and sentence reading'] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Word and sentence reading'] === '1'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <!-- <td rowspan=\\\"0\\\">2</td> -->\\n                          <td>Reading short paragraphs</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Reading short paragraphs'] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Reading short paragraphs'] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Reading short paragraphs'] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <!-- <td rowspan=\\\"0\\\">2</td> -->\\n                          <td>Writing wors, sentences and short paragraphs</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ][\\n                                  'Writing words, sentences and short paragraphs'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ][\\n                                  'Writing words, sentences and short paragraphs'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ][\\n                                  'Writing words, sentences and short paragraphs'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <!-- <td rowspan=\\\"0\\\">2</td> -->\\n                          <td>Fluency, grammatical accuracy, etc</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Fluency, grammatical accuracy, etc'] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Fluency, grammatical accuracy, etc'] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Fluency, grammatical accuracy, etc'] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <!-- <td rowspan=\\\"0\\\">2</td> -->\\n                          <td>Proper spelling of words</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Proper spelling of words'] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Proper spelling of words'] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                subjectMatterMastery &&\\n                                subjectMatterMastery[\\n                                  'Teacher Demonstrates Understanding of key concepts and subject content'\\n                                ]['Proper spelling of words'] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                      </tbody>\\n                    </table>\\n                  </div>\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                      <h4>Remarks</h4>\\n                      <div class=\\\"box\\\"></div>\\n                    </div>\\n                  </div>\\n                </mat-expansion-panel>\\n              </mat-accordion>\\n            </div>\\n          </div>\\n          <div class=\\\"row px-4 mb-4\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <mat-accordion class=\\\"example-headers-align py-2\\\">\\n                <mat-expansion-panel>\\n                  <mat-expansion-panel-header>\\n                    <mat-panel-title> Teaching Methodology </mat-panel-title>\\n                  </mat-expansion-panel-header>\\n                  <div class=\\\"table-responsive\\\">\\n                    <table class=\\\"table table-striped table-bordered\\\">\\n                      <thead>\\n                        <tr>\\n                          <th>Standard</th>\\n                          <th>Criteria</th>\\n                          <th>Effectively Met</th>\\n                          <th>Partially Met</th>\\n                          <th>Not Met</th>\\n                        </tr>\\n                      </thead>\\n                      <tbody>\\n                        <tr>\\n                          <td class=\\\"align-center\\\" rowspan=\\\"2\\\">\\n                            Lesson Introduction\\n                          </td>\\n                          <td>Introduction is apt, exiting and stumulating</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Lesson Introduction'][\\n                                  'Introduction is apt, exciting and stimulating'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Lesson Introduction'][\\n                                  'Introduction is apt, exciting and stimulating'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Lesson Introduction'][\\n                                  'Introduction is apt, exciting and stimulating'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>Lesson is linked to previous lesson</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Lesson Introduction'][\\n                                  'Lesson is linked to previous lesson'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Lesson Introduction'][\\n                                  'Lesson is linked to previous lesson'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Lesson Introduction'][\\n                                  'Lesson is linked to previous lesson'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td class=\\\"align-center\\\" rowspan=\\\"6\\\">\\n                            Lesson Delivery\\n                          </td>\\n                          <td>Lesson Inclusive of all learners</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Lesson Delivery'][\\n                                  'Lesson inclusive of all learner'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Lesson Delivery'][\\n                                  'Lesson inclusive of all learner'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Lesson Delivery'][\\n                                  'Lesson inclusive of all learner'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>\\n                            Lesson is sequential and proceeds from known to\\n                            unknown\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Lesson Delivery'][\\n                                  'Lesson is sequential and proceeds from known to unknown'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Lesson Delivery'][\\n                                  'Lesson is sequential and proceeds from known to unknown'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Lesson Delivery'][\\n                                  'Lesson is sequential and proceeds from known to unknown'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>\\n                            Teacher Organizes learners to learn in different\\n                            ways (Individual, peer, group or whole class)\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Lesson Delivery'][\\n                                  'Teacher organizes learners to leanr in different ways(individual, peer, group or whole class)'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Lesson Delivery'][\\n                                  'Teacher organizes learners to leanr in different ways(individual, peer, group or whole class)'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Lesson Delivery'][\\n                                  'Teacher organizes learners to leanr in different ways(individual, peer, group or whole class)'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>\\n                            Teacher rewards/praises learners for their efforts\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Lesson Delivery'][\\n                                  'Teacher rewards/praises learners for their efforts'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Lesson Delivery'][\\n                                  'Teacher rewards/praises learners for their efforts'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Lesson Delivery'][\\n                                  'Teacher rewards/praises learners for their efforts'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>Teacher uses variety of methods</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Lesson Delivery'][\\n                                  'Teacher users variety of methods'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Lesson Delivery'][\\n                                  'Teacher users variety of methods'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Lesson Delivery'][\\n                                  'Teacher users variety of methods'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>\\n                            Teacher moves round the classroom to provide support\\n                            to all learners\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Lesson Delivery'][\\n                                  'Teacher moves round the classroom to provide support to all learners'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td></td>\\n                          <mat-icon\\n                            *ngIf=\\\"\\n                              teachingMethod &&\\n                              teachingMethod['Lesson Delivery'][\\n                                'Teacher moves round the classroom to provide support to all learners'\\n                              ] === '2'\\n                            \\\"\\n                            class=\\\"yellow-icon\\\"\\n                            >check_circle_outline</mat-icon\\n                          >\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Lesson Delivery'][\\n                                  'Teacher moves round the classroom to provide support to all learners'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td class=\\\"align-center\\\" rowspan=\\\"3\\\">\\n                            Classroom management\\n                          </td>\\n                          <td>Orderly arrangement of the classrooom</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Classroom Management'][\\n                                  'Discipline and orderliness in the classroom'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Classroom Management'][\\n                                  'Discipline and orderliness in the classroom'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Classroom Management'][\\n                                  'Discipline and orderliness in the classroom'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>Teacher discourages chorus answer</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Classroom Management'][\\n                                  'Teacher discourages chorus answer'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Classroom Management'][\\n                                  'Teacher discourages chorus answer'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Classroom Management'][\\n                                  'Teacher discourages chorus answer'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>Discipline and orderliness in the classroom</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Classroom Management'][\\n                                  'Discipline and orderliness in the classroom'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Classroom Management'][\\n                                  'Discipline and orderliness in the classroom'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Classroom Management'][\\n                                  'Discipline and orderliness in the classroom'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n\\n                        <tr>\\n                          <td class=\\\"align-center\\\" rowspan=\\\"3\\\">\\n                            Time Management\\n                          </td>\\n                          <td>Lesson starts and ends on time</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Time Management'][\\n                                  'Lesson starts and ends on time'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Time Management'][\\n                                  'Lesson starts and ends on time'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Time Management'][\\n                                  'Lesson starts and ends on time'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>Pace was maintained throughout the lesson</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Time Management'][\\n                                  'Pace was maintained throughout the lesson'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Time Management'][\\n                                  'Pace was maintained throughout the lesson'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Time Management'][\\n                                  'Pace was maintained throughout the lesson'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>\\n                            All Objectives and class objectives are covered\\n                            within the alotted time\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Time Management'][\\n                                  'All objectives and class activities are covered within the alloted time'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Time Management'][\\n                                  'All objectives and class activities are covered within the alloted time'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Time Management'][\\n                                  'All objectives and class activities are covered within the alloted time'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td class=\\\"align-center\\\" rowspan=\\\"3\\\">\\n                            Teacher/Learner Interactions\\n                          </td>\\n                          <td>Teacher involves learners in the classroom</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Teacher/Learner Interaction'][\\n                                  'Teacher involves learners in classroom activities'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Teacher/Learner Interaction'][\\n                                  'Teacher involves learners in classroom activities'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Teacher/Learner Interaction'][\\n                                  'Teacher involves learners in classroom activities'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>\\n                            Ability of teacher to identify learners by name\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Teacher/Learner Interaction'][\\n                                  'Ability of teachers to identify learners by name'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Teacher/Learner Interaction'][\\n                                  'Ability of teachers to identify learners by name'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yello-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Teacher/Learner Interaction'][\\n                                  'Ability of teachers to identify learners by name'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>\\n                            Teacher asks appropriate questions to elicit\\n                            responses from learners\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Teacher/Learner Interaction'][\\n                                  'Teacher asks appropriate questions to elicit responses from learners'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Teacher/Learner Interaction'][\\n                                  'Teacher asks appropriate questions to elicit responses from learners'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Teacher/Learner Interaction'][\\n                                  'Teacher asks appropriate questions to elicit responses from learners'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td class=\\\"align-center\\\" rowspan=\\\"5\\\">\\n                            Learning Assessment(Teacher uses different ways to\\n                            assess learning)\\n                          </td>\\n                          <td>Teacher asks more open-ended questions</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Learning Asessment(Teacher uses different ways to assess learning)'\\n                                ]['Teacher asks more open-ended questions'] ===\\n                                  '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Learning Asessment(Teacher uses different ways to assess learning)'\\n                                ]['Teacher asks more open-ended questions'] ===\\n                                  '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Learning Asessment(Teacher uses different ways to assess learning)'\\n                                ]['Teacher asks more open-ended questions'] ===\\n                                  '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>Teacher gives classroom/assignment regualarly</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Learning Asessment(Teacher uses different ways to assess learning)'\\n                                ][\\n                                  'Teacher gives classwork/assignments regularly'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Learning Asessment(Teacher uses different ways to assess learning)'\\n                                ][\\n                                  'Teacher gives classwork/assignments regularly'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Learning Asessment(Teacher uses different ways to assess learning)'\\n                                ][\\n                                  'Teacher gives classwork/assignments regularly'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>\\n                            Learners work books are constructively checked and\\n                            marked\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Learning Asessment(Teacher uses different ways to assess learning)'\\n                                ][\\n                                  'Learners work books are constructively checked and marked'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Learning Asessment(Teacher uses different ways to assess learning)'\\n                                ][\\n                                  'Learners work books are constructively checked and marked'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Learning Asessment(Teacher uses different ways to assess learning)'\\n                                ][\\n                                  'Learners work books are constructively checked and marked'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>\\n                            Teacher provides constructive feedback to learner\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Learning Asessment(Teacher uses different ways to assess learning)'\\n                                ][\\n                                  'Teacher provides constructive feedback to learners'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Learning Asessment(Teacher uses different ways to assess learning)'\\n                                ][\\n                                  'Teacher provides constructive feedback to learners'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Learning Asessment(Teacher uses different ways to assess learning)'\\n                                ][\\n                                  'Teacher provides constructive feedback to learners'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>\\n                            Teacher gives clas work and more around to support\\n                            weak learners and assess the work\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Learning Asessment(Teacher uses different ways to assess learning)'\\n                                ][\\n                                  'Teacher gives class work and move around to support weak learners and assess the work'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Learning Asessment(Teacher uses different ways to assess learning)'\\n                                ][\\n                                  'Teacher gives class work and move around to support weak learners and assess the work'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Learning Asessment(Teacher uses different ways to assess learning)'\\n                                ][\\n                                  'Teacher gives class work and move around to support weak learners and assess the work'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td class=\\\"align-center\\\" rowspan=\\\"2\\\">\\n                            Learners Participation\\n                          </td>\\n                          <td>\\n                            Learners participate actively during the lesson\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Learners Participation'][\\n                                  'Learners particpate actively during the lesson'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Learners Participation'][\\n                                  'Learners particpate actively during the lesson'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Learners Participation'][\\n                                  'Learners particpate actively during the lesson'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>Learners ask questions</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Learners Participation'][\\n                                  'Learners ask questions'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Learners Participation'][\\n                                  'Learners ask questions'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Learners Participation'][\\n                                  'Learners ask questions'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td class=\\\"align-center\\\" rowspan=\\\"4\\\">\\n                            Availability & Access to Textbooks/Instructional\\n                            Resources\\n                          </td>\\n                          <td>Each learner has a textbook</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Availability & Access to Textbooks/Instructional Resources'\\n                                ]['Each learner has a textbook'] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Availability & Access to Textbooks/Instructional Resources'\\n                                ]['Each learner has a textbook'] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Availability & Access to Textbooks/Instructional Resources'\\n                                ]['Each learner has a textbook'] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>Learners make use of their textbooks</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Availability & Access to Textbooks/Instructional Resources'\\n                                ]['Learners makes use of their textbooks'] ===\\n                                  '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Availability & Access to Textbooks/Instructional Resources'\\n                                ]['Learners makes use of their textbooks'] ===\\n                                  '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Availability & Access to Textbooks/Instructional Resources'\\n                                ]['Learners makes use of their textbooks'] ===\\n                                  '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>\\n                            Learners have access to textbooks and other\\n                            materials\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Availability & Access to Textbooks/Instructional Resources'\\n                                ][\\n                                  'Learners have access to textbooks and other materials'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Availability & Access to Textbooks/Instructional Resources'\\n                                ][\\n                                  'Learners have access to textbooks and other materials'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Availability & Access to Textbooks/Instructional Resources'\\n                                ][\\n                                  'Learners have access to textbooks and other materials'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>\\n                            Learners have writing materials and could be seen\\n                            using them\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Availability & Access to Textbooks/Instructional Resources'\\n                                ][\\n                                  'Learners have writing materials and could be seen using them'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Availability & Access to Textbooks/Instructional Resources'\\n                                ][\\n                                  'Learners have writing materials and could be seen using them'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod[\\n                                  'Availability & Access to Textbooks/Instructional Resources'\\n                                ][\\n                                  'Learners have writing materials and could be seen using them'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td class=\\\"align-center\\\" rowspan=\\\"3\\\">Conclusion</td>\\n                          <td>\\n                            Teacher summarizes key points of the lesson the\\n                            chalk/white board\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Conclusion'][\\n                                  'Teacher summarise key points of the lesson on the chalk/white board'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Conclusion'][\\n                                  'Teacher summarise key points of the lesson on the chalk/white board'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Conclusion'][\\n                                  'Teacher summarise key points of the lesson on the chalk/white board'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>\\n                            Teacher asks learners relevant questions to recap\\n                            the lesson or check learning\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Conclusion'][\\n                                  'Teacher asks learners relevant question to recap the lesson or check learning'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td></td>\\n                          <mat-icon\\n                            *ngIf=\\\"\\n                              teachingMethod &&\\n                              teachingMethod['Conclusion'][\\n                                'Teacher asks learners relevant question to recap the lesson or check learning'\\n                              ] === '2'\\n                            \\\"\\n                            class=\\\"yellow-icon\\\"\\n                            >check_circle_outline</mat-icon\\n                          >\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Conclusion'][\\n                                  'Teacher asks learners relevant question to recap the lesson or check learning'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>Teacher gives learners homework</td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Conclusion'][\\n                                  'Teacher gives learners homework'\\n                                ] === '3'\\n                              \\\"\\n                              class=\\\"green-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Conclusion'][\\n                                  'Teacher gives learners homework'\\n                                ] === '2'\\n                              \\\"\\n                              class=\\\"yellow-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                          <td>\\n                            <mat-icon\\n                              *ngIf=\\\"\\n                                teachingMethod &&\\n                                teachingMethod['Conclusion'][\\n                                  'Teacher gives learners homework'\\n                                ] === '1'\\n                              \\\"\\n                              class=\\\"red-icon\\\"\\n                              >check_circle_outline</mat-icon\\n                            >\\n                          </td>\\n                        </tr>\\n                      </tbody>\\n                    </table>\\n                  </div>\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                      <h4>Remarks</h4>\\n                      <div class=\\\"box\\\"></div>\\n                    </div>\\n                  </div>\\n                </mat-expansion-panel>\\n              </mat-accordion>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"margin-top: 30px\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <canvas height=\\\"300px\\\" #chart></canvas>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"margin-top: 30px\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <h5 style=\\\"color: #000\\\">Areas of Improvement</h5>\\n                <div class=\\\"box\\\">\\n                  <p>{{ data?.areas_of_improvement }}</p>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <h5 style=\\\"color: #000\\\">Areas of Strength</h5>\\n                <div class=\\\"box\\\">\\n                  <p>{{ data?.areas_of_strength }}</p>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div style=\\\"margin-top: 30px\\\">\\n            <div class=\\\"row mb-3 mt-3\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <h5 class=\\\"text-center\\\" style=\\\"color: #000\\\">\\n                  {{ data?.teacher?.surname }} {{ data?.teacher?.othernames }}\\n                </h5>\\n                <hr />\\n                <h5 class=\\\"text-center\\\">Name of Teacher Observed</h5>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <h5 class=\\\"text-center\\\" style=\\\"color: #000\\\">\\n                  {{ data?.teacher?.phonenumber }}\\n                </h5>\\n                <hr />\\n                <h5 class=\\\"text-center\\\">GSM Number</h5>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <h5 class=\\\"text-center\\\" style=\\\"color: #000\\\">\\n                  {{ data?.date | date: \\\"medium\\\" }}\\n                </h5>\\n                <hr />\\n                <h5 class=\\\"text-center\\\">Signature/Date</h5>\\n              </div>\\n            </div>\\n            <div class=\\\"row pt-3\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <h5 class=\\\"text-center\\\" style=\\\"color: #000\\\">\\n                  {{ data?.mentor?.firstname }} {{ data?.mentor?.lastname }}\\n                </h5>\\n                <hr />\\n                <h5 class=\\\"text-center\\\">Name of Mentor</h5>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <h5 class=\\\"text-center\\\" style=\\\"color: #000\\\">\\n                  {{ data?.mentor?.phonenumber }}\\n                </h5>\\n                <hr />\\n                <h5 class=\\\"text-center\\\">GSM Number</h5>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <h5 class=\\\"text-center\\\" style=\\\"color: #000\\\">\\n                  {{ data?.date | date: \\\"medium\\\" }}\\n                </h5>\\n                <hr />\\n                <h5 class=\\\"text-center\\\">Signature/Date</h5>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </ng-container>\\n    </kt-portlet-body>\\n  </kt-portlet>\\n</div>\\n\"","module.exports = \"<div class=\\\"modal-content\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">\\n      {{ data?.teacher?.surname }} {{ data?.teacher?.otherNames }}\\n    </h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n      <span aria-hidden=\\\"true\\\" (click)=\\\"c('Close click')\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div *ngIf=\\\"data?.teacher?.profile_url !== null\\\" class=\\\"row\\\">\\n        <div class=\\\"col-xl-12\\\">\\n          <div class=\\\"image-avatar-wrapper\\\">\\n            <img\\n              class=\\\"image-avatar\\\"\\n              alt=\\\"profile\\\"\\n              src=\\\"{{ data?.teacher?.profile_url }}\\\"\\n            />\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-6\\\">\\n          <span>Surname</span>\\n          <h6>{{ data?.teacher?.surname }}</h6>\\n        </div>\\n        <div class=\\\"col-xl-6\\\">\\n          <span>Other Names</span>\\n          <h6>{{ data?.teacher?.otherNames }}</h6>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-12\\\">\\n          <span>School</span>\\n          <h6>{{ data?.teacher?.schoolName }}</h6>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-12\\\">\\n          <span>Email Address</span>\\n          <h6>{{ data?.teacher?.email }}</h6>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-6\\\">\\n          <span>Regsitration Number</span>\\n          <h6>{{ data?.teacher?.registrationNumber }}</h6>\\n        </div>\\n        <div class=\\\"col-xl-6\\\">\\n          <span>Qualification</span>\\n          <h6>{{ data?.teacher?.qualification }}</h6>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-6\\\">\\n          <span>Date of Birth</span>\\n          <h6>{{ data?.teacher?.dateOfBirth | date: \\\"mediumDate\\\" }}</h6>\\n        </div>\\n        <div class=\\\"col-xl-6\\\">\\n          <span>Subject Taught</span>\\n          <h6>{{ data?.teacher?.subjectTaught }}</h6>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-6\\\">\\n          <span>Contact Number</span>\\n          <h6>{{ data?.teacher?.telePhoneNumber }}</h6>\\n        </div>\\n        <div class=\\\"col-xl-6\\\">\\n          <span>Teaching Type</span>\\n          <h6>{{ data?.teacher?.teachingType }}</h6>\\n        </div>\\n      </div>\\n      <h3 class=\\\"mt-3\\\">Effectiveness Score Card</h3>\\n      <hr />\\n\\n      <div class=\\\"pt-1\\\">\\n        <table class=\\\"table\\\">\\n          <thead>\\n            <tr>\\n              <th>Score</th>\\n              <th>Effectively Met</th>\\n              <th>Partially Met</th>\\n              <th>Not Met</th>\\n              <th>Assessment Date</th>\\n              <th>Action</th>\\n            </tr>\\n          </thead>\\n\\n          <tbody>\\n            <tr *ngFor=\\\"let item of assessmentSummary\\\">\\n              <td>{{ item.score }}%</td>\\n              <td>\\n                <mat-icon\\n                  *ngIf=\\\"item.score_category === 'Effectively Met(60-75)'\\\"\\n                  class=\\\"green-icon\\\"\\n                  >check_circle_outline</mat-icon\\n                >\\n              </td>\\n              <td>\\n                <mat-icon\\n                  *ngIf=\\\"item.score_category === 'Partially Met(50-70)'\\\"\\n                  class=\\\"yellow-icon\\\"\\n                  >check_circle_outline</mat-icon\\n                >\\n              </td>\\n              <td>\\n                <mat-icon\\n                  *ngIf=\\\"item.score_category === 'Not Met(Below 50)'\\\"\\n                  class=\\\"red-icon\\\"\\n                  >check_circle_outline</mat-icon\\n                >\\n              </td>\\n              <td>{{ item.date | date: \\\"medium\\\" }}</td>\\n              <td>\\n                <a\\n                  (click)=\\\"c()\\\"\\n                  [routerLink]=\\\"['teachers/coaching-mentoring']\\\"\\n                  [queryParams]=\\\"{ assesmentId: item.id }\\\"\\n                  mat-stroked-button\\n                  color=\\\"primary\\\"\\n                  >View More</a\\n                >\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n        <div\\n          *ngIf=\\\"isLoadingAssessmentRecord\\\"\\n          class=\\\"d-flex justify-content-center\\\"\\n        >\\n          <mat-progress-spinner\\n            class=\\\"example-margin\\\"\\n            [color]=\\\"colorSpinner\\\"\\n            [mode]=\\\"mode\\\"\\n            [value]=\\\"value\\\"\\n          >\\n          </mat-progress-spinner>\\n        </div>\\n      </div>\\n\\n      <mat-paginator\\n        #paginator\\n        [length]=\\\"length\\\"\\n        [pageSize]=\\\"pageSize\\\"\\n        [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n        (page)=\\\"pageEvent = handlePageChange($event)\\\"\\n      >\\n      </mat-paginator>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">\\n      Close\\n    </button>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"row mb-2\\\">\\n  <div class=\\\"col-xl-8\\\">\\n    <mat-progress-bar\\n      *ngIf=\\\"loadingFilterBox\\\"\\n      mode=\\\"indeterminate\\\"\\n    ></mat-progress-bar>\\n    <kt-portlet>\\n      <kt-portlet-header\\n        [title]=\\\"'Filter Report'\\\"\\n        [class]=\\\"\\n          'kt-portlet__head--lg kt-portlet__head--noborder kt-portlet__head--break-sm'\\n        \\\"\\n      >\\n        <ng-container ktPortletTools>\\n          <!-- <kt-context-menu></kt-context-menu> -->\\n        </ng-container>\\n      </kt-portlet-header>\\n      <kt-portlet-body [class]=\\\"'kt-portlet__body--fit'\\\">\\n        <ng-container ktPortletTools>\\n          <div class=\\\"container\\\">\\n            <form (ngSubmit)=\\\"filterData()\\\" class=\\\"pb-4\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                  <mat-form-field>\\n                    <mat-select\\n                      placeholder=\\\"State\\\"\\n                      [formControl]=\\\"statesSelected\\\"\\n                      (selectionChange)=\\\"onStateSelectionChange($event)\\\"\\n                      multiple\\n                    >\\n                      <mat-select-trigger>\\n                        {{\\n                          statesSelected.value ? statesSelected.value[0] : \\\"\\\"\\n                        }}\\n                        <span\\n                          *ngIf=\\\"statesSelected.value?.length > 1\\\"\\n                          class=\\\"example-additional-selection\\\"\\n                        >\\n                          (+{{ statesSelected.value.length - 1 }} others)\\n                        </span>\\n                      </mat-select-trigger>\\n\\n                      <!-- <mat-option [value]=\\\"'All'\\\">All</mat-option> -->\\n                      <mat-option\\n                        *ngFor=\\\"let topping of states\\\"\\n                        [value]=\\\"topping.name\\\"\\n                        >{{ topping.name }}</mat-option\\n                      >\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <mat-form-field>\\n                    <mat-select\\n                      placeholder=\\\"Local Government Area\\\"\\n                      [formControl]=\\\"lgaSelected\\\"\\n                      (selectionChange)=\\\"onlgaSelectionChange($event)\\\"\\n                      multiple\\n                    >\\n                      <mat-select-trigger>\\n                        {{ lgaSelected.value ? lgaSelected.value[0] : \\\"\\\" }}\\n                        <span\\n                          *ngIf=\\\"lgaSelected.value?.length > 1\\\"\\n                          class=\\\"example-additional-selection\\\"\\n                        >\\n                          (+{{ lgaSelected.value.length - 1 }} others)\\n                        </span>\\n                      </mat-select-trigger>\\n                      <!-- <mat-option [value]=\\\"'All'\\\">All</mat-option> -->\\n                      <mat-option\\n                        *ngFor=\\\"let topping of localgovernments\\\"\\n                        [value]=\\\"topping.name\\\"\\n                        >{{ topping.name }}</mat-option\\n                      >\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <mat-form-field>\\n                    <mat-select\\n                      placeholder=\\\"School\\\"\\n                      [formControl]=\\\"schoolSelected\\\"\\n                      multiple\\n                    >\\n                      <mat-select-trigger>\\n                        {{\\n                          schoolSelected.value ? schoolSelected.value[0] : \\\"\\\"\\n                        }}\\n                        <span\\n                          *ngIf=\\\"schoolSelected.value?.length > 1\\\"\\n                          class=\\\"example-additional-selection\\\"\\n                        >\\n                          (+{{ schoolSelected.value.length - 1 }} others)\\n                        </span>\\n                      </mat-select-trigger>\\n                      <mat-option [value]=\\\"'All'\\\">All</mat-option>\\n                      <mat-option\\n                        *ngFor=\\\"let topping of schools\\\"\\n                        [value]=\\\"topping.schoolName\\\"\\n                        >{{ topping.schoolName }}</mat-option\\n                      >\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"px-3\\\">\\n                    <button\\n                      mat-raised-button\\n                      color=\\\"primary\\\"\\n                      aria-label=\\\"Example icon button with a home icon\\\"\\n                    >\\n                      <mat-icon>filter_list</mat-icon>\\n                      Filter\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\"></div>\\n            </form>\\n          </div>\\n        </ng-container>\\n      </kt-portlet-body>\\n    </kt-portlet>\\n  </div>\\n  <div class=\\\"col-xl-4\\\">\\n    <mat-progress-bar *ngIf=\\\"loading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n    <kt-portlet>\\n      <kt-portlet-header\\n        [title]=\\\"'Total Number of Teachers'\\\"\\n        [class]=\\\"\\n          'kt-portlet__head--lg kt-portlet__head--noborder kt-portlet__head--break-sm'\\n        \\\"\\n      >\\n        <ng-container ktPortletTools>\\n          <kt-context-menu></kt-context-menu>\\n        </ng-container>\\n      </kt-portlet-header>\\n      <kt-portlet-body [class]=\\\"'kt-portlet__body--fit'\\\">\\n        <!-- Checkbox Column -->\\n        <ng-container>\\n          <div class=\\\"container\\\">\\n            <div class=\\\"row mb-2\\\">\\n              <div class=\\\"col-xl-12\\\">\\n                <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n                  <h1>{{ totalCount }}</h1>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"kt-widget14__chart\\\" style=\\\"height: 150px\\\">\\n                <canvas #chart></canvas>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-xl-6\\\">\\n                <div>\\n                  <h5 class=\\\"\\\">Total Female</h5>\\n                  <h1 style=\\\"color: #f29cb3\\\" class=\\\"text-center\\\">\\n                    {{ totalFemale }}\\n                  </h1>\\n                </div>\\n              </div>\\n              <div class=\\\"col-xl-6\\\">\\n                <div class=\\\"\\\">\\n                  <div>\\n                    <h5 class=\\\"\\\">Total Male</h5>\\n                    <h1 style=\\\"color: #79c6f1\\\" class=\\\"text-center\\\">\\n                      {{ totalMale }}\\n                    </h1>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </ng-container>\\n      </kt-portlet-body>\\n    </kt-portlet>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div [ngClass]=\\\"{ 'col-xl-12': !editMode, 'col-xl-8': editMode }\\\">\\n    <mat-progress-bar *ngIf=\\\"loading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n    <kt-portlet>\\n      <kt-portlet-header\\n        [title]=\\\"'All Teachers'\\\"\\n        [class]=\\\"\\n          'kt-portlet__head--lg kt-portlet__head--noborder kt-portlet__head--break-sm'\\n        \\\"\\n      >\\n        <ng-container ktPortletTools>\\n          <kt-context-menu></kt-context-menu>\\n        </ng-container>\\n      </kt-portlet-header>\\n      <kt-portlet-body [class]=\\\"'kt-portlet__body--fit'\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"d-flex justify-content-between\\\">\\n              <div class=\\\"px-3\\\">\\n                <mat-form-field>\\n                  <mat-label>Search</mat-label>\\n                  <input\\n                    matInput\\n                    (keyup)=\\\"applyFilter($event)\\\"\\n                    placeholder=\\\"Searching for...\\\"\\n                    #input\\n                  />\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"px-3\\\">\\n                <button\\n                  mat-raised-button\\n                  color=\\\"primary\\\"\\n                  (click)=\\\"exportPDF()\\\"\\n                  aria-label=\\\"Example icon button with a home icon\\\"\\n                >\\n                  <mat-icon>filter_list</mat-icon>\\n                  Export PDF\\n                </button>\\n                <button\\n                  mat-raised-button\\n                  color=\\\"secondary\\\"\\n                  class=\\\"ml-2\\\"\\n                  (click)=\\\"ExportTOExcel()\\\"\\n                  aria-label=\\\"Example icon button with a home icon\\\"\\n                >\\n                  <mat-icon>filter_list</mat-icon>\\n                  Export Excel\\n                </button>\\n              </div>\\n            </div>\\n            <!-- <div class=\\\"px-3\\\">\\n              <mat-form-field>\\n                <mat-label>Filter</mat-label>\\n                <input\\n                  matInput\\n                  (keyup)=\\\"applyFilter($event)\\\"\\n                  placeholder=\\\"Searching for...\\\"\\n                  #input\\n                />\\n              </mat-form-field>\\n            </div> -->\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-4 pl-4\\\">\\n            <div class=\\\"custom-file\\\">\\n              <input\\n                accept=\\\"application/vnd.ms-excel;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;\\\"\\n                type=\\\"file\\\"\\n                class=\\\"custom-file-input\\\"\\n                id=\\\"customFile\\\"\\n              />\\n              <label class=\\\"custom-file-label\\\" for=\\\"customFile\\\"\\n                >Bulk Upload(Excel)</label\\n              >\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <mat-table #table [dataSource]=\\\"dataSource\\\">\\n              <!-- Checkbox Column -->\\n              <ng-container matColumnDef=\\\"select\\\">\\n                <mat-header-cell *matHeaderCellDef>\\n                  <mat-checkbox\\n                    (change)=\\\"$event ? masterToggle() : null\\\"\\n                    [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                    [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"\\n                    [disabled]=\\\"true\\\"\\n                  >\\n                  </mat-checkbox>\\n                </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let row\\\">\\n                  <mat-checkbox\\n                    (click)=\\\"$event.stopPropagation()\\\"\\n                    (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                    [checked]=\\\"selection.isSelected(row)\\\"\\n                    [disabled]=\\\"true\\\"\\n                  >\\n                  </mat-checkbox>\\n                </mat-cell>\\n              </ng-container>\\n\\n              <!-- Position Column -->\\n              <ng-container matColumnDef=\\\"registrationNumber\\\">\\n                <mat-header-cell *matHeaderCellDef>\\n                  Registration Number\\n                </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.registrationNumber }}\\n                </mat-cell>\\n              </ng-container>\\n              <!-- Name Column -->\\n              <ng-container matColumnDef=\\\"surname\\\">\\n                <mat-header-cell *matHeaderCellDef> Surname </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.surname }}\\n                </mat-cell>\\n              </ng-container>\\n              <!-- Weight Column -->\\n              <ng-container matColumnDef=\\\"otherNames\\\">\\n                <mat-header-cell *matHeaderCellDef>\\n                  Other Names\\n                </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.otherNames }}\\n                </mat-cell>\\n              </ng-container>\\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"schoolName\\\">\\n                <mat-header-cell *matHeaderCellDef> School </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.schoolName }}\\n                </mat-cell>\\n              </ng-container>\\n              <ng-container matColumnDef=\\\"gender\\\">\\n                <mat-header-cell *matHeaderCellDef> Gender </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.gender }}\\n                </mat-cell>\\n              </ng-container>\\n              <ng-container matColumnDef=\\\"actions\\\">\\n                <mat-header-cell *matHeaderCellDef>\\n                  <!-- <mat-checkbox\\n                    (change)=\\\"$event ? masterToggle() : null\\\"\\n                    [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                    [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"\\n                  > -->\\n                  <!-- </mat-checkbox> -->\\n                  Actions\\n                </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\">\\n                  <!-- <mat-checkbox\\n                    (click)=\\\"$event.stopPropagation()\\\"\\n                    (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                    [checked]=\\\"selection.isSelected(row)\\\"\\n                  >\\n                  </mat-checkbox> -->\\n                  <a\\n                    [routerLink]=\\\"['/teachers/teacher', element.id]\\\"\\n                    mat-icon-button\\n                    color=\\\"primary\\\"\\n                    aria-label=\\\"Example icon button with a home icon\\\"\\n                    (click)=\\\"onRowElementClick($event, element)\\\"\\n                  >\\n                    <mat-icon>visibility</mat-icon>\\n                  </a>\\n                </mat-cell>\\n              </ng-container>\\n              <mat-header-row\\n                *matHeaderRowDef=\\\"displayedColumns\\\"\\n              ></mat-header-row>\\n              <mat-row\\n                *matRowDef=\\\"let row; columns: displayedColumns\\\"\\n                (click)=\\\"selection.toggle(row)\\\"\\n              >\\n              </mat-row>\\n            </mat-table>\\n            <mat-paginator\\n              [pageSizeOptions]=\\\"[5, 10, 20]\\\"\\n              showFirstLastButtons\\n            ></mat-paginator>\\n          </div>\\n        </div>\\n      </kt-portlet-body>\\n    </kt-portlet>\\n  </div>\\n  <div *ngIf=\\\"editMode\\\" class=\\\"col-xl-4\\\">\\n    <kt-portlet [class]=\\\"'kt-portlet--height-fluid'\\\">\\n      <ng-container ktPortletTools>\\n        <div class=\\\"container school-detail\\\">\\n          <div class=\\\"row py-4\\\">\\n            <div class=\\\"col-xl-12\\\">\\n              <div class=\\\"d-flex justify-content-end\\\">\\n                <button\\n                  mat-icon-button\\n                  (click)=\\\"closeDetailPage($event)\\\"\\n                  color=\\\"accent\\\"\\n                  aria-label=\\\"Example icon button with a delete icon\\\"\\n                >\\n                  <mat-icon>cancel</mat-icon>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"school.profile_url !== null\\\" class=\\\"row\\\">\\n            <div class=\\\"col-xl-12\\\">\\n              <div class=\\\"image-avatar-wrapper\\\">\\n                <img\\n                  class=\\\"image-avatar\\\"\\n                  alt=\\\"profile\\\"\\n                  src=\\\"{{ school.profile_url }}\\\"\\n                />\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xl-6\\\">\\n              <span>Surname</span>\\n              <h6>{{ school.surname }}</h6>\\n            </div>\\n            <div class=\\\"col-xl-6\\\">\\n              <span>Other Names</span>\\n              <h6>{{ school.otherNames }}</h6>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xl-12\\\">\\n              <span>School</span>\\n              <h6>{{ school.schoolName }}</h6>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xl-12\\\">\\n              <span>Email Address</span>\\n              <h6>{{ school.email }}</h6>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xl-6\\\">\\n              <span>Regsitration Number</span>\\n              <h6>{{ school.registrationNumber }}</h6>\\n            </div>\\n            <div class=\\\"col-xl-6\\\">\\n              <span>Qualification</span>\\n              <h6>{{ school.qualification }}</h6>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xl-6\\\">\\n              <span>Date of Birth</span>\\n              <h6>{{ school.dateOfBirth | date: \\\"mediumDate\\\" }}</h6>\\n            </div>\\n            <div class=\\\"col-xl-6\\\">\\n              <span>Subject Taught</span>\\n              <h6>{{ school.subjectTaught }}</h6>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xl-6\\\">\\n              <span>Contact Number</span>\\n              <h6>{{ school.telePhoneNumber }}</h6>\\n            </div>\\n            <div class=\\\"col-xl-6\\\">\\n              <span>Teaching Type</span>\\n              <h6>{{ school.teachingType }}</h6>\\n            </div>\\n          </div>\\n          <!-- <div class=\\\"row\\\">\\n            <div class=\\\"col-xl-12\\\">\\n              <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\">\\n                <agm-marker [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\"></agm-marker>\\n              </agm-map>\\n            </div>\\n          </div> -->\\n        </div>\\n      </ng-container>\\n    </kt-portlet>\\n  </div>\\n  <!-- <div class=\\\"col-xl-4\\\">\\n    <kt-portlet [class]=\\\"'kt-portlet--height-fluid'\\\">\\n      <kt-portlet-header [title]=\\\"'Authors Profit'\\\">\\n        <ng-container ktPortletTools>\\n          <kt-context-menu2></kt-context-menu2>\\n        </ng-container>\\n      </kt-portlet-header>\\n      <kt-portlet-body>\\n        <kt-widget4 [data]=\\\"widget4_4\\\">\\n          <ng-template #actionTemplate let-item=\\\"item\\\">\\n            <span class=\\\"kt-widget4__number\\\" [ngClass]=\\\"item.valueColor\\\">{{\\n              item.value\\n            }}</span>\\n          </ng-template>\\n        </kt-widget4>\\n      </kt-portlet-body>\\n    </kt-portlet>\\n  </div> -->\\n</div>\\n\"","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h5 class=\\\"modal-title\\\">Bulk Upload Teachers</h5>\\n  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n    <span aria-hidden=\\\"true\\\" (click)=\\\"c('Close click')\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <kt-portlet-body [class]=\\\"'kt-portlet__body--fit'\\\">\\n          <ng-container ktPortletTools>\\n            <div class=\\\"container\\\">\\n              <form (ngSubmit)=\\\"filterData()\\\" class=\\\"pb-4\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-12\\\">\\n                    <div\\n                      *ngIf=\\\"schoolNotSelected\\\"\\n                      class=\\\"alert alert-danger\\\"\\n                      role=\\\"alert\\\"\\n                    >\\n                      Please select a school\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                    <mat-form-field>\\n                      <mat-select\\n                        placeholder=\\\"State\\\"\\n                        [formControl]=\\\"statesSelected\\\"\\n                        (selectionChange)=\\\"onStateSelectionChange($event)\\\"\\n                        multiple\\n                      >\\n                        <mat-select-trigger>\\n                          {{ statesSelected.value ? statesSelected.value[0] : \\\"\\\"\\n                          }}\\n                          <span\\n                            *ngIf=\\\"statesSelected.value?.length > 1\\\"\\n                            class=\\\"example-additional-selection\\\"\\n                          >\\n                            (+{{ statesSelected.value.length - 1 }} others)\\n                          </span>\\n                        </mat-select-trigger>\\n\\n                        <mat-option [value]=\\\"'All'\\\">All</mat-option>\\n                        <mat-option\\n                          *ngFor=\\\"let topping of states\\\"\\n                          [value]=\\\"topping.name\\\"\\n                          >{{ topping.name }}</mat-option\\n                        >\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <mat-form-field>\\n                      <mat-select\\n                        placeholder=\\\"Local Government Area\\\"\\n                        [formControl]=\\\"lgaSelected\\\"\\n                        (selectionChange)=\\\"onlgaSelectionChange($event)\\\"\\n                        multiple\\n                      >\\n                        <mat-select-trigger>\\n                          {{ lgaSelected.value ? lgaSelected.value[0] : \\\"\\\" }}\\n                          <span\\n                            *ngIf=\\\"lgaSelected.value?.length > 1\\\"\\n                            class=\\\"example-additional-selection\\\"\\n                          >\\n                            (+{{ lgaSelected.value.length - 1 }} others)\\n                          </span>\\n                        </mat-select-trigger>\\n                        <mat-option [value]=\\\"'All'\\\">All</mat-option>\\n                        <mat-option\\n                          *ngFor=\\\"let topping of localgovernments\\\"\\n                          [value]=\\\"topping.name\\\"\\n                          >{{ topping.name }}</mat-option\\n                        >\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <mat-form-field>\\n                      <mat-select\\n                        placeholder=\\\"School\\\"\\n                        [formControl]=\\\"schoolSelected\\\"\\n                      >\\n                        <mat-select-trigger>\\n                          {{ schoolSelected.value }}\\n                        </mat-select-trigger>\\n\\n                        <mat-option\\n                          *ngFor=\\\"let topping of schools\\\"\\n                          [value]=\\\"topping.schoolName\\\"\\n                          >{{ topping.schoolName }}</mat-option\\n                        >\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row\\\"></div>\\n              </form>\\n            </div>\\n          </ng-container>\\n        </kt-portlet-body>\\n      </div>\\n    </div>\\n    <div class=\\\"row my-5\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"html\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">\\n    Close\\n  </button>\\n  <button\\n    [ngClass]=\\\"{\\n      'kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light': loading\\n    }\\\"\\n    id=\\\"kt_login_signin_submit\\\"\\n    class=\\\"btn btn-primary btn-elevate kt-login__btn-primary\\\"\\n    (click)=\\\"uploadTeachers()\\\"\\n    type=\\\"button\\\"\\n  >\\n    Upload\\n  </button>\\n</div>\\n\"","module.exports = \".green-icon {\\n  color: #28a745 !important; }\\n\\n/* Note: If you're using an SVG icon, you should make the class target the `<svg>` element */\\n\\n.green-icon svg {\\n  fill: #28a745 !important; }\\n\\n.yellow-icon {\\n  color: #ffc107 !important; }\\n\\n/* Note: If you're using an SVG icon, you should make the class target the `<svg>` element */\\n\\n.yellow-icon svg {\\n  fill: #ffc107 !important; }\\n\\n.red-icon {\\n  color: #dc3545 !important; }\\n\\n/* Note: If you're using an SVG icon, you should make the class target the `<svg>` element */\\n\\n.red-icon svg {\\n  fill: #dc3545 !important; }\\n\\n.mat-icon {\\n  font-size: 30px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGFybGVzLm9udW9yYWgvRG9jdW1lbnRzL2NiYy9TY2hvb2xEYXNoYm9hcmQvc3JjL2FwcC92aWV3cy9wYWdlcy90ZWFjaGVycy9lZmZlY3RpdmUtc3RhdGUtcmVwb3J0LWRldGFpbC1tb2RhbC9lZmZlY3RpdmUtc3RhdGUtcmVwb3J0LWRldGFpbC1tb2RhbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlCQUF5QixFQUFBOztBQUUzQiw0RkFBQTs7QUFDQTtFQUNFLHdCQUF3QixFQUFBOztBQUcxQjtFQUNFLHlCQUF5QixFQUFBOztBQUUzQiw0RkFBQTs7QUFDQTtFQUNFLHdCQUF3QixFQUFBOztBQUcxQjtFQUNFLHlCQUF5QixFQUFBOztBQUUzQiw0RkFBQTs7QUFDQTtFQUNFLHdCQUF3QixFQUFBOztBQUcxQjtFQUNFLDBCQUEwQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvcGFnZXMvdGVhY2hlcnMvZWZmZWN0aXZlLXN0YXRlLXJlcG9ydC1kZXRhaWwtbW9kYWwvZWZmZWN0aXZlLXN0YXRlLXJlcG9ydC1kZXRhaWwtbW9kYWwuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZ3JlZW4taWNvbiB7XG4gIGNvbG9yOiAjMjhhNzQ1ICFpbXBvcnRhbnQ7XG59XG4vKiBOb3RlOiBJZiB5b3UncmUgdXNpbmcgYW4gU1ZHIGljb24sIHlvdSBzaG91bGQgbWFrZSB0aGUgY2xhc3MgdGFyZ2V0IHRoZSBgPHN2Zz5gIGVsZW1lbnQgKi9cbi5ncmVlbi1pY29uIHN2ZyB7XG4gIGZpbGw6ICMyOGE3NDUgIWltcG9ydGFudDtcbn1cblxuLnllbGxvdy1pY29uIHtcbiAgY29sb3I6ICNmZmMxMDcgIWltcG9ydGFudDtcbn1cbi8qIE5vdGU6IElmIHlvdSdyZSB1c2luZyBhbiBTVkcgaWNvbiwgeW91IHNob3VsZCBtYWtlIHRoZSBjbGFzcyB0YXJnZXQgdGhlIGA8c3ZnPmAgZWxlbWVudCAqL1xuLnllbGxvdy1pY29uIHN2ZyB7XG4gIGZpbGw6ICNmZmMxMDcgIWltcG9ydGFudDtcbn1cblxuLnJlZC1pY29uIHtcbiAgY29sb3I6ICNkYzM1NDUgIWltcG9ydGFudDtcbn1cbi8qIE5vdGU6IElmIHlvdSdyZSB1c2luZyBhbiBTVkcgaWNvbiwgeW91IHNob3VsZCBtYWtlIHRoZSBjbGFzcyB0YXJnZXQgdGhlIGA8c3ZnPmAgZWxlbWVudCAqL1xuLnJlZC1pY29uIHN2ZyB7XG4gIGZpbGw6ICNkYzM1NDUgIWltcG9ydGFudDtcbn1cblxuLm1hdC1pY29uIHtcbiAgZm9udC1zaXplOiAzMHB4ICFpbXBvcnRhbnQ7XG59XG4iXX0= */\"","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport {\n  MatDialogRef,\n  MatProgressSpinner,\n  MAT_DIALOG_DATA,\n  PageEvent,\n  ProgressSpinnerMode,\n  ThemePalette,\n} from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\nimport { ReportType } from '../effective-state-report/effective-state-report.component';\nimport { IAssessmentSummary } from '../teacher-modal-view/teacher-modal-view.component';\nimport { TeachersService } from '../teachers.service';\n\n@Component({\n  selector: 'kt-effective-state-report-detail-modal',\n  templateUrl: './effective-state-report-detail-modal.component.html',\n  styleUrls: ['./effective-state-report-detail-modal.component.scss'],\n})\nexport class EffectiveStateReportDetailModalComponent implements OnInit {\n  length = 1000;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n  pageEvent: PageEvent;\n  pageIndex = 0;\n  previousPageIndex: 0;\n  colorSpinner: ThemePalette = 'primary';\n  mode: ProgressSpinnerMode = 'indeterminate';\n  value = 40;\n  loading = false;\n  assessmentSummary: IAssessmentSummary[] = [];\n\n  dataBase: IAssessmentSummary[] = [];\n  constructor(\n    @Inject(MAT_DIALOG_DATA)\n    public data: {\n      category: ReportType;\n      state: string;\n      lga: string;\n      endDate: string;\n      startDate: string;\n      school: string;\n    },\n    private teacherService: TeachersService,\n    private route: ActivatedRoute,\n    private changeDetectRef: ChangeDetectorRef,\n    public dialogRef: MatDialogRef<EffectiveStateReportDetailModalComponent>\n  ) {}\n\n  ngOnInit() {\n    this.getReportDetail();\n  }\n\n  getReportDetail() {\n    const { category, state, lga, endDate, startDate, school } = this.data;\n    this.loading = true;\n\n    this.teacherService\n      .getCoachingReportByStateDrillDownCategory(\n        category,\n        state,\n        lga,\n        endDate,\n        startDate,\n        school\n      )\n      .subscribe(\n        (response) => {\n          this.loading = false;\n          console.log(response);\n          this.dataBase = response.data;\n          this.assessmentSummary = response.data.slice(0, this.pageSize);\n          this.length = this.dataBase.length;\n          console.log('this summary: ', this.assessmentSummary);\n          this.changeDetectRef.detectChanges();\n        },\n        (error) => {\n          this.loading = false;\n          console.log(error);\n        }\n      );\n  }\n\n  handlePageChange(event) {\n    console.log('event: ', event);\n    this.pageIndex = event.pageIndex;\n    this.pageSize = event.pageSize;\n\n    if (event.pageIndex > this.previousPageIndex) {\n      // fetch online record\n      this.previousPageIndex = event.previousPageIndex;\n    }\n  }\n  c(data) {\n    if (!data) {\n      // this.appService.assessment.next(this.)\n    }\n    this.dialogRef.close(data);\n  }\n  closeModal(data) {\n    this.dialogRef.close(data);\n  }\n}\n","module.exports = \".mat-form-field {\\n  width: 100% !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGFybGVzLm9udW9yYWgvRG9jdW1lbnRzL2NiYy9TY2hvb2xEYXNoYm9hcmQvc3JjL2FwcC92aWV3cy9wYWdlcy90ZWFjaGVycy9lZmZlY3RpdmUtc3RhdGUtcmVwb3J0L2VmZmVjdGl2ZS1zdGF0ZS1yZXBvcnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxzQkFBc0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL3RlYWNoZXJzL2VmZmVjdGl2ZS1zdGF0ZS1yZXBvcnQvZWZmZWN0aXZlLXN0YXRlLXJlcG9ydC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG59XG4iXX0= */\"","import {\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  ViewChild,\n  OnDestroy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { Chart } from 'chart.js/dist/Chart.min.js';\nimport { LayoutConfigService } from 'app/core/_base/layout';\nimport { FormControl, Validators } from '@angular/forms';\nimport {\n  AppServiceService,\n  ILocalGovernments,\n  IState,\n} from '../../../services/app-service/app-service.service';\nimport { TeachersService } from '../teachers.service';\nimport { SchoolsService } from '../../schools/schools.service';\nimport { School } from '../../schools/schools.component';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { EffectiveStateReportDetailModalComponent } from '../effective-state-report-detail-modal/effective-state-report-detail-modal.component';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\nconst $ = window['$'];\nconst moment = window['moment'];\n\n@Component({\n  selector: 'kt-effective-state-report',\n  templateUrl: './effective-state-report.component.html',\n  styleUrls: ['./effective-state-report.component.scss'],\n})\nexport class EffectiveStateReportComponent implements OnInit, OnDestroy {\n  statesSelected = new FormControl('', Validators.compose([]));\n  lgaSelected = new FormControl('', Validators.compose([]));\n  schoolSelected = new FormControl('', Validators.compose([]));\n  states: IState[] = [];\n  localgovernments: ILocalGovernments[] = [];\n  schools: School[] = [];\n  schoolDataBase: School[] = [];\n  color = Chart.helpers.color;\n  dateRange = new FormControl('');\n  @Input() data: { labels: string[]; datasets: any[] } = {\n    labels: [\n      'Effectively Met( 60 and Above )',\n      'Partially Met(50-60)',\n      'Not Met(Below 50)',\n    ],\n    datasets: [\n      {\n        barPercentage: 0.5,\n        fill: true,\n        // borderWidth: 0,\n        backgroundColor: [\n          'rgba(54, 162, 235, 0.6)',\n          'rgba(120, 162, 235, 0.6)',\n          'rgba(255, 99, 132, 0.6)',\n        ],\n        // borderColor: this.color(\n        //   this.layoutConfigService.getConfig('colors.state.brand')\n        // )\n        //   .alpha(0)\n        //   .rgbString(),\n\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 12,\n        pointBackgroundColor: Chart.helpers\n          .color('#000000')\n          .alpha(0)\n          .rgbString(),\n        pointBorderColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\n        pointHoverBackgroundColor:\n          this.layoutConfigService.getConfig('colors.state.brand'),\n        pointHoverBorderColor: Chart.helpers\n          .color('#000000')\n          .alpha(0.1)\n          .rgbString(),\n\n        data: [0, 0, 0],\n      },\n    ],\n  };\n\n  loading = false;\n\n  @Input() barChartData: { labels: string[]; datasets: any[] } = {\n    labels: ['Effectively Met', 'Partially Met', 'Not Met'],\n    datasets: [\n      {\n        label: 'Lesson Plan',\n        borderColor: this.layoutConfigService.getConfig('colors.state.brand'),\n        fill: false,\n        borderWidth: 2,\n        backgroundColor: Chart.helpers\n          .color(this.layoutConfigService.getConfig('colors.state.brand'))\n          .alpha(0.6)\n          .rgbString(),\n        // borderColor: this.color(\n        //   this.layoutConfigService.getConfig('colors.state.brand')\n        // )\n        //   .alpha(0)\n        //   .rgbString(),\n\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 12,\n        pointBackgroundColor: Chart.helpers\n          .color('#000000')\n          .alpha(0)\n          .rgbString(),\n        pointBorderColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\n        pointHoverBackgroundColor:\n          this.layoutConfigService.getConfig('colors.state.brand'),\n        pointHoverBorderColor: Chart.helpers\n          .color('#000000')\n          .alpha(0.1)\n          .rgbString(),\n\n        data: [0],\n      },\n\n      {\n        label: 'Subject Matter Mastery',\n        fill: false,\n        borderWidth: 2,\n        backgroundColor: Chart.helpers\n          .color(this.layoutConfigService.getConfig('colors.state.brand'))\n          .alpha(0.2)\n          .rgbString(),\n        borderColor: this.layoutConfigService.getConfig('colors.state.danger'),\n\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 12,\n        pointBackgroundColor: Chart.helpers\n          .color('#000000')\n          .alpha(0)\n          .rgbString(),\n        pointBorderColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\n        pointHoverBackgroundColor:\n          this.layoutConfigService.getConfig('colors.state.brand'),\n        pointHoverBorderColor: Chart.helpers\n          .color('#000000')\n          .alpha(0.1)\n          .rgbString(),\n\n        data: [0, 0],\n      },\n      {\n        label: 'Teaching Methodology',\n        fill: false,\n        borderWidth: 2,\n        backgroundColor: Chart.helpers\n          .color(this.layoutConfigService.getConfig('colors.state.brand'))\n          .alpha(0.2)\n          .rgbString(),\n        borderColor: this.layoutConfigService.getConfig('colors.state.danger'),\n\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 12,\n        pointBackgroundColor: Chart.helpers\n          .color('#000000')\n          .alpha(0)\n          .rgbString(),\n        pointBorderColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\n        pointHoverBackgroundColor:\n          this.layoutConfigService.getConfig('colors.state.brand'),\n        pointHoverBorderColor: Chart.helpers\n          .color('#000000')\n          .alpha(0.1)\n          .rgbString(),\n\n        data: [10, 20, 30],\n      },\n    ],\n  };\n\n  state: string | undefined;\n  lga: string | undefined;\n  endDate: string | undefined;\n  startDate: string | undefined;\n  school: string | undefined;\n\n  @ViewChild('chart', { static: true }) chart: ElementRef;\n\n  chartUI;\n  constructor(\n    private teacherService: TeachersService,\n    private schoolService: SchoolsService,\n    private appService: AppServiceService,\n    private layoutConfigService: LayoutConfigService,\n    private dialog: MatDialog,\n    private router: Router,\n    private route: ActivatedRoute,\n    private changeDetectRef: ChangeDetectorRef,\n    private location: Location\n  ) {}\n\n  ngOnInit() {\n    this.getUserAccessibleState();\n    this.getUserAccessibleLocals();\n    this.initChartJS();\n    this.initialDatePicker();\n    this.listenToRouteChange();\n    this.getSchools();\n    // document.addEventListener('mousemove', this.getCursorXY);\n  }\n  ngOnDestroy() {\n    // document.removeEventListener('mousemove', this.getCursorXY);\n  }\n\n  getSchools() {\n    this.loading = true;\n    this.schoolService.getSchools().subscribe(\n      (data) => {\n        this.schools = data;\n        this.schoolDataBase = data;\n        this.loading = false;\n      },\n      (error) => {\n        this.loading = false;\n        console.log(error);\n      }\n    );\n  }\n\n  resetForm(event) {\n    event.preventDefault();\n    if (\n      this.schoolSelected.value.length > 0 ||\n      this.lgaSelected.value.length > 0 ||\n      this.statesSelected.value.length > 0\n    ) {\n      this.location.back();\n\n      this.chartUI.data = {\n        labels: [\n          'Effectively Met( 60 and Above )',\n          'Partially Met(50-60)',\n          'Not Met(Below 50)',\n        ],\n        datasets: [\n          {\n            barPercentage: 0.8,\n            fill: true,\n            // borderWidth: 0,\n            backgroundColor: [\n              'rgba(54, 162, 235, 0.6)',\n              'rgba(120, 162, 235, 0.6)',\n              'rgba(255, 99, 132, 0.6)',\n            ],\n            borderColor: this.color(\n              this.layoutConfigService.getConfig('colors.state.brand')\n            )\n              .alpha(0)\n              .rgbString(),\n\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 12,\n            pointBackgroundColor: Chart.helpers\n              .color('#000000')\n              .alpha(0)\n              .rgbString(),\n            pointBorderColor: Chart.helpers\n              .color('#000000')\n              .alpha(0)\n              .rgbString(),\n            pointHoverBackgroundColor:\n              this.layoutConfigService.getConfig('colors.state.brand'),\n            pointHoverBorderColor: Chart.helpers\n              .color('#000000')\n              .alpha(0.1)\n              .rgbString(),\n\n            data: [0, 0, 0],\n          },\n        ],\n      };\n\n      this.chartUI.update();\n\n      // this.changeDetectRef.detectChanges();\n    }\n  }\n\n  listenToRouteChange() {\n    this.route.queryParams.subscribe((data) => {\n      const { state, lga, endDate, startDate, school } = data;\n      this.state = state;\n      this.lga = lga;\n      this.endDate = endDate;\n      this.startDate = startDate;\n      this.school = school;\n      this.loading = true;\n      if (state) {\n        this.statesSelected.setValue(state.split(','));\n      } else {\n        this.statesSelected.setValue([]);\n      }\n      if (lga) {\n        this.lgaSelected.setValue(state.split(','));\n      } else {\n        this.lgaSelected.setValue([]);\n      }\n      if (startDate && endDate) {\n        this.dateRange.setValue(`${startDate} to ${endDate}`);\n      } else {\n        this.dateRange.setValue('');\n      }\n      if (school) {\n        this.schoolSelected.setValue(school.split('_'));\n      } else {\n        this.schoolSelected.setValue([]);\n      }\n      this.teacherService\n        .getCoachingReportByState(state, lga, endDate, startDate, school)\n        .subscribe(\n          (data) => {\n            this.loading = false;\n            console.log(data);\n            if (data.length > 0) {\n              this.chartUI.data = {\n                labels: [\n                  'Effectively Met( 60 and Above )',\n                  'Partially Met(50-60)',\n                  'Not Met(Below 50)',\n                ],\n                datasets: [\n                  {\n                    barPercentage: 0.8,\n                    fill: true,\n                    // borderWidth: 0,\n                    backgroundColor: [\n                      'rgba(54, 162, 235, 0.6)',\n                      'rgba(120, 162, 235, 0.6)',\n                      'rgba(255, 99, 132, 0.6)',\n                    ],\n                    borderColor: this.color(\n                      this.layoutConfigService.getConfig('colors.state.brand')\n                    )\n                      .alpha(0)\n                      .rgbString(),\n\n                    pointHoverRadius: 4,\n                    pointHoverBorderWidth: 12,\n                    pointBackgroundColor: Chart.helpers\n                      .color('#000000')\n                      .alpha(0)\n                      .rgbString(),\n                    pointBorderColor: Chart.helpers\n                      .color('#000000')\n                      .alpha(0)\n                      .rgbString(),\n                    pointHoverBackgroundColor:\n                      this.layoutConfigService.getConfig('colors.state.brand'),\n                    pointHoverBorderColor: Chart.helpers\n                      .color('#000000')\n                      .alpha(0.1)\n                      .rgbString(),\n\n                    data: [data[0].count, data[2].count, data[1].count],\n                  },\n                ],\n              };\n\n              this.chartUI.update();\n            }\n\n            this.changeDetectRef.detectChanges();\n          },\n          (error) => {\n            this.loading = false;\n            console.log(error);\n          }\n        );\n    });\n  }\n\n  onStateSelectionChange(event: any) {\n    // if (this.statesSelected.value.includes('All')) {\n    //   const index = this.statesSelected.value.findIndex(\n    //     (item) => item === 'All'\n    //   );\n    //   const values = this.statesSelected.value;\n    //   values.splice(index, 1);\n    //   // this.statesSelected.setValue([...])\n    // }\n    if (!this.statesSelected.value.includes('All')) {\n      this.getUserAccessibleLocals(this.statesSelected.value);\n      this.schools = this.schoolDataBase.filter((item) =>\n        this.statesSelected.value.includes(item.state.trim())\n      );\n    } else {\n      this.getUserAccessibleLocals();\n      this.schools = this.schoolDataBase;\n    }\n  }\n\n  getUserAccessibleLocals(states = []) {\n    this.localgovernments = this.appService.getLocalGovernments(states);\n  }\n\n  getUserAccessibleState() {\n    this.states = this.appService.getStates(\n      this.appService.getUserStateAccess()\n    );\n  }\n\n  onlgaSelectionChange(event) {\n    if (!this.lgaSelected.value.includes('All')) {\n      this.schools = this.schoolDataBase.filter((item) =>\n        this.lgaSelected.value.includes(item.lga.trim())\n      );\n    } else {\n      if (this.statesSelected.value.includes('All')) {\n        this.schools = this.schoolDataBase;\n      } else {\n        this.schools = this.schoolDataBase.filter((item) =>\n          this.statesSelected.value.includes(item.state)\n        );\n      }\n    }\n  }\n\n  filterReort() {\n    if (\n      this.dateRange.value.trim() !== '' &&\n      this.statesSelected.value.length > 0 &&\n      this.schoolSelected.value.length > 0 &&\n      this.lgaSelected.value.length > 0\n    ) {\n      this.router.navigate(['/teachers', 'effectiveness-report-by-state'], {\n        queryParams: {\n          state: this.statesSelected.value.join(','),\n          lga: this.lgaSelected.value.join(','),\n          startDate: this.dateRange.value.split('to')[0].trim(),\n          endDate: this.dateRange.value.split('to')[1].trim(),\n          school: this.schoolSelected.value.join('_'),\n        },\n      });\n    } else if (\n      this.dateRange.value.trim() === '' &&\n      this.statesSelected.value.length > 0 &&\n      this.lgaSelected.value.length > 0 &&\n      this.schoolSelected.value.length > 0\n    ) {\n      this.router.navigate(['/teachers', 'effectiveness-report-by-state'], {\n        queryParams: {\n          state: this.statesSelected.value.join(','),\n          lga: this.lgaSelected.value.join(','),\n          school: this.schoolSelected.value.join('_'),\n        },\n      });\n    } else if (\n      this.dateRange.value.trim() === '' &&\n      this.statesSelected.value.length > 0 &&\n      this.lgaSelected.value.length === 0\n    ) {\n      this.router.navigate(['/teachers', 'effectiveness-report-by-state'], {\n        queryParams: {\n          state: this.statesSelected.value.join(','),\n        },\n      });\n    } else if (\n      this.dateRange.value.trim() === '' &&\n      this.statesSelected.value.length === 0 &&\n      this.lgaSelected.value.length > 0\n    ) {\n      this.router.navigate(['/teachers', 'effectiveness-report-by-state'], {\n        queryParams: {\n          lga: this.lgaSelected.value.join(','),\n        },\n      });\n    } else if (\n      this.dateRange.value.trim() === '' &&\n      this.statesSelected.value.length === 0 &&\n      this.lgaSelected.value.length === 0 &&\n      this.schoolSelected.value.length > 0\n    ) {\n      this.router.navigate(['/teachers', 'effectiveness-report-by-state'], {\n        queryParams: {\n          school: this.schoolSelected.value.join('_'),\n        },\n      });\n    }\n  }\n\n  initChartJS() {\n    // For more information about the chartjs, visit this link\n    // https://www.chartjs.org/docs/latest/getting-started/usage.html\n    const $this = this;\n    this.chartUI = new Chart(this.chart.nativeElement, {\n      type: 'bar',\n      data: this.data,\n      options: {\n        indexAxis: 'y',\n        title: {\n          display: false,\n        },\n        tooltips: {\n          intersect: false,\n          mode: 'nearest',\n          xPadding: 10,\n          yPadding: 10,\n          caretPadding: 10,\n        },\n        legend: {\n          display: false,\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        barRadius: 2,\n        scales: {\n          xAxes: [\n            {\n              display: true,\n              // gridLines: true,\n              stacked: true,\n              gridLines: {\n                color: 'rgba(0, 0, 0, 0)',\n              },\n            },\n          ],\n          yAxes: [\n            {\n              display: true,\n              stacked: true,\n              // gridLines: true,\n              gridLines: {\n                color: 'rgba(0, 0, 0, 0)',\n              },\n            },\n          ],\n        },\n        layout: {\n          padding: {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0,\n          },\n        },\n        events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n      },\n      plugins: [\n        {\n          id: 'myEventCatcher',\n          beforeEvent(chart, args, pluginOptions) {\n            const event = args;\n\n            if (event.type === 'click') {\n              // process the event\n              console.log(chart);\n              const activeElement = chart.getElementAtEvent(event);\n              if (\n                activeElement[0]['_model'].label ===\n                'Effectively Met( 60 and Above )'\n              ) {\n                $this.getReportDetail(ReportType.Effectively_Met);\n              } else if (\n                activeElement[0]['_model'].label === 'Partially Met(50-60)'\n              ) {\n                $this.getReportDetail(ReportType.Partially_Met);\n              } else {\n                $this.getReportDetail(activeElement[0]['_model'].label);\n              }\n            }\n          },\n        },\n      ],\n    });\n  }\n\n  initialDatePicker() {\n    const $this = this;\n    $('input[name=\"daterange\"]').daterangepicker(\n      {\n        autoUpdateInput: false,\n        opens: 'left',\n        ranges: {\n          Today: [moment(), moment()],\n          Yesterday: [\n            moment().subtract(1, 'days'),\n            moment().subtract(1, 'days'),\n          ],\n          'Last 7 Days': [moment().subtract(6, 'days'), moment()],\n          'Last 30 Days': [moment().subtract(29, 'days'), moment()],\n          'This Month': [moment().startOf('month'), moment().endOf('month')],\n          'Last Month': [\n            moment().subtract(1, 'month').startOf('month'),\n            moment().subtract(1, 'month').endOf('month'),\n          ],\n        },\n      },\n      function (start, end, label) {\n        console.log(\n          'A new date selection was made: ' +\n            start.format('YYYY-MM-DD') +\n            ' to ' +\n            end.format('YYYY-MM-DD')\n        );\n        $this.dateRange.setValue(\n          `${start.format('YYYY-MM-DD')} to ${end.format('YYYY-MM-DD')}`\n        );\n      }\n    );\n  }\n\n  getReportDetail(reportType: ReportType) {\n    const dialogRef = this.dialog.open(\n      EffectiveStateReportDetailModalComponent,\n      {\n        maxWidth: '90vw',\n        minWidth: '60vw',\n        data: {\n          category: reportType,\n          state: this.state,\n          lga: this.lga,\n          startDate: this.startDate,\n          endDate: this.endDate,\n          school: this.school,\n        },\n      }\n    );\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(`D`);\n    });\n  }\n  // getCursorXY(e) {\n  //   if (window.Event) {\n  //     const xCoordinate = window['Event']\n  //       ? e.pageX\n  //       : e.clientX +\n  //         (document.documentElement.scrollLeft\n  //           ? document.documentElement.scrollLeft\n  //           : document.body.scrollLeft);\n  //     const yCoordinate = window['Event']\n  //       ? e.pageY\n  //       : e.clientY +\n  //         (document.documentElement.scrollTop\n  //           ? document.documentElement.scrollTop\n  //           : document.body.scrollTop);\n  //   }\n  // }\n}\n\nexport enum ReportType {\n  Effectively_Met = 'Effectively Met(60-75)',\n  Partially_Met = 'Partially Met(50-70)',\n  Not_Met = 'Not Met(Below 50)',\n}\n","module.exports = \".align-center {\\n  vertical-align: middle;\\n  text-align: center; }\\n\\n.box {\\n  width: 100%;\\n  padding: 20px 16px;\\n  background-color: #f7f8fa;\\n  border-radius: 10px; }\\n\\n.green-icon {\\n  color: #28a745 !important; }\\n\\n/* Note: If you're using an SVG icon, you should make the class target the `<svg>` element */\\n\\n.green-icon svg {\\n  fill: #28a745 !important; }\\n\\n.yellow-icon {\\n  color: #ffc107 !important; }\\n\\n/* Note: If you're using an SVG icon, you should make the class target the `<svg>` element */\\n\\n.yellow-icon svg {\\n  fill: #ffc107 !important; }\\n\\n.red-icon {\\n  color: #dc3545 !important; }\\n\\n/* Note: If you're using an SVG icon, you should make the class target the `<svg>` element */\\n\\n.red-icon svg {\\n  fill: #dc3545 !important; }\\n\\n.mat-icon {\\n  font-size: 30px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGFybGVzLm9udW9yYWgvRG9jdW1lbnRzL2NiYy9TY2hvb2xEYXNoYm9hcmQvc3JjL2FwcC92aWV3cy9wYWdlcy90ZWFjaGVycy90ZWFjaGVyLWFzc2Vzc21lbnQtZGV0YWlsL3RlYWNoZXItYXNzZXNzbWVudC1kZXRhaWwuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxzQkFBc0I7RUFDdEIsa0JBQWtCLEVBQUE7O0FBR3BCO0VBQ0UsV0FBVztFQUNYLGtCQUFrQjtFQUNsQix5QkFBeUI7RUFDekIsbUJBQW1CLEVBQUE7O0FBR3JCO0VBQ0UseUJBQXlCLEVBQUE7O0FBRTNCLDRGQUFBOztBQUNBO0VBQ0Usd0JBQXdCLEVBQUE7O0FBRzFCO0VBQ0UseUJBQXlCLEVBQUE7O0FBRTNCLDRGQUFBOztBQUNBO0VBQ0Usd0JBQXdCLEVBQUE7O0FBRzFCO0VBQ0UseUJBQXlCLEVBQUE7O0FBRTNCLDRGQUFBOztBQUNBO0VBQ0Usd0JBQXdCLEVBQUE7O0FBRzFCO0VBQ0UsMEJBQTBCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9wYWdlcy90ZWFjaGVycy90ZWFjaGVyLWFzc2Vzc21lbnQtZGV0YWlsL3RlYWNoZXItYXNzZXNzbWVudC1kZXRhaWwuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxpZ24tY2VudGVyIHtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uYm94IHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDIwcHggMTZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3ZjhmYTtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbn1cblxuLmdyZWVuLWljb24ge1xuICBjb2xvcjogIzI4YTc0NSAhaW1wb3J0YW50O1xufVxuLyogTm90ZTogSWYgeW91J3JlIHVzaW5nIGFuIFNWRyBpY29uLCB5b3Ugc2hvdWxkIG1ha2UgdGhlIGNsYXNzIHRhcmdldCB0aGUgYDxzdmc+YCBlbGVtZW50ICovXG4uZ3JlZW4taWNvbiBzdmcge1xuICBmaWxsOiAjMjhhNzQ1ICFpbXBvcnRhbnQ7XG59XG5cbi55ZWxsb3ctaWNvbiB7XG4gIGNvbG9yOiAjZmZjMTA3ICFpbXBvcnRhbnQ7XG59XG4vKiBOb3RlOiBJZiB5b3UncmUgdXNpbmcgYW4gU1ZHIGljb24sIHlvdSBzaG91bGQgbWFrZSB0aGUgY2xhc3MgdGFyZ2V0IHRoZSBgPHN2Zz5gIGVsZW1lbnQgKi9cbi55ZWxsb3ctaWNvbiBzdmcge1xuICBmaWxsOiAjZmZjMTA3ICFpbXBvcnRhbnQ7XG59XG5cbi5yZWQtaWNvbiB7XG4gIGNvbG9yOiAjZGMzNTQ1ICFpbXBvcnRhbnQ7XG59XG4vKiBOb3RlOiBJZiB5b3UncmUgdXNpbmcgYW4gU1ZHIGljb24sIHlvdSBzaG91bGQgbWFrZSB0aGUgY2xhc3MgdGFyZ2V0IHRoZSBgPHN2Zz5gIGVsZW1lbnQgKi9cbi5yZWQtaWNvbiBzdmcge1xuICBmaWxsOiAjZGMzNTQ1ICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtaWNvbiB7XG4gIGZvbnQtc2l6ZTogMzBweCAhaW1wb3J0YW50O1xufVxuIl19 */\"","import { Location } from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { ProgressSpinnerMode, ThemePalette } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\nimport { TeachersService } from '../teachers.service';\nimport { Chart } from 'chart.js/dist/Chart.min.js';\nimport { LayoutConfigService } from 'app/core/_base/layout';\n\n@Component({\n  selector: 'kt-teacher-assessment-detail',\n  templateUrl: './teacher-assessment-detail.component.html',\n  styleUrls: ['./teacher-assessment-detail.component.scss'],\n})\nexport class TeacherAssessmentDetailComponent implements OnInit {\n  isloading = false;\n  mode: ProgressSpinnerMode = 'indeterminate';\n  value = 40;\n  colorSpinner: ThemePalette = 'primary';\n  data: any;\n\n  totalScore = 0;\n\n  lessonPlan: any;\n  subjectMatterMastery: any;\n  teachingMethod: any;\n\n  @Input() barChartData: { labels: string[]; datasets: any[] } = {\n    labels: ['Lesson Plan', 'Subject Matter Mastery', 'Teaching Methodology'],\n    datasets: [\n      {\n        label: 'Lesson Plan',\n        borderColor: this.layoutConfigService.getConfig('colors.state.brand'),\n        fill: false,\n        borderWidth: 2,\n        backgroundColor: Chart.helpers\n          .color(this.layoutConfigService.getConfig('colors.state.brand'))\n          .alpha(0.6)\n          .rgbString(),\n        // borderColor: this.color(\n        //   this.layoutConfigService.getConfig('colors.state.brand')\n        // )\n        //   .alpha(0)\n        //   .rgbString(),\n\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 12,\n        pointBackgroundColor: Chart.helpers\n          .color('#000000')\n          .alpha(0)\n          .rgbString(),\n        pointBorderColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\n        pointHoverBackgroundColor:\n          this.layoutConfigService.getConfig('colors.state.brand'),\n        pointHoverBorderColor: Chart.helpers\n          .color('#000000')\n          .alpha(0.1)\n          .rgbString(),\n\n        data: [0],\n      },\n\n      {\n        label: 'Subject Matter Mastery',\n        fill: false,\n        borderWidth: 2,\n        backgroundColor: Chart.helpers\n          .color(this.layoutConfigService.getConfig('colors.state.brand'))\n          .alpha(0.2)\n          .rgbString(),\n        borderColor: this.layoutConfigService.getConfig('colors.state.danger'),\n\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 12,\n        pointBackgroundColor: Chart.helpers\n          .color('#000000')\n          .alpha(0)\n          .rgbString(),\n        pointBorderColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\n        pointHoverBackgroundColor:\n          this.layoutConfigService.getConfig('colors.state.brand'),\n        pointHoverBorderColor: Chart.helpers\n          .color('#000000')\n          .alpha(0.1)\n          .rgbString(),\n\n        data: [0, 0],\n      },\n      {\n        label: 'Teaching Methodology',\n        fill: false,\n        borderWidth: 2,\n        backgroundColor: Chart.helpers\n          .color(this.layoutConfigService.getConfig('colors.state.brand'))\n          .alpha(0.2)\n          .rgbString(),\n        borderColor: this.layoutConfigService.getConfig('colors.state.danger'),\n\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 12,\n        pointBackgroundColor: Chart.helpers\n          .color('#000000')\n          .alpha(0)\n          .rgbString(),\n        pointBorderColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\n        pointHoverBackgroundColor:\n          this.layoutConfigService.getConfig('colors.state.brand'),\n        pointHoverBorderColor: Chart.helpers\n          .color('#000000')\n          .alpha(0.1)\n          .rgbString(),\n\n        data: [0, 0],\n      },\n    ],\n  };\n  @ViewChild('chart', { static: true }) chart: ElementRef;\n  color = Chart.helpers.color;\n\n  chartUI;\n\n  constructor(\n    private location: Location,\n    private route: ActivatedRoute,\n    private teacherService: TeachersService,\n    private changeDetectRef: ChangeDetectorRef,\n    private layoutConfigService: LayoutConfigService\n  ) {}\n\n  ngOnInit() {\n    this.initChartJS();\n    this.listenForRouteChange();\n  }\n\n  listenForRouteChange() {\n    this.route.queryParams.subscribe((params) => {\n      const { assesmentId } = params;\n      this.isloading = true;\n\n      this.teacherService\n        .getCoachingAssessmentByID(Number(assesmentId))\n        .subscribe(\n          (data) => {\n            console.log('data: ', data);\n            this.lessonPlan = data['Lesson Plan'];\n\n            this.subjectMatterMastery = data['Subject Matter Mastery'];\n            this.teachingMethod = data['Teaching Method'];\n            this.data = data;\n            this.totalScore = parseInt(data.score);\n            console.log('total score: ', this.totalScore);\n\n            this.isloading = false;\n\n            this.chartUI.data = {\n              labels: [\n                'Lesson Plan',\n                'Subject Matter Mastery',\n                'Teaching Methodology',\n              ],\n              datasets: [\n                {\n                  fill: true,\n                  // borderWidth: 0,\n                  backgroundColor: [\n                    'rgba(255, 99, 132, 0.6)',\n                    'rgba(54, 162, 235, 0.6)',\n                    'rgba(120, 162, 235, 0.6)',\n                  ],\n                  borderColor: this.color(\n                    this.layoutConfigService.getConfig('colors.state.brand')\n                  )\n                    .alpha(0)\n                    .rgbString(),\n\n                  pointHoverRadius: 4,\n                  pointHoverBorderWidth: 12,\n                  pointBackgroundColor: Chart.helpers\n                    .color('#000000')\n                    .alpha(0)\n                    .rgbString(),\n                  pointBorderColor: Chart.helpers\n                    .color('#000000')\n                    .alpha(0)\n                    .rgbString(),\n                  pointHoverBackgroundColor:\n                    this.layoutConfigService.getConfig('colors.state.brand'),\n                  pointHoverBorderColor: Chart.helpers\n                    .color('#000000')\n                    .alpha(0.1)\n                    .rgbString(),\n\n                  data: [\n                    this.lessonPlan.score,\n                    this.subjectMatterMastery.score,\n                    this.teachingMethod.score,\n                  ],\n                },\n              ],\n            };\n\n            this.chartUI.update();\n\n            this.changeDetectRef.detectChanges();\n          },\n          (error) => {\n            this.isloading = false;\n            this.changeDetectRef.detectChanges();\n          }\n        );\n    });\n  }\n  goBack() {\n    this.location.back();\n  }\n\n  initChartJS() {\n    // For more information about the chartjs, visit this link\n    // https://www.chartjs.org/docs/latest/getting-started/usage.html\n\n    this.chartUI = new Chart(this.chart.nativeElement, {\n      type: 'bar',\n      data: this.barChartData,\n      options: {\n        title: {\n          display: false,\n        },\n        tooltips: {\n          intersect: false,\n          mode: 'nearest',\n          xPadding: 10,\n          yPadding: 10,\n          caretPadding: 10,\n        },\n        legend: {\n          display: false,\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        barRadius: 4,\n        scales: {\n          xAxes: [\n            {\n              display: true,\n              gridLines: true,\n              stacked: true,\n            },\n          ],\n          yAxes: [\n            {\n              display: true,\n              stacked: true,\n              gridLines: true,\n            },\n          ],\n        },\n        layout: {\n          padding: {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0,\n          },\n        },\n      },\n    });\n  }\n}\n","module.exports = \".green-icon {\\n  color: #28a745 !important; }\\n\\n/* Note: If you're using an SVG icon, you should make the class target the `<svg>` element */\\n\\n.green-icon svg {\\n  fill: #28a745 !important; }\\n\\n.yellow-icon {\\n  color: #ffc107 !important; }\\n\\n/* Note: If you're using an SVG icon, you should make the class target the `<svg>` element */\\n\\n.yellow-icon svg {\\n  fill: #ffc107 !important; }\\n\\n.red-icon {\\n  color: #dc3545 !important; }\\n\\n/* Note: If you're using an SVG icon, you should make the class target the `<svg>` element */\\n\\n.red-icon svg {\\n  fill: #dc3545 !important; }\\n\\n.mat-icon {\\n  font-size: 30px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGFybGVzLm9udW9yYWgvRG9jdW1lbnRzL2NiYy9TY2hvb2xEYXNoYm9hcmQvc3JjL2FwcC92aWV3cy9wYWdlcy90ZWFjaGVycy90ZWFjaGVyLW1vZGFsLXZpZXcvdGVhY2hlci1tb2RhbC12aWV3LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQXlCLEVBQUE7O0FBRTNCLDRGQUFBOztBQUNBO0VBQ0Usd0JBQXdCLEVBQUE7O0FBRzFCO0VBQ0UseUJBQXlCLEVBQUE7O0FBRTNCLDRGQUFBOztBQUNBO0VBQ0Usd0JBQXdCLEVBQUE7O0FBRzFCO0VBQ0UseUJBQXlCLEVBQUE7O0FBRTNCLDRGQUFBOztBQUNBO0VBQ0Usd0JBQXdCLEVBQUE7O0FBRzFCO0VBQ0UsMEJBQTBCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9wYWdlcy90ZWFjaGVycy90ZWFjaGVyLW1vZGFsLXZpZXcvdGVhY2hlci1tb2RhbC12aWV3LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmdyZWVuLWljb24ge1xuICBjb2xvcjogIzI4YTc0NSAhaW1wb3J0YW50O1xufVxuLyogTm90ZTogSWYgeW91J3JlIHVzaW5nIGFuIFNWRyBpY29uLCB5b3Ugc2hvdWxkIG1ha2UgdGhlIGNsYXNzIHRhcmdldCB0aGUgYDxzdmc+YCBlbGVtZW50ICovXG4uZ3JlZW4taWNvbiBzdmcge1xuICBmaWxsOiAjMjhhNzQ1ICFpbXBvcnRhbnQ7XG59XG5cbi55ZWxsb3ctaWNvbiB7XG4gIGNvbG9yOiAjZmZjMTA3ICFpbXBvcnRhbnQ7XG59XG4vKiBOb3RlOiBJZiB5b3UncmUgdXNpbmcgYW4gU1ZHIGljb24sIHlvdSBzaG91bGQgbWFrZSB0aGUgY2xhc3MgdGFyZ2V0IHRoZSBgPHN2Zz5gIGVsZW1lbnQgKi9cbi55ZWxsb3ctaWNvbiBzdmcge1xuICBmaWxsOiAjZmZjMTA3ICFpbXBvcnRhbnQ7XG59XG5cbi5yZWQtaWNvbiB7XG4gIGNvbG9yOiAjZGMzNTQ1ICFpbXBvcnRhbnQ7XG59XG4vKiBOb3RlOiBJZiB5b3UncmUgdXNpbmcgYW4gU1ZHIGljb24sIHlvdSBzaG91bGQgbWFrZSB0aGUgY2xhc3MgdGFyZ2V0IHRoZSBgPHN2Zz5gIGVsZW1lbnQgKi9cbi5yZWQtaWNvbiBzdmcge1xuICBmaWxsOiAjZGMzNTQ1ICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtaWNvbiB7XG4gIGZvbnQtc2l6ZTogMzBweCAhaW1wb3J0YW50O1xufVxuIl19 */\"","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport {\n  MatDialogRef,\n  MatPaginator,\n  MatTableDataSource,\n  MAT_DIALOG_DATA,\n  PageEvent,\n  ProgressSpinnerMode,\n  ThemePalette,\n} from '@angular/material';\nimport moment from 'moment';\nimport { AppServiceService } from '../../../services/app-service/app-service.service';\nimport { LayoutConfigService } from '../../../../../app/core/_base/layout';\nimport { Teacher } from '../teachers.component';\nimport { TeachersService } from '../teachers.service';\n\nconst $ = window['$'];\n\n@Component({\n  selector: 'kt-teacher-modal-view',\n  templateUrl: './teacher-modal-view.component.html',\n  styleUrls: ['./teacher-modal-view.component.scss'],\n})\nexport class TeacherModalViewComponent implements OnInit, AfterViewInit {\n  @ViewChild('chart', { static: true }) chart: ElementRef;\n  color = Chart.helpers.color;\n  @Input() chartData: { labels: string[]; datasets: any[] } = {\n    labels: ['Absent', 'Present'],\n    datasets: [\n      {\n        fill: true,\n        // borderWidth: 0,\n        backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)'],\n        borderColor: this.color(\n          this.layoutConfigService.getConfig('colors.state.brand')\n        )\n          .alpha(0)\n          .rgbString(),\n\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 12,\n        pointBackgroundColor: Chart.helpers\n          .color('#000000')\n          .alpha(0)\n          .rgbString(),\n        pointBorderColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\n        pointHoverBackgroundColor:\n          this.layoutConfigService.getConfig('colors.state.brand'),\n        pointHoverBorderColor: Chart.helpers\n          .color('#000000')\n          .alpha(0.1)\n          .rgbString(),\n\n        data: [5, 2],\n      },\n    ],\n  };\n  @Input() type: string = 'line';\n  dateRange = new FormControl('');\n  ELEMENT_DATA: any[] = [];\n  displayedColumns = ['date', 'present', 'absent'];\n  dataSource = new MatTableDataSource<any>(this.ELEMENT_DATA);\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  chartUI;\n  length = 1000;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n  pageEvent: PageEvent;\n  pageIndex = 0;\n  previousPageIndex: 0;\n  colorSpinner: ThemePalette = 'primary';\n  mode: ProgressSpinnerMode = 'indeterminate';\n  value = 40;\n  isLoadingAssessmentRecord = false;\n\n  assessmentSummary: IAssessmentSummary[] = [];\n\n  dataBase: IAssessmentSummary[] = [];\n\n  constructor(\n    private layoutConfigService: LayoutConfigService,\n    public dialogRef: MatDialogRef<TeacherModalViewComponent>,\n    private teacherService: TeachersService,\n    private appService: AppServiceService,\n    @Inject(MAT_DIALOG_DATA)\n    public data: {\n      teacher: Teacher;\n    }\n  ) {}\n\n  ngOnInit() {\n    // this.dataSource.data = [1, 1, 1, 1, 2, 2, 3];\n    this.getTeacherCoachingOverView();\n  }\n\n  ngAfterViewInit() {\n    // this.dataSource.paginator = this.paginator;\n  }\n  getTeacherCoachingOverView() {\n    this.isLoadingAssessmentRecord = true;\n    this.teacherService\n      .getCoachingSummaryByTeacherID(this.data.teacher.id)\n      .subscribe(\n        (response) => {\n          this.isLoadingAssessmentRecord = false;\n          this.dataBase = response.data;\n          this.assessmentSummary = response.data.slice(0, this.pageSize);\n          this.length = this.dataBase.length;\n        },\n        (error) => {\n          this.isLoadingAssessmentRecord = false;\n        }\n      );\n  }\n  handlePageChange(event) {\n    console.log('event: ', event);\n    this.pageIndex = event.pageIndex;\n    this.pageSize = event.pageSize;\n\n    if (event.pageIndex > this.previousPageIndex) {\n      // fetch online record\n      this.previousPageIndex = event.previousPageIndex;\n    }\n\n    this.assessmentSummary = this.dataBase.slice(0, event.pageSize);\n  }\n  c(data) {\n    if (!data) {\n      this.appService.teacher.next(this.data.teacher);\n      // this.appService.assessment.next(this.)\n    }\n    this.dialogRef.close(data);\n  }\n  private initChart() {\n    // For more information about the chartjs, visit this link\n    // https://www.chartjs.org/docs/latest/getting-started/usage.html\n\n    this.chartUI = new Chart(this.chart.nativeElement, {\n      type: 'pie',\n      data: this.chartData,\n\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n\n        // legend: false,\n        scales: {\n          xAxes: [\n            {\n              categoryPercentage: 0.35,\n              barPercentage: 0.7,\n              display: true,\n              scaleLabel: {\n                display: false,\n                labelString: 'Month',\n              },\n              gridLines: false,\n              ticks: {\n                display: true,\n                beginAtZero: true,\n                fontColor: this.layoutConfigService.getConfig(\n                  'colors.base.shape.3'\n                ),\n                fontSize: 13,\n                padding: 10,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              categoryPercentage: 0.35,\n              barPercentage: 0.7,\n              display: true,\n              scaleLabel: {\n                display: false,\n                labelString: 'Value',\n              },\n              gridLines: {\n                color: this.layoutConfigService.getConfig(\n                  'colors.base.shape.2'\n                ),\n                drawBorder: false,\n                offsetGridLines: false,\n                drawTicks: false,\n                borderDash: [3, 4],\n                zeroLineWidth: 1,\n                zeroLineColor: this.layoutConfigService.getConfig(\n                  'colors.base.shape.2'\n                ),\n                zeroLineBorderDash: [3, 4],\n              },\n              ticks: {\n                max: 70,\n                stepSize: 10,\n                display: true,\n                beginAtZero: true,\n                fontColor: this.layoutConfigService.getConfig(\n                  'colors.base.shape.3'\n                ),\n                fontSize: 13,\n                padding: 10,\n              },\n            },\n          ],\n        },\n        title: {\n          display: false,\n        },\n        hover: {\n          mode: 'index',\n        },\n        tooltips: {\n          enabled: true,\n          intersect: false,\n          mode: 'nearest',\n          bodySpacing: 5,\n          yPadding: 10,\n          xPadding: 10,\n          caretPadding: 0,\n          displayColors: false,\n          backgroundColor:\n            this.layoutConfigService.getConfig('colors.state.brand'),\n          titleFontColor: '#ffffff',\n          cornerRadius: 4,\n          footerSpacing: 0,\n          titleSpacing: 0,\n        },\n        layout: {\n          padding: {\n            left: 0,\n            right: 0,\n            top: 5,\n            bottom: 5,\n          },\n        },\n      },\n    });\n  }\n  initialDatePicker() {\n    const $this = this;\n    $('input[name=\"daterange\"]').daterangepicker(\n      {\n        autoUpdateInput: false,\n        opens: 'left',\n        ranges: {\n          Today: [moment(), moment()],\n          Yesterday: [\n            moment().subtract(1, 'days'),\n            moment().subtract(1, 'days'),\n          ],\n          'Last 7 Days': [moment().subtract(6, 'days'), moment()],\n          'Last 30 Days': [moment().subtract(29, 'days'), moment()],\n          'This Month': [moment().startOf('month'), moment().endOf('month')],\n          'Last Month': [\n            moment().subtract(1, 'month').startOf('month'),\n            moment().subtract(1, 'month').endOf('month'),\n          ],\n        },\n      },\n      function (start, end, label) {\n        console.log(\n          'A new date selection was made: ' +\n            start.format('YYYY-MM-DD') +\n            ' to ' +\n            end.format('YYYY-MM-DD')\n        );\n        $this.dateRange.setValue(\n          `${start.format('YYYY-MM-DD')} to ${end.format('YYYY-MM-DD')}`\n        );\n      }\n    );\n  }\n  closeModal(data) {\n    this.dialogRef.close(data);\n  }\n}\n\nexport enum ScoreCategory {\n  NOT_MET = 'Not Met(Below 50)',\n  PARTIALLY_MET = 'Partially Met(50-70)',\n  EFFECTIVELY_MET = 'Effectively Met(60-75)',\n}\n\nexport interface IAssessmentSummary {\n  areas_of_improvement: string;\n  areas_of_strength: string;\n  class_observed: string;\n  date: string;\n  datecreated: Date;\n  id: number;\n  lesson_duration: string | null;\n  mentor: number;\n  score: string;\n  score_category: ScoreCategory;\n  teacherid: number;\n  topic: string;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EffectiveStateReportComponent } from './effective-state-report/effective-state-report.component';\nimport { TeacherAssessmentDetailComponent } from './teacher-assessment-detail/teacher-assessment-detail.component';\n\nimport { TeachersComponent } from './teachers.component';\n\nconst routes: Routes = [\n  {\n    path: 'teachers-by-qualification',\n    loadChildren: () =>\n      import('./teacher-by-qualification/teacher-by-qualification.module').then(\n        (m) => m.TeacherByQualificationModule\n      ),\n    pathMatch: 'full',\n  },\n  {\n    path: 'attendance-report',\n    loadChildren: () =>\n      import('./teacher-attendance/teacher-attendance.module').then(\n        (m) => m.TeacherAttendanceModule\n      ),\n    pathMatch: 'full',\n  },\n  {\n    path: 'view-attendance-report',\n    loadChildren: () =>\n      import('./teacher-report-detail/teacher-report-detail.module').then(\n        (m) => m.TeacherReportDetailModule\n      ),\n    pathMatch: 'full',\n  },\n  {\n    path: 'teachers-qualification-by-schoool',\n    loadChildren: () =>\n      import(\n        './teachers-qualification-by-school/teachers-qualification-by-school.module'\n      ).then((m) => m.TeachersQualificationBySchoolModule),\n    pathMatch: 'full',\n  },\n  {\n    path: 'teachers-distribution-by-subject',\n    loadChildren: () =>\n      import('./subject-distribution/subject-distribution.module').then(\n        (m) => m.SubjectDistributionModule\n      ),\n    pathMatch: 'full',\n  },\n\n  // {\n  //   path: 'teachers/coaching-mentoring/:id',\n  //   component: TeacherAssessmentDetailComponent,\n  // },\n  // {\n  //   path: 'teachers/coaching-mentoring',\n  //   component: TeacherAssessmentDetailComponent,\n  // },\n\n  {\n    path: '',\n\n    children: [\n      {\n        path: 'effectiveness-report-by-state',\n        component: EffectiveStateReportComponent,\n      },\n      { path: 'teacher/:id', component: TeachersComponent },\n      {\n        path: 'coaching-mentoring',\n        component: TeacherAssessmentDetailComponent,\n      },\n\n      { path: '', component: TeachersComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TeachersRoutingModule {}\n","module.exports = \".mat-header-cell {\\n  color: #000 !important;\\n  font-weight: bold; }\\n\\n.green-icon {\\n  color: #28a745 !important; }\\n\\n/* Note: If you're using an SVG icon, you should make the class target the `<svg>` element */\\n\\n.green-icon svg {\\n  fill: #28a745 !important; }\\n\\n.yellow-icon {\\n  color: #ffc107 !important; }\\n\\n/* Note: If you're using an SVG icon, you should make the class target the `<svg>` element */\\n\\n.yellow-icon svg {\\n  fill: #ffc107 !important; }\\n\\n.red-icon {\\n  color: #dc3545 !important; }\\n\\n/* Note: If you're using an SVG icon, you should make the class target the `<svg>` element */\\n\\n.red-icon svg {\\n  fill: #dc3545 !important; }\\n\\n.mat-icon {\\n  font-size: 30px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGFybGVzLm9udW9yYWgvRG9jdW1lbnRzL2NiYy9TY2hvb2xEYXNoYm9hcmQvc3JjL2FwcC92aWV3cy9wYWdlcy90ZWFjaGVycy90ZWFjaGVycy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHNCQUFzQjtFQUN0QixpQkFBaUIsRUFBQTs7QUFHbkI7RUFDRSx5QkFBeUIsRUFBQTs7QUFFM0IsNEZBQUE7O0FBQ0E7RUFDRSx3QkFBd0IsRUFBQTs7QUFHMUI7RUFDRSx5QkFBeUIsRUFBQTs7QUFFM0IsNEZBQUE7O0FBQ0E7RUFDRSx3QkFBd0IsRUFBQTs7QUFHMUI7RUFDRSx5QkFBeUIsRUFBQTs7QUFFM0IsNEZBQUE7O0FBQ0E7RUFDRSx3QkFBd0IsRUFBQTs7QUFHMUI7RUFDRSwwQkFBMEIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL3RlYWNoZXJzL3RlYWNoZXJzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1oZWFkZXItY2VsbCB7XG4gIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4uZ3JlZW4taWNvbiB7XG4gIGNvbG9yOiAjMjhhNzQ1ICFpbXBvcnRhbnQ7XG59XG4vKiBOb3RlOiBJZiB5b3UncmUgdXNpbmcgYW4gU1ZHIGljb24sIHlvdSBzaG91bGQgbWFrZSB0aGUgY2xhc3MgdGFyZ2V0IHRoZSBgPHN2Zz5gIGVsZW1lbnQgKi9cbi5ncmVlbi1pY29uIHN2ZyB7XG4gIGZpbGw6ICMyOGE3NDUgIWltcG9ydGFudDtcbn1cblxuLnllbGxvdy1pY29uIHtcbiAgY29sb3I6ICNmZmMxMDcgIWltcG9ydGFudDtcbn1cbi8qIE5vdGU6IElmIHlvdSdyZSB1c2luZyBhbiBTVkcgaWNvbiwgeW91IHNob3VsZCBtYWtlIHRoZSBjbGFzcyB0YXJnZXQgdGhlIGA8c3ZnPmAgZWxlbWVudCAqL1xuLnllbGxvdy1pY29uIHN2ZyB7XG4gIGZpbGw6ICNmZmMxMDcgIWltcG9ydGFudDtcbn1cblxuLnJlZC1pY29uIHtcbiAgY29sb3I6ICNkYzM1NDUgIWltcG9ydGFudDtcbn1cbi8qIE5vdGU6IElmIHlvdSdyZSB1c2luZyBhbiBTVkcgaWNvbiwgeW91IHNob3VsZCBtYWtlIHRoZSBjbGFzcyB0YXJnZXQgdGhlIGA8c3ZnPmAgZWxlbWVudCAqL1xuLnJlZC1pY29uIHN2ZyB7XG4gIGZpbGw6ICNkYzM1NDUgIWltcG9ydGFudDtcbn1cblxuLm1hdC1pY29uIHtcbiAgZm9udC1zaXplOiAzMHB4ICFpbXBvcnRhbnQ7XG59XG4iXX0= */\"","import {\n  Component,\n  OnInit,\n  ChangeDetectorRef,\n  ViewChild,\n  ElementRef,\n  Input,\n  AfterViewInit,\n} from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatTableDataSource, MatPaginator, MatDialog } from '@angular/material';\nimport { TeachersService } from './teachers.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport {\n  IState,\n  ILocalGovernments,\n  AppServiceService,\n} from '../../services/app-service/app-service.service';\nimport { School } from '../schools/schools.component';\nimport { SchoolsService } from '../schools/schools.service';\nimport { Chart } from 'chart.js/dist/Chart.min.js';\nimport { LayoutConfigService } from 'app/core/_base/layout';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport * as XLSX from 'xlsx';\nimport { UploadTeacherComponent } from './uploadteachers/upload-teacher-component';\nimport { TeacherModalViewComponent } from './teacher-modal-view/teacher-modal-view.component';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\nconst $ = window['$'];\n\n@Component({\n  selector: 'kt-teachers',\n  templateUrl: './teachers.component.html',\n  styleUrls: ['./teachers.component.scss'],\n})\nexport class TeachersComponent implements OnInit, AfterViewInit {\n  ELEMENT_DATA: Teacher[] = [];\n  displayedColumns = [\n    'select',\n    'registrationNumber',\n    'surname',\n    'otherNames',\n    'schoolName',\n    'gender',\n    'actions',\n  ];\n  dataSource = new MatTableDataSource<Teacher>(this.ELEMENT_DATA);\n  selection = new SelectionModel<Teacher>(true, []);\n  loading: Boolean = false;\n  teacherJsonFile;\n  editMode: Boolean = false;\n  school: Teacher;\n  title = 'My first AGM project';\n  lat = 51.678418;\n  lng = 7.809007;\n  loadingFilterBox = false;\n  statesSelected = new FormControl('', Validators.compose([]));\n  lgaSelected = new FormControl('', Validators.compose([]));\n  schoolSelected = new FormControl('', Validators.compose([]));\n\n  schools: School[] = [];\n\n  states: IState[] = [];\n  localgovernments: ILocalGovernments[] = [];\n\n  totalCount = 0;\n  schoolDataBase: School[] = [];\n\n  teacherDatabase: Teacher[] = [];\n  state_access: string;\n  totalMale = 0;\n  totalFemale = 0;\n  @Input() data: { labels: string[]; datasets: any[] } = {\n    labels: ['Male', 'Female'],\n    datasets: [\n      {\n        label: 'Male',\n        borderColor: this.layoutConfigService.getConfig('colors.state.brand'),\n        fill: false,\n        borderWidth: 2,\n        backgroundColor: Chart.helpers\n          .color(this.layoutConfigService.getConfig('colors.state.brand'))\n          .alpha(0.6)\n          .rgbString(),\n        // borderColor: this.color(\n        //   this.layoutConfigService.getConfig('colors.state.brand')\n        // )\n        //   .alpha(0)\n        //   .rgbString(),\n\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 12,\n        pointBackgroundColor: Chart.helpers\n          .color('#000000')\n          .alpha(0)\n          .rgbString(),\n        pointBorderColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\n        pointHoverBackgroundColor:\n          this.layoutConfigService.getConfig('colors.state.brand'),\n        pointHoverBorderColor: Chart.helpers\n          .color('#000000')\n          .alpha(0.1)\n          .rgbString(),\n\n        data: [0, 0, 0, 0, 0],\n      },\n\n      {\n        label: 'Female',\n        fill: false,\n        borderWidth: 2,\n        backgroundColor: Chart.helpers\n          .color(this.layoutConfigService.getConfig('colors.state.brand'))\n          .alpha(0.2)\n          .rgbString(),\n        borderColor: this.layoutConfigService.getConfig('colors.state.danger'),\n\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 12,\n        pointBackgroundColor: Chart.helpers\n          .color('#000000')\n          .alpha(0)\n          .rgbString(),\n        pointBorderColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\n        pointHoverBackgroundColor:\n          this.layoutConfigService.getConfig('colors.state.brand'),\n        pointHoverBorderColor: Chart.helpers\n          .color('#000000')\n          .alpha(0.1)\n          .rgbString(),\n\n        data: [0, 0],\n      },\n    ],\n  };\n  @ViewChild('chart', { static: true }) chart: ElementRef;\n  color = Chart.helpers.color;\n\n  chartUI;\n  // @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  constructor(\n    private changeDetectRef: ChangeDetectorRef,\n    private teacherService: TeachersService,\n    private schoolService: SchoolsService,\n    private appService: AppServiceService,\n    private layoutConfigService: LayoutConfigService,\n    private dialog: MatDialog,\n    private route: ActivatedRoute,\n    private location: Location,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.getTeachers();\n    this.getSchools();\n    this.getUserAccessibleState();\n    this.getUserAccessibleLocals();\n    this.state_access = this.appService.getUserStateAccess();\n    if (this.state_access.toLowerCase() !== 'all') {\n      this.statesSelected.setValue([this.state_access]);\n      this.statesSelected.disable();\n    }\n    this.route.params.subscribe((params) => {\n      console.log('params: ', params);\n    });\n  }\n\n  openDialog(htmlStr: any, file: any) {\n    const dialogRef = this.dialog.open(UploadTeacherComponent, {\n      maxWidth: '90vw',\n      minWidth: '60vw',\n      data: {\n        htmlStr,\n        schools: this.schoolDataBase,\n        states: this.states,\n        lga: this.localgovernments,\n        file,\n      },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n  initChartJS() {\n    // For more information about the chartjs, visit this link\n    // https://www.chartjs.org/docs/latest/getting-started/usage.html\n\n    this.chartUI = new Chart(this.chart.nativeElement, {\n      type: 'bar',\n      data: this.data,\n      options: {\n        title: {\n          display: false,\n        },\n        tooltips: {\n          intersect: false,\n          mode: 'nearest',\n          xPadding: 10,\n          yPadding: 10,\n          caretPadding: 10,\n        },\n        legend: {\n          display: false,\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        barRadius: 4,\n        scales: {\n          xAxes: [\n            {\n              display: true,\n              gridLines: true,\n              stacked: true,\n            },\n          ],\n          yAxes: [\n            {\n              display: true,\n              stacked: true,\n              gridLines: true,\n            },\n          ],\n        },\n        layout: {\n          padding: {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0,\n          },\n        },\n      },\n    });\n  }\n  getSchools() {\n    this.loadingFilterBox = true;\n    this.schoolService.getSchools().subscribe(\n      (data) => {\n        this.loadingFilterBox = false;\n        this.schools = data;\n        this.schoolDataBase = data;\n      },\n      (error) => {\n        this.loadingFilterBox = false;\n      }\n    );\n  }\n  ExportTOExcel() {\n    // let targetTableElm = document.getElementById('ExampleMaterialTable');\n    const data = [];\n    this.dataSource.filteredData.forEach((item) => {\n      const {\n        rightThumbTemplate,\n        leftThumbTemplate,\n        rightThumb,\n        leftThumb,\n        schoolId,\n        localid,\n        ...others\n      } = item;\n      data.push({ ...others });\n    });\n    const ws: XLSX.WorkSheet = XLSX.utils.json_to_sheet(data);\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n\n    /* save to file */\n    XLSX.writeFile(wb, 'teachers.xlsx');\n  }\n  getTeachers() {\n    this.loading = true;\n    this.teacherService.getTeachers().subscribe(\n      (data) => {\n        this.loading = false;\n        this.dataSource.data = data;\n        this.totalCount = data.length;\n        data.forEach((item) => {\n          if (item.gender.toLowerCase().trim() === 'male') {\n            this.totalMale += 1;\n          } else {\n            this.totalFemale += 1;\n          }\n        });\n        this.ELEMENT_DATA = data;\n        this.teacherDatabase = data;\n        this.data = {\n          labels: ['Female', 'Male'],\n          datasets: [\n            {\n              fill: true,\n              // borderWidth: 0,\n              backgroundColor: [\n                'rgba(255, 99, 132, 0.6)',\n                'rgba(54, 162, 235, 0.6)',\n              ],\n              borderColor: this.color(\n                this.layoutConfigService.getConfig('colors.state.brand')\n              )\n                .alpha(0)\n                .rgbString(),\n\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 12,\n              pointBackgroundColor: Chart.helpers\n                .color('#000000')\n                .alpha(0)\n                .rgbString(),\n              pointBorderColor: Chart.helpers\n                .color('#000000')\n                .alpha(0)\n                .rgbString(),\n              pointHoverBackgroundColor:\n                this.layoutConfigService.getConfig('colors.state.brand'),\n              pointHoverBorderColor: Chart.helpers\n                .color('#000000')\n                .alpha(0.1)\n                .rgbString(),\n\n              data: [this.totalFemale, this.totalMale],\n            },\n          ],\n        };\n\n        this.initChartJS();\n        this.changeDetectRef.detectChanges();\n        this.listenForRouteChange();\n      },\n      (error) => {\n        this.loading = false;\n        console.log(error);\n      }\n    );\n  }\n  listenForRouteChange() {\n    this.route.params.subscribe((param) => {\n      const teacher = this.teacherDatabase.find(\n        (item) => item.id === parseInt(param.id)\n      );\n\n      if (teacher) {\n        const dialogRef = this.dialog.open(TeacherModalViewComponent, {\n          maxWidth: '90vw',\n          minWidth: '60vw',\n          data: {\n            teacher,\n          },\n        });\n\n        dialogRef.afterClosed().subscribe((data) => {\n          if (data) {\n            this.location.back();\n          }\n        });\n      } else {\n      }\n    });\n  }\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    const $this = this;\n    $('.custom-file-input').on('change', function (e) {\n      const files = $(this).prop('files');\n      console.log(files);\n      const reader: any = new FileReader();\n      reader.onload = (e: any) => {\n        /* read workbook */\n        const bstr: string = e.target.result;\n        const wb: XLSX.WorkBook = XLSX.read(bstr, { type: 'binary' });\n\n        /* grab first sheet */\n        const wsname: string = wb.SheetNames[0];\n        const ws: XLSX.WorkSheet = wb.Sheets[wsname];\n\n        /* save data */\n        $this.teacherJsonFile = XLSX.utils.sheet_to_html(ws, {\n          editable: false,\n          id: 'table-teachers',\n        });\n\n        $this.openDialog($this.teacherJsonFile, files[0]);\n      };\n      reader.readAsBinaryString(files[0]);\n      // reader.readAsArrayBuffer(files[0]);\n      // const data = new Uint8Array(reader.result);\n      // var wb = XLSX.read(data, { type: 'array' });\n      // var htmlstr = XLSX.write(wb, {\n      //   sheet: 'Sheet1',\n      //   type: 'binary',\n      //   bookType: 'html',\n      // });\n      // console.log(htmlstr);\n      // $this.openDialog(htmlstr);\n    });\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.dataSource.data.forEach((row) => this.selection.select(row));\n  }\n  onRowElementClick(event: any, element: Teacher) {\n    console.log('element: ', element);\n  }\n  closeDetailPage() {\n    this.selection.clear();\n    this.editMode = false;\n  }\n  onStateSelectionChange(event: any) {\n    // if (this.statesSelected.value.includes('All')) {\n    //   const index = this.statesSelected.value.findIndex(\n    //     (item) => item === 'All'\n    //   );\n    //   const values = this.statesSelected.value;\n    //   values.splice(index, 1);\n    //   // this.statesSelected.setValue([...])\n    // }\n    if (!this.statesSelected.value.includes('All')) {\n      this.getUserAccessibleLocals(this.statesSelected.value);\n      this.schools = this.schoolDataBase.filter((item) =>\n        this.statesSelected.value.includes(item.state.trim())\n      );\n    } else {\n      this.getUserAccessibleLocals();\n      this.schools = this.schoolDataBase;\n    }\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  getUserAccessibleLocals(states = []) {\n    this.localgovernments = this.appService.getLocalGovernments(states);\n  }\n  getUserAccessibleState() {\n    this.states = this.appService.getStates(\n      this.appService.getUserStateAccess()\n    );\n  }\n\n  onlgaSelectionChange(event) {\n    if (!this.lgaSelected.value.includes('All')) {\n      this.schools = this.schoolDataBase.filter((item) =>\n        this.lgaSelected.value.includes(item.lga.trim())\n      );\n    } else {\n      if (this.statesSelected.value.includes('All')) {\n        this.schools = this.schoolDataBase;\n      } else {\n        this.schools = this.schoolDataBase.filter((item) =>\n          this.statesSelected.value.includes(item.state)\n        );\n      }\n    }\n  }\n  filterData() {\n    if (\n      this.lgaSelected.value.includes('All') &&\n      this.statesSelected.value.includes('All') &&\n      this.schoolSelected.value.includes('All')\n    ) {\n      this.dataSource.data = this.teacherDatabase;\n      this.reComputeGraph(this.dataSource.data);\n      this.totalCount = this.teacherDatabase.length;\n    } else if (this.schoolSelected.value.length > 0) {\n      if (!this.schoolSelected.value.includes('All')) {\n        this.dataSource.data = this.teacherDatabase.filter((item) =>\n          this.schoolSelected.value.includes(item.schoolName)\n        );\n        this.totalCount = this.dataSource.data.length;\n        this.reComputeGraph(this.dataSource.data);\n      } else {\n        this.dataSource.data = this.teacherDatabase;\n        this.totalCount = this.dataSource.data.length;\n        this.reComputeGraph(this.dataSource.data);\n      }\n    }\n\n    this.changeDetectRef.detectChanges();\n  }\n  exportPDF() {\n    const doc = new jsPDF({\n      orientation: 'landscape',\n    });\n\n    const columns = [];\n    Object.keys(this.dataSource.data[0])\n      .splice(0, 8)\n      .forEach((key) => {\n        columns.push({\n          header: key.toUpperCase(),\n          dataKey: key,\n        });\n      });\n    const data = [];\n    this.dataSource.data.forEach((item) => {\n      data.push({ ...item });\n    });\n    const user = this.appService.getUser();\n    autoTable(doc, {\n      columns: columns,\n      body: data,\n      didDrawPage: (dataArg) => {\n        doc.setFontSize(20);\n        doc.setTextColor(40);\n        if (user.state_access.toLocaleLowerCase() === 'all') {\n          doc.text('Teachers', dataArg.settings.margin.left, 10);\n        } else {\n          doc.text(`Teachers`, dataArg.settings.margin.left, 10);\n        }\n      },\n    });\n    doc.save('teachers.pdf');\n    // console.log('called in exit');\n  }\n  reComputeGraph(data: Teacher[]) {\n    this.totalFemale = 0;\n    this.totalMale = 0;\n    data.forEach((item) => {\n      if (item.gender.trim().toLowerCase() === 'male') {\n        this.totalMale += 1;\n      } else {\n        this.totalFemale += 1;\n      }\n    });\n\n    this.chartUI.data = {\n      labels: ['Female', 'Male'],\n      datasets: [\n        {\n          fill: true,\n          // borderWidth: 0,\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.6)',\n            'rgba(54, 162, 235, 0.6)',\n          ],\n          borderColor: this.color(\n            this.layoutConfigService.getConfig('colors.state.brand')\n          )\n            .alpha(0)\n            .rgbString(),\n\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 12,\n          pointBackgroundColor: Chart.helpers\n            .color('#000000')\n            .alpha(0)\n            .rgbString(),\n          pointBorderColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\n          pointHoverBackgroundColor:\n            this.layoutConfigService.getConfig('colors.state.brand'),\n          pointHoverBorderColor: Chart.helpers\n            .color('#000000')\n            .alpha(0.1)\n            .rgbString(),\n\n          data: [this.totalMale, this.totalFemale],\n        },\n      ],\n    };\n\n    this.chartUI.update();\n  }\n  private initChart() {\n    // For more information about the chartjs, visit this link\n    // https://www.chartjs.org/docs/latest/getting-started/usage.html\n\n    this.chartUI = new Chart(this.chart.nativeElement, {\n      type: 'bar',\n      data: this.data,\n\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n\n        // legend: false,\n        scales: {\n          xAxes: [\n            {\n              categoryPercentage: 0.35,\n              barPercentage: 0.7,\n              display: true,\n              scaleLabel: {\n                display: false,\n                labelString: 'Month',\n              },\n              gridLines: false,\n              ticks: {\n                display: true,\n                beginAtZero: true,\n                fontColor: this.layoutConfigService.getConfig(\n                  'colors.base.shape.3'\n                ),\n                fontSize: 13,\n                padding: 10,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              categoryPercentage: 0.35,\n              barPercentage: 0.7,\n              display: true,\n              scaleLabel: {\n                display: false,\n                labelString: 'Value',\n              },\n              gridLines: {\n                color: this.layoutConfigService.getConfig(\n                  'colors.base.shape.2'\n                ),\n                drawBorder: false,\n                offsetGridLines: false,\n                drawTicks: false,\n                borderDash: [3, 4],\n                zeroLineWidth: 1,\n                zeroLineColor: this.layoutConfigService.getConfig(\n                  'colors.base.shape.2'\n                ),\n                zeroLineBorderDash: [3, 4],\n              },\n              ticks: {\n                max: 70,\n                stepSize: 10,\n                display: true,\n                beginAtZero: true,\n                fontColor: this.layoutConfigService.getConfig(\n                  'colors.base.shape.3'\n                ),\n                fontSize: 13,\n                padding: 10,\n              },\n            },\n          ],\n        },\n        title: {\n          display: false,\n        },\n        hover: {\n          mode: 'index',\n        },\n        tooltips: {\n          enabled: true,\n          intersect: false,\n          mode: 'nearest',\n          bodySpacing: 5,\n          yPadding: 10,\n          xPadding: 10,\n          caretPadding: 0,\n          displayColors: false,\n          backgroundColor:\n            this.layoutConfigService.getConfig('colors.state.brand'),\n          titleFontColor: '#ffffff',\n          cornerRadius: 4,\n          footerSpacing: 0,\n          titleSpacing: 0,\n        },\n        layout: {\n          padding: {\n            left: 0,\n            right: 0,\n            top: 5,\n            bottom: 5,\n          },\n        },\n      },\n    });\n  }\n}\n\nexport interface Element {\n  schoolName: string;\n  schoolNumber: string;\n  lga: string;\n  state: string;\n  schoolCoordinate: string;\n}\n\nexport interface Teacher {\n  otherNames: string;\n  qualification: string;\n  gradeLevel: string;\n  designation: string;\n  maidenName: String;\n  gender: string;\n  surname: string;\n  registrationNumber: string;\n  oracleNumber: string;\n  state: string;\n  schoolName: string;\n  schoolId: number;\n  qualificationDate: string;\n  salarySource: string;\n  subjectTaught: string;\n  teacherClass: string;\n  teachingType: string;\n  remarks: string;\n  exitDate: Date;\n  email: string;\n  residentNumber: string;\n  pfaNumber: string;\n  telePhoneNumber: string;\n  homeAddress: string;\n  school: string;\n  dateOfPromotion: Date;\n  dateOfConfirmation: Date;\n  dateOfInterStateTravel: Date;\n  dateOfFirstAppointment: Date;\n  dateOfBirth: Date;\n  profile_url: string;\n  leftThumb: string;\n  id?: number;\n  leftThumbTemplate: string;\n  rightThumb: string;\n  rightThumbTemplate: string;\n  localid?: number;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TeachersRoutingModule } from './teachers-routing.module';\nimport { TeachersComponent } from './teachers.component';\nimport { CoreModule } from '../../../core/core.module';\nimport { PartialsModule } from '../../partials/partials.module';\n\nimport { AutocompleteComponent } from './formcontrols/autocomplete/autocomplete.component';\nimport { CheckboxComponent } from './formcontrols/checkbox/checkbox.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialPreviewModule } from '../../partials/content/general/material-preview/material-preview.module';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport {\n  MatAutocompleteModule,\n  MatNativeDateModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatRadioModule,\n  MatButtonModule,\n  MatCardModule,\n  MatChipsModule,\n  MatSelectModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatIconModule,\n  MatSliderModule,\n  MatPaginatorModule,\n  MatSortModule,\n  MatSidenavModule,\n  MatSnackBarModule,\n  MatStepperModule,\n  MatToolbarModule,\n  MatDividerModule,\n  MatTabsModule,\n  MatTableModule,\n  MatTooltipModule,\n  MatListModule,\n  MatGridListModule,\n  MatButtonToggleModule,\n  MatBottomSheetModule,\n  MatExpansionModule,\n  MatMenuModule,\n  MatTreeModule,\n  MAT_BOTTOM_SHEET_DATA,\n  MatBottomSheetRef,\n  MAT_DATE_LOCALE,\n  MAT_DATE_FORMATS,\n} from '@angular/material';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n// import {MatExpansionModule} from '@angular/material/expansion';\n\n// Form controls\nimport { DatepickerComponent } from './formcontrols/datepicker/datepicker.component';\nimport {\n  MatDatepickerModule,\n  MatDatepickerIntl,\n} from '@angular/material/datepicker';\nimport { FormfieldComponent } from './formcontrols/formfield/formfield.component';\nimport { InputComponent } from './formcontrols/input/input.component';\nimport { RadiobuttonComponent } from './formcontrols/radiobutton/radiobutton.component';\nimport { SelectComponent } from './formcontrols/select/select.component';\nimport { SliderComponent } from './formcontrols/slider/slider.component';\nimport { SlidertoggleComponent } from './formcontrols/slidertoggle/slidertoggle.component';\n// Navigation\nimport { MenuComponent } from './navigation/menu/menu.component';\nimport { SidenavComponent } from './navigation/sidenav/sidenav.component';\nimport { ToolbarComponent } from './navigation/toolbar/toolbar.component';\n// Layout\nimport { CardComponent } from './layout/card/card.component';\nimport { DividerComponent } from './layout/divider/divider.component';\nimport { ExpansionPanelComponent } from './layout/expansion-panel/expansion-panel.component';\nimport { GridListComponent } from './layout/grid-list/grid-list.component';\nimport { ListComponent } from './layout/list/list.component';\nimport { MaterialTabsComponent } from './layout/material-tabs/material-tabs.component';\nimport { StepperComponent } from './layout/stepper/stepper.component';\nimport { TreeComponent } from './layout/tree/tree.component';\nimport { DefaultFormsComponent } from './layout/default-forms/default-forms.component';\n// Buttons & indicators\nimport { ButtonComponent } from './buttons-and-indicators/button/button.component';\nimport { ButtonToggleComponent } from './buttons-and-indicators/button-toggle/button-toggle.component';\nimport { ChipsComponent } from './buttons-and-indicators/chips/chips.component';\nimport { IconComponent } from './buttons-and-indicators/icon/icon.component';\nimport { ProgressBarComponent } from './buttons-and-indicators/progress-bar/progress-bar.component';\nimport { ProgressSpinnerComponent } from './buttons-and-indicators/progress-spinner/progress-spinner.component';\nimport { RipplesComponent } from './buttons-and-indicators/ripples/ripples.component';\n// Popups & modals\n\nimport {\n  DialogComponent,\n  ModalComponent,\n  Modal2Component,\n  Modal3Component,\n} from './popups-and-modals/dialog/dialog.component';\nimport { SnackbarComponent } from './popups-and-modals/snackbar/snackbar.component';\nimport { MaterialTooltipComponent } from './popups-and-modals/material-tooltip/material-tooltip.component';\nimport { BottomSheetComponent } from './popups-and-modals/bottom-sheet/bottom-sheet.component';\nimport { BottomSheetExampleComponent } from './popups-and-modals/bottom-sheet/bottom-sheet-example/bottom-sheet-example.component';\nimport { PizzaPartyComponent } from './popups-and-modals/snackbar/pizza-party.component';\n// Data table\nimport { PaginatorComponent } from './data-table/paginator/paginator.component';\nimport { SortHeaderComponent } from './data-table/sort-header/sort-header.component';\nimport { MaterialTableComponent } from './data-table/material-table/material-table.component';\nimport { MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\n// import { SchoolsService } from './schools.service';\n// import { AgmCoreModule } from '@agm/core';\nimport { TeachersService } from './teachers.service';\nimport { SchoolsService } from '../schools/schools.service';\nimport { AppServiceService } from '../../services/app-service/app-service.service';\nimport { UploadTeacherComponent } from './uploadteachers/upload-teacher-component';\nimport { TeacherModalViewComponent } from './teacher-modal-view/teacher-modal-view.component';\nimport { TeacherAssessmentDetailComponent } from './teacher-assessment-detail/teacher-assessment-detail.component';\n//spiners\n\nimport { NgCircleProgressModule } from 'ng-circle-progress';\nimport { EffectiveStateReportComponent } from './effective-state-report/effective-state-report.component';\nimport { EffectiveStateReportDetailModalComponent } from './effective-state-report-detail-modal/effective-state-report-detail-modal.component';\n\n@NgModule({\n  declarations: [\n    TeachersComponent,\n    UploadTeacherComponent,\n    TeacherModalViewComponent,\n    TeacherAssessmentDetailComponent,\n    EffectiveStateReportComponent,\n    EffectiveStateReportDetailModalComponent,\n  ],\n  providers: [TeachersService, SchoolsService, AppServiceService],\n  imports: [\n    CommonModule,\n    TeachersRoutingModule,\n    CoreModule,\n    PartialsModule,\n    // AgmCoreModule.forRoot({\n    //   apiKey: 'AIzaSyC8aIKLtCcXqEHG_Gfm35Iahplw3HoKzLM',\n    // }),\n    NgCircleProgressModule.forRoot({\n      // set defaults here\n      radius: 100,\n      outerStrokeWidth: 16,\n      innerStrokeWidth: 8,\n      outerStrokeColor: '#78C000',\n      innerStrokeColor: '#C7E596',\n      animationDuration: 300,\n    }),\n    CommonModule,\n    PartialsModule,\n    CoreModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatAutocompleteModule,\n    MatListModule,\n    MatSliderModule,\n    MatCardModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatIconModule,\n    MatNativeDateModule,\n    MatSlideToggleModule,\n    MatCheckboxModule,\n    MatMenuModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatSidenavModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatGridListModule,\n    MatToolbarModule,\n    MatBottomSheetModule,\n    MatExpansionModule,\n    MatDividerModule,\n    MatSortModule,\n    MatStepperModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    MatDialogModule,\n    MatRippleModule,\n    CoreModule,\n    CommonModule,\n    MatRadioModule,\n    MatTreeModule,\n    MatButtonToggleModule,\n    PartialsModule,\n    MaterialPreviewModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  entryComponents: [\n    UploadTeacherComponent,\n    TeacherModalViewComponent,\n    EffectiveStateReportDetailModalComponent,\n  ],\n})\nexport class TeachersModule {}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'environments/environment';\nimport { throwError, Observable } from 'rxjs';\nimport {\n  HttpErrorResponse,\n  HttpClient,\n  HttpHeaders,\n} from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport { User } from '../../../core/auth/_models/user.model';\nimport { Teacher } from './teachers.component';\nimport { ITeacherQualificationByState } from './teacher-by-qualification/teacher-by-qualification.component';\nimport {\n  ITeacherAttendanceReport,\n  ITeacherAttendanceQueryParams,\n} from './teacher-attendance/teacher-attendance.component';\nimport { IAttendanceSummary } from '../students/student-attendance/student-attendance.component';\nimport {\n  ITeacherAttendaceQueryDetail,\n  ITeacherAttendanceDetail,\n} from './teacher-report-detail/teacher-report-detail.component';\nimport { IQualificationBySchool } from './teachers-qualification-by-school/teachers-qualification-by-school.component';\nimport { ISubJectDistribution } from './subject-distribution/subject-distribution.component';\nimport { IAssessmentSummary } from './teacher-modal-view/teacher-modal-view.component';\n\n// const BASE_URL = 'https://school-census.herokuapp.com';\nconst BASE_URL = 'http://159.89.90.214:8000';\n// const BASE_URL = 'http://localhost:8000';\nconst GET_ALL_SCHOOLS = '/api/v1/teacher/get-teachers';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TeachersService {\n  constructor(private http: HttpClient) {}\n  getTeachers() {\n    const user: User = JSON.parse(\n      localStorage.getItem(environment.authTokenKey)\n    );\n    return this.http\n      .get(`${BASE_URL}${GET_ALL_SCHOOLS}/${user.state_access}`, {\n        headers: new HttpHeaders({\n          Authorization: user.accessToken,\n        }),\n      })\n      .pipe(\n        map((response: any) => {\n          const teachers: Teacher[] = [];\n          response['data'].forEach((item) => {\n            teachers.push({\n              otherNames: item['othernames'],\n              surname: item['surname'],\n              gradeLevel: item['gradelevel'],\n              designation: item['designation'],\n              maidenName: item['maidenname'],\n              gender: item['gender'],\n\n              registrationNumber: item['registrationnumber'],\n              oracleNumber: item['oraclenumber'],\n              state: item['state'],\n              schoolName: item['schoolname'],\n              schoolId: item['schoolId'],\n              qualificationDate: item['qualificationdate'],\n              salarySource: item['salarysource'],\n              subjectTaught: item['subjecttaught'],\n              teacherClass: item['teacherclass'],\n              teachingType: item['teachingtype'],\n              remarks: item['remarks'],\n              exitDate: item['exitdate'],\n              email: item['email'],\n              residentNumber: item['residentnumber'],\n              pfaNumber: item['pfanumber'],\n              telePhoneNumber: item['telephonenumber'],\n              homeAddress: item['homeaddress'],\n              school: item['school'],\n              dateOfPromotion: item['dateofpromotion'],\n              dateOfConfirmation: item['dateOfconfirmation'],\n              dateOfInterStateTravel: item['dateOfinterstatetravel'],\n              dateOfFirstAppointment: item['dateofpromotion'],\n              dateOfBirth: item['dateofbirth'],\n              qualification: item['qualification'],\n              profile_url: item['profile_url'],\n              leftThumb: item['leftthumb'],\n              leftThumbTemplate: item['leftthumbtemplate'],\n              rightThumb: item['rightthumb'],\n              rightThumbTemplate: item['rightthumbtemplate'],\n              localid: item['localid'],\n              id: item['id'],\n            });\n          });\n          // console.log(response);\n          return teachers;\n        }),\n        catchError(this.handleHttpError)\n      );\n  }\n  getCoachingReportByState(\n    state?: string,\n    lga?: string,\n    startDate?: string,\n    endDate?: string,\n    school?: string\n  ) {\n    const user: User = JSON.parse(\n      localStorage.getItem(environment.authTokenKey)\n    );\n    return this.http\n      .get(\n        `${BASE_URL}/api/v1/coaching-mentoring/get-report-by-state?state=${state}&lga=${lga}&startDate=${startDate}&endDate=${endDate}&school=${school}`,\n        {\n          headers: new HttpHeaders({\n            Authorization: user.accessToken,\n          }),\n        }\n      )\n      .pipe(\n        map((response) => response['data']),\n        catchError(this.handleHttpError)\n      );\n  }\n  getCoachingReportByStateDrillDownCategory(\n    category?: string,\n    state?: string,\n    lga?: string,\n    startDate?: string,\n    endDate?: string,\n    school?: string\n  ) {\n    const user: User = JSON.parse(\n      localStorage.getItem(environment.authTokenKey)\n    );\n    return this.http\n      .get(\n        `${BASE_URL}/api/v1/coaching-mentoring/get-report-by-state-drilldow-by-category?category=${category}&state=${state}&lga=${lga}&startDate=${startDate}&endDate=${endDate}&school=${school}`,\n        {\n          headers: new HttpHeaders({\n            Authorization: user.accessToken,\n          }),\n        }\n      )\n      .pipe(\n        map((response) => ({\n          data: response['data'].sort((item1: any, item2: any) => {\n            if (new Date(item1.date) > new Date(item2.date)) {\n              return -1;\n            } else if (new Date(item1.date) < new Date(item2.date)) {\n              return 1;\n            }\n            return 0;\n          }),\n          totalRecord: 1000,\n        })),\n        catchError(this.handleHttpError)\n      );\n  }\n  getCoachingAssessmentByID(id: number): Observable<any> {\n    const user: User = JSON.parse(\n      localStorage.getItem(environment.authTokenKey)\n    );\n    return this.http\n      .get(`${BASE_URL}/api/v1/coaching-mentoring/${id}`, {\n        headers: new HttpHeaders({\n          Authorization: user.accessToken,\n        }),\n      })\n      .pipe(\n        map((response) => response['data']),\n        catchError(this.handleHttpError)\n      );\n  }\n  getCoachingSummaryByTeacherID(\n    id: number,\n    start = 0,\n    count = 1000\n  ): Observable<{ data: IAssessmentSummary[]; totalRecord: number }> {\n    const user: User = JSON.parse(\n      localStorage.getItem(environment.authTokenKey)\n    );\n\n    return this.http\n      .get(\n        `${BASE_URL}/api/v1/coaching-mentoring/teacher/${id}?start=${start}&count=${count}`,\n        {\n          headers: new HttpHeaders({\n            Authorization: user.accessToken,\n          }),\n        }\n      )\n      .pipe(\n        map((response) => ({\n          data: response['data'].sort((item1: any, item2: any) => {\n            if (new Date(item1.date) > new Date(item2.date)) {\n              return -1;\n            } else if (new Date(item1.date) < new Date(item2.date)) {\n              return 1;\n            }\n            return 0;\n          }),\n          totalRecord: response['totalRecord'],\n        })),\n        catchError(this.handleHttpError)\n      );\n  }\n  getTeacherAttendanceReportAll(): Observable<ITeacherAttendanceReport[]> {\n    const user: User = JSON.parse(\n      localStorage.getItem(environment.authTokenKey)\n    );\n    return this.http\n      .get(\n        `${BASE_URL}/api/v1/attendance/teacher/get-all-attendance-report?state=${user.state_access}`\n      )\n      .pipe(\n        map((response) => {\n          const data: ITeacherAttendanceReport[] = [];\n          response['response'].forEach((item) =>\n            data.push({ date: item.data, count: item.count })\n          );\n          return data;\n        }),\n        catchError(this.handleHttpError)\n      );\n  }\n  getAttendanceReportDetail(params: ITeacherAttendaceQueryDetail) {\n    return this.http.post(`${BASE_URL}/`, params);\n  }\n  getAttendanceReport(\n    params: ITeacherAttendanceQueryParams\n  ): Observable<IAttendanceSummary[]> {\n    return this.http\n      .post<IAttendanceSummary[]>(\n        `${BASE_URL}/api/v1/attendance/teachers/get-attendance-report`,\n        params\n      )\n      .pipe(\n        map((response) => {\n          const data: IAttendanceSummary[] = [];\n          response['data'].forEach((item) =>\n            data.push({ count: item['count'], date: item['date'] })\n          );\n          return data;\n        }),\n        catchError(this.handleHttpError)\n      );\n  }\n  getTeacherAttendanceReportDetail(\n    params: ITeacherAttendaceQueryDetail\n  ): Observable<ITeacherAttendanceDetail[]> {\n    return this.http\n      .post<ITeacherAttendanceDetail[]>(\n        `${BASE_URL}/api/v1/attendance/teachers/get-attendance-report-detail`,\n        params\n      )\n      .pipe(\n        map((response) => {\n          const data: ITeacherAttendanceDetail[] = [];\n          response['data'].forEach((item) =>\n            data.push({\n              attendanceDate: item['date'],\n              oracleNumber: item['oraclenumber'],\n              fullName: `${item['surname']} ${item['othernames']}`,\n              status: item['status'],\n            })\n          );\n          return data;\n        }),\n        catchError(this.handleHttpError)\n      );\n  }\n  getTeachersQualificationByState(): Observable<\n    ITeacherQualificationByState[]\n  > {\n    const user: User = JSON.parse(\n      localStorage.getItem(environment.authTokenKey)\n    );\n    return this.http\n      .get<ITeacherQualificationByState[]>(\n        `${BASE_URL}/api/v1/teacher/filter-report/state?state=${user.state_access}`\n      )\n      .pipe(\n        map((response: any) => {\n          const data: ITeacherQualificationByState[] = [];\n          response.forEach((item) => {\n            data.push({\n              count: item.count,\n              qualification: item.qualification,\n              state: item.state,\n            });\n          });\n          console.log(response);\n          return data;\n        }),\n        catchError(this.handleHttpError)\n      );\n  }\n  getTeacherSubjectDistribution(): Observable<ISubJectDistribution[]> {\n    const user: User = JSON.parse(\n      localStorage.getItem(environment.authTokenKey)\n    );\n    return this.http\n      .get<ISubJectDistribution[]>(\n        `${BASE_URL}/api/v1/teacher/filter-report/teacher-subject-distribution?state=${user.state_access}`\n      )\n      .pipe(catchError(this.handleHttpError));\n  }\n  getTeachersQualificationBySchool(): Observable<IQualificationBySchool[]> {\n    const user: User = JSON.parse(\n      localStorage.getItem(environment.authTokenKey)\n    );\n    return this.http\n      .get<IQualificationBySchool[]>(\n        `${BASE_URL}/api/v1/teacher/qualification/filter-report-by-school/state?state=${user.state_access}`\n      )\n      .pipe(\n        map((response: any) => {\n          const data: IQualificationBySchool[] = [];\n          response.forEach((item) => {\n            data.push({\n              count: item.count,\n              qualification: item.qualification,\n              state: item.state,\n              schoolName: item.schoolname,\n            });\n          });\n          console.log(response);\n          return data;\n        }),\n        catchError(this.handleHttpError)\n      );\n  }\n  handleHttpError(error: HttpErrorResponse) {\n    if (error.error instanceof Error) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, body was: ${error.error}`\n      );\n      console.error(error.error);\n    }\n\n    // If you want to return a new response:\n    //return of(new HttpResponse({body: [{name: \"Default value...\"}]}));\n\n    // If you want to return the error on the upper level:\n    //return throwError(error);\n\n    // or just return nothing:\n    return throwError(error);\n  }\n}\n","module.exports = \".html {\\n  min-height: 200px;\\n  max-height: 300px;\\n  overflow-y: scroll; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGFybGVzLm9udW9yYWgvRG9jdW1lbnRzL2NiYy9TY2hvb2xEYXNoYm9hcmQvc3JjL2FwcC92aWV3cy9wYWdlcy90ZWFjaGVycy91cGxvYWR0ZWFjaGVycy91cGxvYWQtdGVhY2hlci1jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtFQUNqQixpQkFBaUI7RUFDakIsa0JBQWtCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9wYWdlcy90ZWFjaGVycy91cGxvYWR0ZWFjaGVycy91cGxvYWQtdGVhY2hlci1jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5odG1sIHtcbiAgbWluLWhlaWdodDogMjAwcHg7XG4gIG1heC1oZWlnaHQ6IDMwMHB4O1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG4iXX0= */\"","import {\n  Component,\n  OnInit,\n  Inject,\n  ViewChild,\n  ElementRef,\n  AfterViewInit,\n  AfterContentInit,\n} from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport * as excel2table from 'excel2table';\nimport { School } from '../../schools/schools.component';\nimport {\n  AppServiceService,\n  ILocalGovernments,\n  IState,\n} from '../../../services/app-service/app-service.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport * as XLSX from 'xlsx';\n\nconst $ = window['$'];\n\n@Component({\n  selector: 'kt-view-product',\n  templateUrl: './upload-teacher-component.html',\n  styleUrls: ['./upload-teacher-component.scss'],\n})\nexport class UploadTeacherComponent implements OnInit, AfterContentInit {\n  schools: School[] = [];\n\n  states: IState[] = [];\n  localgovernments: ILocalGovernments[] = [];\n  schoolNotSelected: boolean = false;\n  totalCount = 0;\n  schoolDataBase: School[] = [];\n  loading: boolean = false;\n  statesSelected = new FormControl('', Validators.compose([]));\n  lgaSelected = new FormControl('', Validators.compose([]));\n  schoolSelected = new FormControl('', Validators.compose([]));\n  constructor(\n    private el: ElementRef,\n    public dialogRef: MatDialogRef<UploadTeacherComponent>,\n    @Inject(MAT_DIALOG_DATA)\n    public data: {\n      htmlStr: any;\n      schools: School[];\n      states: IState[];\n      lga: ILocalGovernments[];\n      file: any;\n    },\n    // private location: Location,\n    private router: Router,\n    private appService: AppServiceService\n  ) {\n    // this.product = this.data.product;\n  }\n\n  onStateSelectionChange(event: any) {\n    // if (this.statesSelected.value.includes('All')) {\n    //   const index = this.statesSelected.value.findIndex(\n    //     (item) => item === 'All'\n    //   );\n    //   const values = this.statesSelected.value;\n    //   values.splice(index, 1);\n    //   // this.statesSelected.setValue([...])\n    // }\n    if (!this.statesSelected.value.includes('All')) {\n      this.getUserAccessibleLocals(this.statesSelected.value);\n      this.schools = this.schoolDataBase.filter((item) =>\n        this.statesSelected.value.includes(item.state.trim())\n      );\n    } else {\n      this.getUserAccessibleLocals();\n      this.schools = this.schoolDataBase;\n    }\n  }\n\n  getUserAccessibleLocals(states = []) {\n    this.localgovernments = this.appService.getLocalGovernments(states);\n  }\n\n  onlgaSelectionChange(event) {\n    if (!this.lgaSelected.value.includes('All')) {\n      this.schools = this.schoolDataBase.filter((item) =>\n        this.lgaSelected.value.includes(item.lga.trim())\n      );\n    } else {\n      if (this.statesSelected.value.includes('All')) {\n        this.schools = this.schoolDataBase;\n      } else {\n        this.schools = this.schoolDataBase.filter((item) =>\n          this.statesSelected.value.includes(item.state)\n        );\n      }\n    }\n  }\n\n  ngAfterContentInit() {\n    // excel2table.render($('.html'), this.data.file);\n    $('.html').append(this.data.htmlStr);\n    $('table').addClass('table table-striped');\n    $('table th').attr('scope', 'col');\n    this.schools = this.data.schools;\n    this.states = this.data.states;\n    this.schoolDataBase = this.data.schools;\n    this.localgovernments = this.data.lga;\n  }\n\n  ngOnInit(): void {}\n\n  c(closed) {\n    // console.log(closed);\n\n    this.dialogRef.close(closed);\n  }\n  updateCategory() {}\n  closeModal() {\n    this.dialogRef.close();\n  }\n  filterData() {}\n\n  async uploadTeachers() {\n    try {\n      this.schoolNotSelected = false;\n      if (this.data.file === null) {\n        return;\n      }\n      if (this.schoolSelected.value.trim() === '') {\n        this.schoolNotSelected = true;\n      }\n      console.log(this.data);\n\n      const jsonData = await this.convertFileToJSON(this.data.file);\n      console.log('jsondata: ', jsonData);\n\n      return;\n\n      const index = this.schoolDataBase.findIndex(\n        (item) =>\n          item.schoolName.toLowerCase().trim() ===\n          this.schoolSelected.value.trim().toLowerCase()\n      );\n      if (index !== -1) {\n        const school = this.schoolDataBase[index];\n        this.loading = true;\n        // this.studentService\n        //   .handleBulkUpload({ schoolId: school.id, students: jsonData })\n        //   .subscribe(\n        //     (data) => {\n        //       this.loading = false;\n        //       console.log(data);\n        //       $('.html').empty();\n        //       this.actionSuccessful = true;\n        //       this.data.file = null;\n        //     },\n        //     (error) => {\n        //       this.loading = false;\n        //       console.log(error);\n        //     }\n        //   );\n      }\n    } catch (error) {\n      this.loading = false;\n    }\n  }\n\n  convertFileToJSON(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n        /* read workbook */\n        const bstr: string = e.target.result;\n        const wb: XLSX.WorkBook = XLSX.read(bstr, { type: 'binary' });\n\n        /* grab first sheet */\n        const wsname: string = wb.SheetNames[0];\n        const ws: XLSX.WorkSheet = wb.Sheets[wsname];\n\n        /* save data */\n        const studentJSONfile = XLSX.utils.sheet_to_json(ws);\n\n        resolve(studentJSONfile);\n      };\n      reader.readAsBinaryString(file);\n    });\n  }\n}\n"],"sourceRoot":""}